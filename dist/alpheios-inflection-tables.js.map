{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./l10n/l10n.js","webpack:///./l10n/message-bundle.js","webpack:///./lib/extended-greek-data.js","webpack:///./lib/extended-language-data.js","webpack:///./lib/footnote.js","webpack:///./lib/form.js","webpack:///./lib/inflection-data.js","webpack:///./lib/inflection-set.js","webpack:///./lib/inflections.js","webpack:///./lib/lang/greek/data/noun/footnotes.csv","webpack:///./lib/lang/greek/data/noun/suffixes.csv","webpack:///./lib/lang/greek/data/pronoun/footnotes.csv","webpack:///./lib/lang/greek/data/pronoun/forms.csv","webpack:///./lib/lang/greek/data/verb-participle/paradigm/rules.csv","webpack:///./lib/lang/greek/data/verb/paradigm/footnotes.csv","webpack:///./lib/lang/greek/data/verb/paradigm/rules.csv","webpack:///./lib/lang/greek/greek-language-dataset.js","webpack:///./lib/lang/latin/data/adjective/footnotes.csv","webpack:///./lib/lang/latin/data/adjective/suffixes.csv","webpack:///./lib/lang/latin/data/noun/footnotes.csv","webpack:///./lib/lang/latin/data/noun/suffixes.csv","webpack:///./lib/lang/latin/data/participle/suffixes.csv","webpack:///./lib/lang/latin/data/pronoun/footnotes.csv","webpack:///./lib/lang/latin/data/pronoun/forms.csv","webpack:///./lib/lang/latin/data/supine/suffixes.csv","webpack:///./lib/lang/latin/data/verb/footnotes.csv","webpack:///./lib/lang/latin/data/verb/form_footnotes.csv","webpack:///./lib/lang/latin/data/verb/forms.csv","webpack:///./lib/lang/latin/data/verb/suffixes.csv","webpack:///./lib/lang/latin/latin-language-dataset.js","webpack:///./lib/language-dataset-factory.js","webpack:///./lib/language-dataset.js","webpack:///./lib/match-data.js","webpack:///./lib/morpheme.js","webpack:///./lib/paradigm-rule.js","webpack:///./lib/paradigm.js","webpack:///./lib/suffix.js","webpack:///./node_modules/papaparse/papaparse.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///./views/lang/greek/greek-view.js","webpack:///./views/lang/greek/noun/greek-noun-simplified-view.js","webpack:///./views/lang/greek/noun/greek-noun-view.js","webpack:///./views/lang/greek/paradigm/greek-paradigm-view.js","webpack:///./views/lang/greek/pronoun/greek-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-lemma-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-person-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-person-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-pronoun-view.js","webpack:///./views/lang/latin/adjective/latin-adjective-view.js","webpack:///./views/lang/latin/latin-view.js","webpack:///./views/lang/latin/noun/latin-noun-view.js","webpack:///./views/lang/latin/noun/latin-supine-view.js","webpack:///./views/lang/latin/verb/latin-conjugation-mood-voice-view.js","webpack:///./views/lang/latin/verb/latin-conjugation-voice-mood-view.js","webpack:///./views/lang/latin/verb/latin-imperative-view.js","webpack:///./views/lang/latin/verb/latin-infinitive-view.js","webpack:///./views/lang/latin/verb/latin-mood-conjugation-voice-view.js","webpack:///./views/lang/latin/verb/latin-mood-voice-conjugation-view.js","webpack:///./views/lang/latin/verb/latin-verb-mood-view.js","webpack:///./views/lang/latin/verb/latin-verb-participle-view.js","webpack:///./views/lang/latin/verb/latin-verb-view.js","webpack:///./views/lang/latin/verb/latin-voice-conjugation-mood-view.js","webpack:///./views/lang/latin/verb/latin-voice-mood-conjugation-view.js","webpack:///./views/lib/cell.js","webpack:///./views/lib/column.js","webpack:///./views/lib/group-feature-list.js","webpack:///./views/lib/group-feature-type.js","webpack:///./views/lib/header-cell.js","webpack:///./views/lib/narrow-view-group.js","webpack:///./views/lib/narrow-view.js","webpack:///./views/lib/node-group.js","webpack:///./views/lib/row-title-cell.js","webpack:///./views/lib/row.js","webpack:///./views/lib/table.js","webpack:///./views/lib/view-set.js","webpack:///./views/lib/view.js","webpack:///./views/lib/wide-view.js","webpack:///./views/styles/styles.js","webpack:///external \"alpheios-data-models\"","webpack:///external \"intl-messageformat\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;;;;;;;;;ACPR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,eAAe,KAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO,wCAAwC,mBAAmB;AACrG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,qEAAqE,iBAAiB;AACtF;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;;;;;;;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;AC5HA;AACA;;AAEA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClFkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA,2+G;;;;;;;;;;;ACAA,kkxC;;;;;;;;;;;ACAA,sN;;;;;;;;;;;ACAA,k4rC;;;;;;;;;;;ACAA,umK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,oU;;;;;;;;;;;ACAA,4gqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzmBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,2BAA2B;AAC3B,2BAA2B;AAC3B,4BAA4B;AAC5B,2BAA2B;AAC3B,yBAAyB;;AAEzmBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;;AAEA,6BAA6B;AAC7B,0BAA0B;AAC1B,yBAAyB;AACzB,0BAA0B;AAC1B,4BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,0DAA0D,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yIAAkD;AAClD;AACA,2IAAoD;AACpD;;AAEA;AACA;AACA,sIAA+C;AAC/C;AACA,8IAAuD;AACvD;;AAEA;AACA;AACA;AACA;AACA,0LAAiG;AACjG;AACA,mOAA0F;;AAE1F;AACA;AACA;AACA;AACA,+MAAqH;AACrH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrcA,o4B;;;;;;;;;;;ACAA,gyM;;;;;;;;;;;ACAA,sPAAsP,62B;;;;;;;;;;;ACAtP,muX;;;;;;;;;;;ACAA,ghH;;;;;;;;;;;ACAA,ijB;;;;;;;;;;;ACAA,83GAA83G,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,+FAA+F,cAAc,mGAAmG,cAAc,kGAAkG,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,gGAAgG,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,kGAAkG,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,kGAAkG,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,8FAA8F,cAAc,mGAAmG,cAAc,gGAAgG,cAAc,sFAAsF,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,6FAA6F,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,8FAA8F,cAAc,iGAAiG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,iGAAiG,cAAc,oFAAoF,cAAc,+FAA+F,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,gGAAgG,cAAc,oFAAoF,cAAc,8FAA8F,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,6FAA6F,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,oFAAoF,cAAc,iGAAiG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,iGAAiG,cAAc,oFAAoF,cAAc,8EAA8E,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,gGAAgG,cAAc,oFAAoF,cAAc,oFAAoF,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,6FAA6F,cAAc,iGAAiG,cAAc,+FAA+F,cAAc,oFAAoF,cAAc,iGAAiG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,iGAAiG,cAAc,oFAAoF,cAAc,oFAAoF,cAAc,gGAAgG,cAAc,iGAAiG,cAAc,kFAAkF,cAAc,gGAAgG,cAAc,oFAAoF,cAAc,4FAA4F,qHAAqH,mHAAmH,iHAAiH,sHAAsH,mHAAmH,mHAAmH,qHAAqH,oHAAoH,kHAAkH,sHAAsH,mHAAmH,mHAAmH,sHAAsH,mHAAmH,iHAAiH,sHAAsH,mHAAmH,oHAAoH,qHAAqH,mHAAmH,iHAAiH,sHAAsH,mHAAmH,sGAAsG,qHAAqH,oHAAoH,kHAAkH,sHAAsH,mHAAmH,sGAAsG,qHAAqH,mHAAmH,iHAAiH,sHAAsH,mHAAmH,sGAAsG,mHAAmH,oHAAoH,gHAAgH,oHAAoH,kHAAkH,iHAAiH,oHAAoH,oHAAoH,kGAAkG,oHAAoH,oGAAoG,kHAAkH,mHAAmH,oHAAoH,kGAAkG,mHAAmH,oGAAoG,iHAAiH,mHAAmH,oHAAoH,gHAAgH,oHAAoH,kHAAkH,oGAAoG,oHAAoH,oHAAoH,kGAAkG,oHAAoH,oGAAoG,8FAA8F,mHAAmH,oHAAoH,kGAAkG,mHAAmH,oGAAoG,g6TAAg6T,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,qFAAqF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,+EAA+E,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,+EAA+E,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,+EAA+E,gBAAgB,gBAAgB,gBAAgB,mFAAmF,gBAAgB,gBAAgB,gBAAgB,iFAAiF,gBAAgB,gBAAgB,gBAAgB,4hQ;;;;;;;;;;;ACAl7pC,4kC;;;;;;;;;;;ACAA,unC;;;;;;;;;;;ACAA,+pC;;;;;;;;;;;ACAA,s0uC;;;;;;;;;;;ACAA,u40D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yIAAkD;AAClD;AACA,2IAAoD;AACpD;;AAEA;AACA;AACA,sIAA+C;AAC/C;AACA,8IAAuD;AACvD;;AAEA;AACA;AACA,8IAAuD;AACvD;AACA,gJAAyD;AACzD;;AAEA;AACA;AACA,0IAAkD;AAClD;AACA,4IAAoD;AACpD;AACA,oIAA4C;AAC5C;AACA,iJAAwD;AACxD;;AAEA;AACA;AACA,gJAA4D;AAC5D;;AAEA;AACA;AACA,4IAAwD;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxYA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpE2D;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB,QAAQ,UAAU;AAClB,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB,QAAQ,UAAU;AAClB,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY;AACZ;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,aAAa;AACjG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;AC/XA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,OAAO,iBAAiB,OAAO;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,4DAA4D;;AAEnG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;;;;;;;;;;;;;;;;AChDA;;AAEA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA,QAWA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,aAAa;AACjD,sCAAsC,eAAe;AACrD,sCAAsC,eAAe;;AAErD;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA,wCAAwC;AACxC,wCAAwC;AACxC,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,iCAAiC;AACjC,MAAM;AACN;AACA,IAAI;;AAEJ,mBAAmB;AACnB,eAAe;;;AAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AAOA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,gCAAgC,2CAA2C;AAC3E;AACA;AACA,6BAA6B;AAC7B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,kCAAkC;;AAElC,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU,cAAc,EAAE,EAAE;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB,aAAa;AACb,cAAc;AACd,sBAAsB;AACtB,uBAAuB;AACvB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA,qBAAqB,QAAQ,eAAe,EAAE,iBAAiB,QAAQ,gBAAgB,EAAE;AACzF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,8CAA8C;AAChE,mBAAmB,6BAA6B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA,iCAAiC;;AAEjC,mBAAmB,6BAA6B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAA8B,gBAAgB,EAAE;AAClF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACzjDD;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC/BA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;AC5BmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtD0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5D0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjD0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA,cAAc,aAAa,EAAE,iGAAiD;AAC9E;;AAEA;AACA,cAAc,aAAa,GAAG,+BAA+B;AAC7D;;AAEA;AACA,+EAA+B,aAAa,GAAG,+BAA+B;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5GiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvCiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrCiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC3CiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC3CuE;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2GAAsD;AACtD,0GAAqD;AACrD,wGAAmD;AACnD,qDAAqD;AACrD,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA,cAAc,aAAa,EAAE,gGAAgD;AAC7E;;AAEA;AACA,cAAc,aAAa,GAAG,8BAA8B;AAC5D;;AAEA;AACA,+EAA+B,aAAa,GAAG,8BAA8B;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxImD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5CmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA,kGAA6C;AAC7C,kGAA6C;AAC7C,kGAA6C;AAC7C,kGAA6C;AAC7C,kGAA6C;;AAE7C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7EmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvCmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC3DwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClDwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjDmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClEmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChEwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1CwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1CwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClCmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxDmD;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA,oGAA+C;AAC/C,oGAA+C;AAC/C,oGAA+C;AAC/C,oGAA+C;;AAE/C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzDwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClDwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/FsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,kCAAkC;AACjE;;AAEA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjK+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA,+BAA+B,oCAAoC;AACnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnXkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9F+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,cAAc;AAC3B,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA,wCAAwC,KAAK,KAAK,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB,EAAE,eAAe;AAChF;AACA;AACA;;;;;;;;;;;;;;;;;ACjNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;;;;;;;;;;;;AChDR,kE;;;;;;;;;;;ACAA,gE","file":"alpheios-inflection-tables.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"alpheios-data-models\"), require(\"intl-messageformat\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"alpheios-data-models\", \"intl-messageformat\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"alpheios-data-models\"), require(\"intl-messageformat\")) : factory(root[\"alpheios-data-models\"], root[\"intl-messageformat\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_alpheios_data_models__, __WEBPACK_EXTERNAL_MODULE_intl_messageformat__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import InflectionData from './lib/inflection-data.js'\nimport LanguageDatasetFactory from './lib/language-dataset-factory.js'\nimport LatinDataSet from './lib/lang/latin/latin-language-dataset.js'\nimport GreekDataSet from './lib/lang/greek/greek-language-dataset.js'\nimport L10n from './l10n/l10n.js'\nimport ViewSet from './views/lib/view-set.js'\n\nexport { InflectionData, LanguageDatasetFactory, LatinDataSet, GreekDataSet, L10n, ViewSet }\n","import MessageBundle from './message-bundle.js'\nimport enUS from './locale/en-us.json'\nimport enGB from './locale/en-gb.json'\n\nconst messages = new Map([\n  ['en-US', enUS],\n  ['en-GB', enGB]\n])\n\nlet messageBundles = new Map()\n\n/**\n * Combines several message bundle for different locales.\n */\nexport default class L10n {\n  /**\n   * Creates an object. If an array of message bundle data is provided, initializes an object with this data.\n   * @param {MessageBundle[]} messageData - An array of message bundles to be stored within.\n   * @returns {L10n} Returns a reference to self for chaining.\n   */\n  constructor (messageData) {\n    this._locales = {}\n    this._localeList = []\n\n    if (messageData) {\n      this.addLocaleData(messageData)\n    }\n    return this\n  }\n\n  static get defaultLocale () {\n    return 'en-US'\n  }\n\n  static get locales () {\n    return Array.from(messages.keys())\n  }\n\n  static getMessages (locale = this.defaultLocale) {\n    if (messageBundles.has(locale)) {\n      return messageBundles.get(locale)\n    }\n    if (!messages.has(locale)) {\n      console.warn(`Messages for \"{locale}\" are not found, returning a default \"${this.defaultLocale}\" instead`)\n      locale = this.defaultLocale\n    }\n    let messageBundle = new MessageBundle(locale, JSON.parse(messages.get(locale)))\n    messageBundles.set(locale, messageBundle)\n    return messageBundle\n  }\n\n  /**\n   * Adds one or several message bundles.\n   * This function is chainable.\n   * @param {MessageBundle[]} messageData - An array of message bundles to be stored within.\n   * @return {L10n} - Returns self for chaining.\n   */\n  addLocaleData (messageData) {\n    for (let messageBundle of messageData) {\n      this._localeList.push(messageBundle.locale)\n      this._locales[messageBundle.locale] = messageBundle\n    }\n    return this\n  }\n\n  /**\n   * Returns a message bundle for a locale.\n   * @param {string} locale - A locale code for a message bundle. IETF language tag format is recommended.\n   * @returns {MessageBundle} A message bundle for a locale.\n   */\n  messages (locale) {\n    if (!this._locales[locale]) {\n      throw new Error('Locale \"' + locale + '\" is not found.')\n    }\n    return this._locales[locale]\n  }\n\n  /**\n   * Returns a list of available locale codes.\n   * @returns {string[]} Array of local codes.\n   */\n  get locales () {\n    return this._localeList\n  }\n}\n","import IntlMessageFormat from 'intl-messageformat'\n\n/**\n * Combines messages with the same locale code.\n */\nexport default class MessageBundle {\n  /**\n   * Creates a message bundle (a list of messages) for a locale.\n   * @param {string} locale - A locale code for a message group. IETF language tag format is recommended.\n   * @param {Object} messages - Messages for a locale in an object. Object keys are message IDss, strings that\n   * are used to reference a message, and key values are message texts in a string format.\n   */\n  constructor (locale, messages) {\n    if (!locale) {\n      throw new Error('Locale data is missing')\n    }\n    if (!messages) {\n      throw new Error('Messages data is missing')\n    }\n\n    this._locale = locale\n\n    for (let messageID in messages) {\n      if (messages.hasOwnProperty(messageID)) {\n        this[messageID] = new IntlMessageFormat(messages[messageID], this._locale)\n      }\n    }\n  }\n\n  /**\n   * Returns a (formatted) message for a message ID provided.\n   * @param messageID - An ID of a message.\n   * @param options - Options that can be used for message formatting.\n   * @returns {string} A formatted message. If message not found, returns a message that contains an error text.\n   */\n  get (messageID, options = undefined) {\n    if (this[messageID]) {\n      return this[messageID].format(options)\n    } else {\n      // If message with the ID provided is not in translation data, generate a warning.\n      return `Not in translation data: \"${messageID}\"`\n    }\n  }\n\n  /**\n   * Returns a locale of a current message bundle.\n   * @return {string} A locale of this message bundle.\n   */\n  get locale () {\n    return this._locale\n  }\n}\n","import ExtendedLanguageData from './extended-language-data'\n\nexport default class ExtendedGreekData extends ExtendedLanguageData {\n  constructor () {\n    super()\n    this._type = ExtendedLanguageData.types().EXTENDED_GREEK_DATA // For deserialization\n    this.primary = false\n  }\n\n  static readObject (jsonObject) {\n    let data = new ExtendedGreekData()\n    data.primary = jsonObject.primary\n    return data\n  }\n\n  merge (extendedGreekData) {\n    if (this.primary !== extendedGreekData.primary) {\n      console.log('Mismatch', this.primary, extendedGreekData.primary)\n    }\n    let merged = new ExtendedGreekData()\n    merged.primary = this.primary\n    return merged\n  }\n}\n","export default class ExtendedLanguageData {\n  constructor () {\n    this._type = undefined // This is a base class\n  }\n\n  static types () {\n    return {\n      EXTENDED_GREEK_DATA: 'ExtendedGreekData'\n    }\n  }\n\n  /* static readObject (jsonObject) {\n    if (!jsonObject._type) {\n      throw new Error('Extended language data has no type information. Unable to deserialize.')\n    } else if (jsonObject._type === ExtendedLanguageData.types().EXTENDED_GREEK_DATA) {\n      return ExtendedGreekData.readObject(jsonObject)\n    } else {\n      throw new Error(`Unsupported extended language data of type \"${jsonObject._type}\".`)\n    }\n  } */\n}\n","import * as Models from 'alpheios-data-models'\n\nexport default class Footnote {\n  constructor (index, text, partOfSpeech) {\n    this.index = index\n    this.text = text\n    this[Models.GrmFeature.types.part] = partOfSpeech\n  }\n\n  static readObject (jsonObject) {\n    this.index = jsonObject.index\n    this.text = jsonObject.text\n    this[Models.GrmFeature.types.part] = jsonObject[Models.GrmFeature.types.part]\n    return new Footnote(jsonObject.index, jsonObject.text, jsonObject[Models.GrmFeature.types.part])\n  }\n}\n","import Morpheme from './morpheme.js'\n\nexport default class Form extends Morpheme {\n}\n","// import * as Models from 'alpheios-data-models'\n// import InflectionItemsGroup from './inflection-items-group.js'\n// import Suffix from './suffix'\n// import Footnote from './footnote'\n\n/**\n * A return value for inflection queries. Stores suffixes, forms and corresponding footnotes.\n * Inflection data is grouped first by a part of speech within a [Models.Feature.types.part] property object.\n * Inside that object, it is grouped by type: suffixes, or forms.\n */\nexport default class InflectionData {\n  constructor (homonym) {\n    this.homonym = homonym\n    this.pos = new Map()\n  }\n\n  addInflectionSet (infectionSet) {\n    this.pos.set(infectionSet.partOfSpeech, infectionSet)\n  }\n\n  get targetWord () {\n    if (this.homonym && this.homonym.targetWord) {\n      return this.homonym.targetWord\n    }\n  }\n\n  get languageID () {\n    if (this.homonym) {\n      return this.homonym.languageID\n    }\n  }\n\n  get hasInflectionSets () {\n    return this.pos.size > 0\n  }\n\n  /**\n   * Returns a list of parts of speech that have any inflection data for them.\n   * @return {string[]} Names of parts of speech, as strings, in an array.\n   */\n  get partsOfSpeech () {\n    return Array.from(this.pos.keys())\n  }\n\n  /**\n   * Returns either suffixes or forms of a given part of speech.\n   * @param {string} partOfSpeech.\n   * @param {string} inflectionType.\n   * @return {Suffix[] | Form[]}\n   */\n  getMorphemes (partOfSpeech, inflectionType) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n      if (inflectionSet.types.has(inflectionType)) {\n        return inflectionSet.types.get(inflectionType).types\n      }\n    }\n    return []\n  }\n\n  /**\n   * Returns footnotes for either suffixes or forms of a given part of speech.\n   * @param {string} partOfSpeech.\n   * @param {string} inflectionType.\n   * @return {Map}\n   */\n  getFootnotesMap (partOfSpeech, inflectionType) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n      if (inflectionSet.types.has(inflectionType)) {\n        return inflectionSet.types.get(inflectionType).footnotesMap\n      }\n    }\n    return new Map()\n  }\n\n  /**\n   * Retrieves all variants of feature values for a given part of speech.\n   * @param partOfSpeech\n   * @param featureName\n   */\n  /* getFeatureValues (partOfSpeech, featureName) {\n    let values = []\n    if (this.pos.has(partOfSpeech)) {\n      for (const item of this[partOfSpeech].suffixes) {\n        if (item.hasOwnProperty('features') && item.features.hasOwnProperty(featureName)) {\n          let value = item.features[featureName]\n          if (!values.includes(value)) {\n            values.push(value)\n          }\n        }\n      }\n    }\n    return values\n  } */\n\n  // Probably we won't need it any more\n  /* static readObject (jsonObject) {\n    // let homonym = Models.Homonym.readObject(jsonObject.homonym)\n\n    let lexicalData = new InflectionData()\n    lexicalData[Models.GrmFeature.types.part] = jsonObject[Models.Feature.types.part]\n\n    for (let part of lexicalData[Models.Feature.types.part]) {\n      let partData = jsonObject[part]\n      lexicalData[part] = {}\n\n      if (partData.suffixes) {\n        lexicalData[part].suffixes = []\n        for (let suffix of partData.suffixes) {\n          lexicalData[part].suffixes.push(Suffix.readObject(suffix))\n        }\n      }\n\n      if (partData.footnotes) {\n        lexicalData[part].footnotes = []\n        for (let footnote of partData.footnotes) {\n          lexicalData[part].footnotes.push(Footnote.readObject(footnote))\n        }\n      }\n    }\n\n    return lexicalData\n  } */\n}\n","import Inflections from './inflections.js'\nimport Paradigm from './paradigm.js'\n\n/**\n * Stores inflections of different types {such as `Suffix`, `Form`, or `Paradigm`} in a `types` map. Items are grouped by type.\n */\nexport default class InflectionSet {\n  constructor (partOfSpeech) {\n    this.partOfSpeech = partOfSpeech\n    this.types = new Map()\n  }\n\n  /**\n   * Checks if an `InflectionSet` has any types stored. If it does not, it means that an `InflectionSet` is empty.\n   * @return {boolean}\n   */\n  get hasTypes () {\n    return this.types.size !== 0\n  }\n\n  /**\n   * Return a list of item types this set contains.\n   * @return {Function<Object>[]}\n   */\n  get inflectionTypes () {\n    return Array.from(this.types.keys())\n  }\n\n  /**\n   * Adds a single inflection item to the set\n   * @param {Suffix | Form | Paradigm} inflection\n   */\n  addInflectionItem (inflection) {\n    this.addInflectionItems([inflection])\n  }\n\n  /**\n   * Adds an array of inflection items of the same type.\n   * @param {Suffix[] | Form[] | Paradigm[]} inflections\n   */\n  addInflectionItems (inflections) {\n    let classType = inflections[0].constructor.ClassType\n    if (!this.types.has(classType)) {\n      this.types.set(classType, new Inflections(classType))\n    }\n    this.types.get(classType).addItems(inflections)\n  }\n\n  /**\n   * Adds an `Inflections` group of certain type.\n   * @param {Inflections} inflectionsObject\n   */\n  addInflectionsObject (inflectionsObject) {\n    if (!inflectionsObject) {\n      throw new Error(`Inflection items object must not be empty`)\n    }\n    if (!(inflectionsObject instanceof Inflections)) {\n      throw new Error(`Inflection items object must be of InflectionItems type`)\n    }\n    const type = inflectionsObject.type\n    if (!type) {\n      throw new Error(`Inflection items must have a valid type`)\n    }\n\n    this.types.set(type, inflectionsObject)\n  }\n\n  addFootnote (classType, index, footnote) {\n    if (!this.types.has(classType)) {\n      this.types.set(classType, new Inflections(classType))\n    }\n    this.types.get(classType).addFootnote(index, footnote)\n  }\n\n  getMatchingParadigms (inflection) {\n    console.log(`Matching paradigms`)\n    if (this.types.has(Paradigm)) {\n      const paradigms = this.types.get(Paradigm)\n      return paradigms.getMatches(inflection).map(o => o.paradigm)\n    }\n    return []\n  }\n}\n","import { Feature } from 'alpheios-data-models'\n// import LanguageDataset from './language-dataset.js'\n// import Form from './form.js'\n// import Suffix from './suffix.js'\n\nexport default class Inflections {\n  constructor (type) {\n    this.type = type\n    this.items = [] // Suffixes or forms\n    this.footnotesMap = new Map() // Footnotes (if any)\n  }\n\n  /**\n   * Adds an individual item to the `items` array.\n   * @param {Object} item\n   */\n  addItem (item) {\n    if (!item) {\n      throw new Error(`Inflection item cannot be empty`)\n    }\n    this.items.push(item)\n  }\n\n  /**\n   * Adds suffix of form items\n   * @param {Suffix[] | Form[]} items\n   */\n  addItems (items) {\n    if (!items) {\n      throw new Error(`Inflection items cannot be empty`)\n    }\n    if (!Array.isArray(items)) {\n      throw new Error(`Inflection items must be in an array`)\n    }\n    if (items.length === 0) {\n      throw new Error(`Inflection items array must not be empty`)\n    }\n    this.items.push(...items)\n  }\n\n  /**\n   * Adds a singe footnote object\n   * @param {string} index - A footnote index\n   * @param {Footnote} footnote - A footnote object\n   */\n  addFootnote (index, footnote) {\n    this.footnotesMap.set(index, footnote)\n  }\n\n  /**\n   * Returns an array of items that `matches` an inflection. A match is determined as a result of item's `match`\n   * function. Returned value is determined by item's `match` function as well.\n   * @param {Inflection} inflection - An inflection to match against.\n   * @return {Object[]} An array of objects. Each object is returned by a `match` function of an individual item.\n   * Its format is dependent on the `match` function implementation.\n   */\n  getMatches (inflection) {\n    let results = []\n    for (const item of this.items) {\n      let result = item.matches(inflection)\n      if (result) { results.push(result) }\n    }\n    return results\n  }\n\n  /**\n   * Returns a sorted (as numbers) array of footnote indexes that are used by items within an `items` array\n   * @return {number[]}\n   */\n  get footnotesInUse () {\n    let set = new Set()\n    // Scan all selected suffixes to build a unique set of footnote indexes\n    for (const item of this.items) {\n      if (item.hasOwnProperty(Feature.types.footnote)) {\n        // Footnote indexes are stored in an array\n        for (let index of item[Feature.types.footnote]) {\n          set.add(index)\n        }\n      }\n    }\n    return Array.from(set).sort((a, b) => parseInt(a) - parseInt(b))\n  }\n}\n","module.exports = [[\"Index\",\"Text\"],[\"1\",\"See  for Rules of variance within regular endings\"],[\"2\",\"See  for Table of α- and ε- stem feminine 1st declension contracts\"],[\"3\",\"See  for Table of α- and ε- stem masculine 1st declension contracts\"],[\"4\",\"Previous, with (ν)\"],[\"5\",\"See  for Table of o- and ε- stem masculine  2nd declension contracts\"],[\"6\",\"See  for Table of o- and ε- stem neuter 2nd declension contracts\"],[\"7\",\"(Attic) contracts of o-stems preceded by a long vowel\"],[\"15\",\"This is not actually an “ending,” but the last letter of the “pure stem”. See\"],[\"16\",\"See  &  for Table of Sigma (ες,ας,ος) stem contracts\"],[\"17\",\"See  for Table of  ι and υ - stem contracts\"],[\"18\",\"See  for Table of  ευ,αυ,and ου - stem contracts\"],[\"19\",\"See  for stems in οι feminine 3rd declension contracts\"],[\"20\",\"See  for Table of 3rd declension contracts of stems in -εσ- preceded by ε\"],[\"21\",\"See  for Table of stems in τ and ατ neuter 3rd declension contracts\"],[\"22\",\"On stem ending in ν, ν doubled in gen. Sing Aeolic (e.g. μῆνς,μῆννος...)\"],[\"23\",\"Also in inscriptions and expressions of swearing\"],[\"24\",\"(Borrowed from 1st decl) Sometimes in proper names whose nominative ends in -ης\"],[\"25\",\"From -ας-stems (properly αι)\"],[\"26\",\"(ε)υς instead of (ε)ος or ους (gen) for (3rd decl) words whose nominative ends in -ος\"],[\"27\",\"In 3rd decl. Only in the words αἰδώς (Attic) and ἠώς (Homer and Ionic)\"],[\"28\",\"Contraction of a stem in οι  and an ι-ending\"],[\"29\",\"Stronger form of Ionic contractions of οι-stems (in the nominative)\"],[\"30\",\"See  for Table of ω - stem contracts (masculine only)\"],[\"31\",\"Nominative plural contraction of  -ειδ+ες  after dropping the δ (used for accusative too). See .a\"],[\"32\",\"Plurals & duals occur rarely (and w/ 2nd decl endings) for 3rd decl οι-stem nouns. See .D.a,b,c\"],[\"33\",\"See  for description and examples of Irreg. Decl involving 3rd decl endings\"],[\"34\",\"(Homer)  for Attic  (ῳτ)ι\"],[\"35\",\"(Homer) for Cretan ινς\"],[\"36\",\"Also an irregular ending for other stem(s)\"],[\"37\",\"In inscriptions\"],[\"38\",\"Plural endings for otherwise dual noun,οσσε (eyes)\"],[\"39\",\"“Poetical” (acc for ἔρως). See ,11\"],[\"40\",\"Poetic for χρωτι,dat. of ὁ χρως\"],[\"41\",\"No Masculine of this Form\"],[\"42\",\"No Feminine of this Form\"],[\"44\",\"See  D.9 and #215 regarding dialectic alternate forms of the Dative Plural\"],[\"45\",\"Surviving in Homer (See ) Not truly genitive or dative, but instrumental/locative/ablative, associated with the remaining oblique cases (genitive & dative) only after being lost as cases themselves in Greek\"],[\"46\",\"See Smyth # 266 for only surviving ος-stem in Attic (fem. singular of αἰδως)\"],[\"47\",\"See  for Substantives in -εύς preceded by a vowel.\"],[\"48\",\"See Smyth,  #275 D.1,2,3\"],[\"49\",\"See , List of Principal Irregular Substantives\"],[\"50\",\"See  for Table of stems in a Liquid (λ,ρ) or a Nasal (ν), and Note #259D for variants including Κρονίων...\"],[\"51\",\"See  for Table of stems in a Dental (τ,δ,θ) or a Nasal (ν), and its notes including Ν.κόρυς (Voc. Κόρυ) & ὀδούς\"],[\"52\",\"See  for general rule re 3rd Declension Masc/Fem Singular Vocative\"],[\"54\",\"See  D\"],[\"55\",\"See\"],[\"56\",\"See  for other forms of endings for contracts of ευ,αυ,and ου - stems\"],[\"57\",\"Nominative form used as Vocative. See\"],[\"58\",\"See ,b\"],[\"59\",\"See ,d\"],[\"60\",\"This (Feminine or Masculine) Form only Masculine when derived from ε- or ο- contraction\"],[\"61\",\"See Smyth Note 264 D.1 regarding Homer's use of Open Forms\"],[\"62\",\"See Smyth Note 269 for alternate i-stem and u-stem endings\"],[\"63\",\"See  D.2\"],[\"64\",\"See  D.1\"]]","module.exports = [[\"Ending\",\"Number\",\"Case\",\"Declension\",\"Gender\",\"Type\",\"Primary\",\"Footnote\"],[\"α\",\"dual\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"αιν\",\"dual\",\"dative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"αῖν\",\"dual\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"αιιν\",\"dual\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"αιν\",\"dual\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"αῖν\",\"dual\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"αιιν\",\"dual\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"α\",\"dual\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"α\",\"dual\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"α\",\"dual\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"2\"],[\"αιν\",\"dual\",\"dative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"αῖν\",\"dual\",\"dative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"αιιν\",\"dual\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"αιν\",\"dual\",\"genitive\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"αῖν\",\"dual\",\"genitive\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"αιιν\",\"dual\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"α\",\"dual\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"2\"],[\"α\",\"dual\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ά\",\"dual\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"dual\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"2\"],[\"ας\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"άς\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶς\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ανς\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"αις\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"αις\",\"plural\",\"dative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"αῖς\",\"plural\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ῃσι\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"44\"],[\"ῃσιν\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 44\"],[\"ῃς\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"44\"],[\"αισι\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"44\"],[\"αισιν\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 44\"],[\"ῶν\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"άων\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"έων\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"ήων\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"ᾶν\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"\"],[\"αι\",\"plural\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"αί\",\"plural\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"αῖ\",\"plural\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"αι\",\"plural\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"αί\",\"plural\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"αῖ\",\"plural\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ας\",\"plural\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"άς\",\"plural\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶς\",\"plural\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ανς\",\"plural\",\"accusative\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"αις\",\"plural\",\"accusative\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"αις\",\"plural\",\"dative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"αῖς\",\"plural\",\"dative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ῃσι\",\"plural\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"44\"],[\"ῃσιν\",\"plural\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 44\"],[\"ῃς\",\"plural\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"44\"],[\"αισι\",\"plural\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"44\"],[\"αισιν\",\"plural\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 44\"],[\"ῶν\",\"plural\",\"genitive\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"άων\",\"plural\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"έων\",\"plural\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"ήων\",\"plural\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"ᾶν\",\"plural\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"αι\",\"plural\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"αί\",\"plural\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"αῖ\",\"plural\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"αι\",\"plural\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"αί\",\"plural\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"αῖ\",\"plural\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"αν\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ην\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ήν\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶν\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ῆν\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"άν\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"irregular\",\"\",\"63\"],[\"ᾳ\",\"singular\",\"dative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ῃ\",\"singular\",\"dative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ῇ\",\"singular\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ᾷ\",\"singular\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ηφι\",\"singular\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"45\"],[\"ηφιν\",\"singular\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"singular\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"45\"],[\"ῆφιv\",\"singular\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 45\"],[\"ας\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ης\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ῆs\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶs\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ηφι\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"45\"],[\"ηφιν\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"45\"],[\"ῆφιv\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"\",\"4 45\"],[\"α\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"η\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"1\"],[\"ή\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ῆ\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ά\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"irregular\",\"\",\"63\"],[\"α\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"η\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"primary\",\"\"],[\"ή\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ῆ\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\",\"2\"],[\"ά\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"irregular\",\"\",\"63\"],[\"αν\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ην\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"3\"],[\"ήν\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶν\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ῆν\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"εα\",\"singular\",\"accusative\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"ᾳ\",\"singular\",\"dative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ῃ\",\"singular\",\"dative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ῇ\",\"singular\",\"dative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾷ\",\"singular\",\"dative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ῆ\",\"singular\",\"dative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ηφι\",\"singular\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"45\"],[\"ηφιν\",\"singular\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"singular\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"45\"],[\"ῆφιv\",\"singular\",\"dative\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 45\"],[\"ου\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"οῦ\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"αο\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"εω\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"ηφι\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"45\"],[\"ηφιν\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"45\"],[\"ῆφιv\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"4 45\"],[\"ω\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"α\",\"singular\",\"genitive\",\"1st\",\"masculine\",\"irregular\",\"\",\"\"],[\"ας\",\"singular\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ης\",\"singular\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ής\",\"singular\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶs\",\"singular\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ῆs\",\"singular\",\"nominative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"α\",\"singular\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"η\",\"singular\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"primary\",\"\"],[\"ά\",\"singular\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"\"],[\"ᾶ\",\"singular\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ῆ\",\"singular\",\"vocative\",\"1st\",\"masculine\",\"regular\",\"\",\"3\"],[\"ω\",\"dual\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ώ\",\"dual\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οιν\",\"dual\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οιιν\",\"dual\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῴν\",\"dual\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"οιν\",\"dual\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οιιν\",\"dual\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῴν\",\"dual\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"ω\",\"dual\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"60\"],[\"ώ\",\"dual\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"60\"],[\"ω\",\"dual\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ώ\",\"dual\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ω\",\"dual\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ώ\",\"dual\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οιν\",\"dual\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οιιν\",\"dual\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"οιν\",\"dual\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οιιν\",\"dual\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"ω\",\"dual\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ώ\",\"dual\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ω\",\"dual\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ώ\",\"dual\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ους\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ούς\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"οῦς\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ονς\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ος\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ως\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"οις\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ώς\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"οις\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῖς\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οισι\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"οισιν\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"4\"],[\"ῴς\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"όφι\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ων\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ῶν\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ών\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"όφι\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"οι\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οί\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"οῖ\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ῴ\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"οι\",\"plural\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οί\",\"plural\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"οῖ\",\"plural\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"α\",\"plural\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ᾶ\",\"plural\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οις\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῖς\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οισι\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"οισιν\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"4\"],[\"όφι\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ων\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ῶν\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"όφι\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"α\",\"plural\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ᾶ\",\"plural\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"α\",\"plural\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ᾶ\",\"plural\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ον\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"όν\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"41\"],[\"ουν\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οῦν\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ω\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7 5\"],[\"ωv\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7 59\"],[\"ώ\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7 42 59\"],[\"ών\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7 59\"],[\"ῳ\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ῷ\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ῴ\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"όφι\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ου\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῦ\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οιο\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"οο\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ω\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ώ\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7\"],[\"όφι\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ος\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ους\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"oῦς\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"ός\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ώς\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"7 42\"],[\"ως\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ε\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"έ\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"οu\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"5\"],[\"οῦ\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\",\"42\"],[\"ός\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\",\"57\"],[\"ον\",\"singular\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῦν\",\"singular\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ῳ\",\"singular\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ῷ\",\"singular\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"όφι\",\"singular\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"singular\",\"dative\",\"2nd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ου\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῦ\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"οο\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"οιο\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"ω\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"\"],[\"όφι\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιv\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ον\",\"singular\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῦν\",\"singular\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ον\",\"singular\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"οῦν\",\"singular\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"\",\"6\"],[\"ε\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῆ\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ω\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"ῖ\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"εε\",\"dual\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 55 61\"],[\"οιν\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"οιιν\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"54\"],[\"σι\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 37\"],[\"εσσι\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"εσι\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"έοιν\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 61\"],[\"ῳν\",\"dual\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"49\"],[\"οιν\",\"dual\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"οῖν\",\"dual\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"οιιν\",\"dual\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"54\"],[\"έοιν\",\"dual\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 61\"],[\"ῳν\",\"dual\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"49\"],[\"ε\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῆ\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ω\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"ῖ\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"εε\",\"dual\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 55 61\"],[\"ε\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῆ\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ω\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"ῖ\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"εε\",\"dual\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 55 61\"],[\"ε\",\"dual\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"α\",\"dual\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"εε\",\"dual\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"αε\",\"dual\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"οιν\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ῷν\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"οις\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33 38\"],[\"οισι\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33 38\"],[\"οισι(ν)\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 33 38\"],[\"οιιν\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"\"],[\"έοιν\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"άοιν\",\"dual\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"οιν\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ῷν\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ων\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33 38\"],[\"οιιν\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"\"],[\"έοιν\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"άοιν\",\"dual\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"ε\",\"dual\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"α\",\"dual\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"εε\",\"dual\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"αε\",\"dual\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"ε\",\"dual\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ει\",\"dual\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"α\",\"dual\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"εε\",\"dual\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"αε\",\"dual\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"ας\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"εις\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17 41\"],[\"ες\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῦς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17 18 48\"],[\"ως\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"30\"],[\"ῆς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"56\"],[\"έας\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"έος\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῆος\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῆες\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῆας\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ους\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"ούς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"εῖς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"31 41\"],[\"εες\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"55 61\"],[\"ις\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ινς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῶς\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"48\"],[\"σι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"σιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"4\"],[\"σί\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"σίν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4 41\"],[\"εσι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"εσιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4 41\"],[\"έσι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"έσιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4\"],[\"ψι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ψιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4\"],[\"ψί\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ψίν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4\"],[\"ξι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ξιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4\"],[\"ξί\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ξίν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"4\"],[\"φι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"φιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ηφι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"ηφιv\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"ῆφιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"όφι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιν\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"αις\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 41\"],[\"οῖσι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"οῖσιv\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 33\"],[\"εσσι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 61\"],[\"εσσιv\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 16 61\"],[\"υσσι\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"54\"],[\"υσσιv\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 54\"],[\"σσί\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"54\"],[\"σσίv\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 54\"],[\"ων\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ῶν\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"-\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"41\"],[\"φι\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"φιν\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ηφι\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"ηφιv\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"ῆφιν\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"όφι\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"45\"],[\"όφιν\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"4 45\"],[\"έων\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 61\"],[\"ες\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ως\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"30\"],[\"εις\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"εῖς\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"οί\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"32\"],[\"αί\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"ῆς\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"18\"],[\"ῄς\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"31 41\"],[\"εες\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 55 61\"],[\"οι\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"ες\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"εις\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"εῖς\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ῆς\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ως\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"30\"],[\"εες\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"16 55 61\"],[\"α\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"η\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ς\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ά\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33\"],[\"αα\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"εα\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"σι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"σιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"4\"],[\"σί\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"σίv\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"4\"],[\"ασι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ασιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"4\"],[\"εσι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"εσιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"4\"],[\"έσι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"έσιv\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"4\"],[\"εσσι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"54\"],[\"εσσιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 54\"],[\"σσί\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"54\"],[\"σσίv\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 54\"],[\"ασσι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"54\"],[\"ασσιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 54\"],[\"φι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"φιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ηφι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"ηφιv\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"ῆφιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"όφι\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιν\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ων\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ῶν\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"φι\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"\"],[\"φιν\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ηφι\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"ηφιv\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"ῆφι\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"ῆφιν\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"όφι\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"45\"],[\"όφιν\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"4 45\"],[\"έων\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"άων\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"α\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"η\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ες\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ά\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33\"],[\"εα\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"αα\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"α\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"η\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ες\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"αα\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"εα\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"16 61\"],[\"α\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"η\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"16\"],[\"ν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ιν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"ῦν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"ῶ\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"23\"],[\"υν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῦν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"ύν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"έα\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"20\"],[\"ην\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"24\"],[\"ώ\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"19 41\"],[\"ω\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"23\"],[\"εῖν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"31 41\"],[\"ων\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 41 49\"],[\"αν\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 41\"],[\"ον\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"39\"],[\"ῖς\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"εα\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"61\"],[\"ι\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ί\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ϊ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"ΐ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"40\"],[\"ει\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"16 17\"],[\"εῖ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"18\"],[\"αι\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"oῖ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"28 41\"],[\"ῖ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 46\"],[\"ῆι\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"18\"],[\"ᾳ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"25\"],[\"ῳ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33 34\"],[\"ῷ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"ιί\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"62\"],[\"υί\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"62\"],[\"έϊ\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"18 61\"],[\"ος\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ός\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ους\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"16\"],[\"οῦς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"19 46\"],[\"ως\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17 18\"],[\"ώς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17 18 41\"],[\"ῶς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"47\"],[\"εως\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"17\"],[\"έως\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"εώς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"έους\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"20\"],[\"ω\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"εος\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"61\"],[\"ΰς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"41 48\"],[\"ῦς\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"48\"],[\"νος\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"22\"],[\"οῦ\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"ηος\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"55\"],[\"ιός\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"62\"],[\"uός\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"62\"],[\"ς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"\"],[\"ηρ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"ις\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ϊς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ώ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"ψ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ξ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ρ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ήρ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ήν\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"50\"],[\"ν\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ωρ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ων\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ών\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ης\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῆς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"υς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ῦς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"εῦς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ύς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ής\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"33\"],[\"ας\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"ῴ\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"29 41\"],[\"ώς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"27 41\"],[\"ϋς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"41\"],[\"ῄς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"31 41\"],[\"ῖς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"εῖς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"31 41\"],[\"ῶς\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"48\"],[\"ος\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"primary\",\"52\"],[\"ς\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"30\"],[\"ι\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"41\"],[\"ῦ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"15 17 18\"],[\"οῖ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"19 41\"],[\"ψ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ξ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ν\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ρ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ων\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"50\"],[\"ών\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ήν\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ερ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ες\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ί\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ως\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ἶ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ούς\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"51\"],[\"ύ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"15\"],[\"υ\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"51\"],[\"εις\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"20\"],[\"αν\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\",\"\"],[\"ώς\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"27 41 46\"],[\"ον\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"\"],[\"υς\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\",\"33\"],[\"α\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"15\"],[\"-\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"33\"],[\"ος\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ας\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"αρ\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"21\"],[\"υ\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ι\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ει\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"16\"],[\"αι\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\",\"16 21\"],[\"ϊ\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"17\"],[\"ᾳ\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"25 33\"],[\"υϊ\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"17\"],[\"αϊ\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"21 61\"],[\"ος\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"ους\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\",\"16\"],[\"ως\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\",\"16\"],[\"εως\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\",\"17\"],[\"υς\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"26\"],[\"ου\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33\"],[\"αος\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"\",\"21 61\"],[\"α\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"33\"],[\"ος\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"αρ\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ας\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"16 21\"],[\"υ\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ον\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"\",\"33\"],[\"α\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"primary\",\"15\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ος\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"ας\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"],[\"αρ\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"21\"],[\"υ\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\",\"\"]]","module.exports = [[\"Index\",\"Text\"],[\"1\",\"enclitic\"],[\"2\",\"not enclitic\"],[\"3\",\"enclitic\"],[\"4\",\"The reflexive pronouns are formed by compounding the stems of the personal pronouns with the oblique cases of αὐτός\"]]","module.exports = [[\"Form\",\"Headword\",\"Class\",\"Person\",\"Number\",\"Case\",\"Gender\",\"Type\",\"Primary\",\"Dialects\",\"Footnote\"],[\"τούτω\",\"οὗτος\",\"demonstrative\",\"\",\"dual\",\"accusative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτοιν\",\"οὗτος\",\"demonstrative\",\"\",\"dual\",\"dative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτοιν\",\"οὗτος\",\"demonstrative\",\"\",\"dual\",\"genitive\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτω\",\"οὗτος\",\"demonstrative\",\"\",\"dual\",\"nominative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ταύτᾱς\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ταύταις\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτων\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὗται\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτους\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτοις\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτων\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οὗτοι\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ταῦτα\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτοις\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτων\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ταῦτα\",\"οὗτος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ταύτην\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ταύτῃ\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ταύτης\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὕτη\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦτον\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτῳ\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τούτου\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οὗτος\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦτο\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτῳ\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τούτου\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦτο\",\"οὗτος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνω\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"dual\",\"accusative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνοιν\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"dual\",\"dative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνοιν\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"dual\",\"genitive\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνω\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"dual\",\"nominative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνᾱς\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείναις\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνων\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖναι\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνους\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνοις\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνων\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνοι\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνα\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνοις\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνων\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνα\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνην\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνῃ\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνης\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνη\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνον\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνῳ\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνου\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνος\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνο\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνῳ\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκείνου\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐκεῖνο\",\"ἐκεῖνος\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τώδε\",\"ὅδε\",\"demonstrative\",\"\",\"dual\",\"accusative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῖνδε\",\"ὅδε\",\"demonstrative\",\"\",\"dual\",\"dative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῖνδε\",\"ὅδε\",\"demonstrative\",\"\",\"dual\",\"genitive\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τώδε\",\"ὅδε\",\"demonstrative\",\"\",\"dual\",\"nominative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τά̄σδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ταῖσδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τῶνδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἵδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τούσδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τοῖσδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τῶνδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἵδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τάδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῖσδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τῶνδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τάδε\",\"ὅδε\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τήνδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τῇδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τῆσδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἥδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τόνδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τῷδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"τόδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τῷδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τόδε\",\"ὅδε\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὥτινε\",\"\",\"general relative\",\"\",\"dual\",\"accusative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷντινοιν\",\"\",\"general relative\",\"\",\"dual\",\"dative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷντινοιν\",\"\",\"general relative\",\"\",\"dual\",\"genitive\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὥτινε\",\"\",\"general relative\",\"\",\"dual\",\"nominative\",\"masculine feminine neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ̄στινας\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἷστισι\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἷστισιν\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὁτέοισι\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"feminine\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"ὧντινων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτεων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"αἵτινες\",\"\",\"general relative\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"οὕστινας\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτινας\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"masculine\",\"irregular\",\"\",\"Homer\",\"\"],[\"οἷστισι\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἷστισιν\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτοις\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὧντινων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἵτινες\",\"\",\"general relative\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἅτινα\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅττα\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅσσα\",\"\",\"general relative\",\"\",\"plural\",\"accusative\",\"neuter\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"οἷστισι\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷστισιν\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτοις\",\"\",\"general relative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὧντινων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτων\",\"\",\"general relative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅτινα\",\"\",\"general relative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅττα\",\"\",\"general relative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅσσα\",\"\",\"general relative\",\"\",\"plural\",\"nominative\",\"neuter\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"ἥντινα\",\"\",\"general relative\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ᾗτινι\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτεῳ\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"feminine\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"ἧστινος\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅττεο\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Homer\",\"\"],[\"ὅττευ\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Homer\",\"\"],[\"ὅτευ\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Homer,Herodotus\",\"\"],[\"ἥτις\",\"\",\"general relative\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅντινα\",\"\",\"general relative\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτινα\",\"\",\"general relative\",\"\",\"singular\",\"accusative\",\"masculine\",\"irregular\",\"\",\"Homer\",\"\"],[\"ᾧτινι\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτῳ\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οὗτινος\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτου\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅστις\",\"\",\"general relative\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτις\",\"\",\"general relative\",\"\",\"singular\",\"nominative\",\"masculine\",\"irregular\",\"\",\"Homer\",\"\"],[\"ὅ τι\",\"\",\"general relative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅ ττι\",\"\",\"general relative\",\"\",\"singular\",\"accusative\",\"neuter\",\"irregular\",\"\",\"Homer\",\"\"],[\"ᾧτινι\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτῳ\",\"\",\"general relative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οὗτινος\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅτου\",\"\",\"general relative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅ τι\",\"\",\"general relative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅ ττι\",\"\",\"general relative\",\"\",\"singular\",\"nominative\",\"neuter\",\"irregular\",\"\",\"Homer\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινοῖν\",\"\",\"indefinite\",\"\",\"dual\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινοῖν\",\"\",\"indefinite\",\"\",\"dual\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"vocative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινοῖν\",\"\",\"indefinite\",\"\",\"dual\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινοῖν\",\"\",\"indefinite\",\"\",\"dual\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινέ\",\"\",\"indefinite\",\"\",\"dual\",\"vocative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινάς\",\"\",\"indefinite\",\"\",\"plural\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τισί\",\"\",\"indefinite\",\"\",\"plural\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τισίν\",\"\",\"indefinite\",\"\",\"plural\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινῶν\",\"\",\"indefinite\",\"\",\"plural\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινές\",\"\",\"indefinite\",\"\",\"plural\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινά\",\"\",\"indefinite\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἄττα\",\"\",\"indefinite\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"\",\"\",\"2\"],[\"τισί\",\"\",\"indefinite\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τισίν\",\"\",\"indefinite\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινῶν\",\"\",\"indefinite\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινά\",\"\",\"indefinite\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἄττα\",\"\",\"indefinite\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"\",\"\",\"2\"],[\"τινά\",\"\",\"indefinite\",\"\",\"singular\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἄττα\",\"\",\"indefinite\",\"\",\"singular\",\"accusative\",\"masculine feminine\",\"regular\",\"\",\"\",\"2\"],[\"τινί\",\"\",\"indefinite\",\"\",\"singular\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τῳ\",\"\",\"indefinite\",\"\",\"singular\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τινός\",\"\",\"indefinite\",\"\",\"singular\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"του\",\"\",\"indefinite\",\"\",\"singular\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τις\",\"\",\"indefinite\",\"\",\"singular\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τι\",\"\",\"indefinite\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινί\",\"\",\"indefinite\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τῳ\",\"\",\"indefinite\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τινός\",\"\",\"indefinite\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"του\",\"\",\"indefinite\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τι\",\"\",\"indefinite\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά\",\"\",\"intensive\",\"\",\"dual\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐταῖν\",\"\",\"intensive\",\"\",\"dual\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐταῖν\",\"\",\"intensive\",\"\",\"dual\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά\",\"\",\"intensive\",\"\",\"dual\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτώ\",\"\",\"intensive\",\"\",\"dual\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖν\",\"\",\"intensive\",\"\",\"dual\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖν\",\"\",\"intensive\",\"\",\"dual\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτώ\",\"\",\"intensive\",\"\",\"dual\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτώ\",\"\",\"intensive\",\"\",\"dual\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖν\",\"\",\"intensive\",\"\",\"dual\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖν\",\"\",\"intensive\",\"\",\"dual\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτώ\",\"\",\"intensive\",\"\",\"dual\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά̄ς\",\"\",\"intensive\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐταῖς\",\"\",\"intensive\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτέων\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Herodotus\",\"\"],[\"αὐταί\",\"\",\"intensive\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτούς\",\"\",\"intensive\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖς\",\"\",\"intensive\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτέων\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"masculine\",\"irregular\",\"\",\"Herodotus\",\"\"],[\"αὐτοί\",\"\",\"intensive\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά\",\"\",\"intensive\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖς\",\"\",\"intensive\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτέων\",\"\",\"intensive\",\"\",\"plural\",\"genitive\",\"neuter\",\"irregular\",\"\",\"Herodotus\",\"\"],[\"αὐτά\",\"\",\"intensive\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτήν\",\"\",\"intensive\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῇ\",\"\",\"intensive\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῆς\",\"\",\"intensive\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτή\",\"\",\"intensive\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτόν\",\"\",\"intensive\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῷ\",\"\",\"intensive\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῦ\",\"\",\"intensive\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτός\",\"\",\"intensive\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτό\",\"\",\"intensive\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῷ\",\"\",\"intensive\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῦ\",\"\",\"intensive\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτό\",\"\",\"intensive\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνοιν\",\"\",\"interrogative\",\"\",\"dual\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνοιν\",\"\",\"interrogative\",\"\",\"dual\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"vocative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνοιν\",\"\",\"interrogative\",\"\",\"dual\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνοιν\",\"\",\"interrogative\",\"\",\"dual\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνε\",\"\",\"interrogative\",\"\",\"dual\",\"vocative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνας\",\"\",\"interrogative\",\"\",\"plural\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίσι\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίσιv\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνων\",\"\",\"interrogative\",\"\",\"plural\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνες\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνα\",\"\",\"interrogative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίσι\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίσιv\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνων\",\"\",\"interrogative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνα\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνα\",\"\",\"interrogative\",\"\",\"singular\",\"accusative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνι\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τῷ\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίνος\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦ\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τίς\",\"\",\"interrogative\",\"\",\"singular\",\"nominative\",\"masculine feminine\",\"regular\",\"primary\",\"\",\"\"],[\"τί\",\"\",\"interrogative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνι\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τῷ\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τίνος\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τοῦ\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"τί\",\"\",\"interrogative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"νώ\",\"\",\"personal\",\"1st\",\"dual\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"νῷν\",\"\",\"personal\",\"1st\",\"dual\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"νῷν\",\"\",\"personal\",\"1st\",\"dual\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"νώ\",\"\",\"personal\",\"1st\",\"dual\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφώ\",\"\",\"personal\",\"2nd\",\"dual\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφῷν\",\"\",\"personal\",\"2nd\",\"dual\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφῷν\",\"\",\"personal\",\"2nd\",\"dual\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφώ\",\"\",\"personal\",\"2nd\",\"dual\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμᾶς\",\"\",\"personal\",\"1st\",\"plural\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῖν\",\"\",\"personal\",\"1st\",\"plural\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῶν\",\"\",\"personal\",\"1st\",\"plural\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμεῖς\",\"\",\"personal\",\"1st\",\"plural\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ὑμᾶς\",\"\",\"personal\",\"2nd\",\"plural\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ὑμῖν\",\"\",\"personal\",\"2nd\",\"plural\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ὑμῶν\",\"\",\"personal\",\"2nd\",\"plural\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ὑμεῖς\",\"\",\"personal\",\"2nd\",\"plural\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφᾶς\",\"\",\"personal\",\"3rd\",\"plural\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφίσι\",\"\",\"personal\",\"3rd\",\"plural\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφίσιν\",\"\",\"personal\",\"3rd\",\"plural\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφῶν\",\"\",\"personal\",\"3rd\",\"plural\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σφεῖς\",\"\",\"personal\",\"3rd\",\"plural\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμέ\",\"\",\"personal\",\"1st\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"με\",\"\",\"personal\",\"1st\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"ἐμοί\",\"\",\"personal\",\"1st\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"μοι\",\"\",\"personal\",\"1st\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"ἐμοῦ\",\"\",\"personal\",\"1st\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"μου\",\"\",\"personal\",\"1st\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"ἐγώ\",\"\",\"personal\",\"1st\",\"singular\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σέ\",\"\",\"personal\",\"2nd\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σε\",\"\",\"personal\",\"2nd\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"σοί\",\"\",\"personal\",\"2nd\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σοι\",\"\",\"personal\",\"2nd\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"σοῦ\",\"\",\"personal\",\"2nd\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"σου\",\"\",\"personal\",\"2nd\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"σύ\",\"\",\"personal\",\"2nd\",\"singular\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἕ\",\"\",\"personal\",\"3rd\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἑ\",\"\",\"personal\",\"3rd\",\"singular\",\"accusative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"οἷ\",\"\",\"personal\",\"3rd\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"οἱ\",\"\",\"personal\",\"3rd\",\"singular\",\"dative\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"οὗ\",\"\",\"personal\",\"3rd\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"οὑ\",\"\",\"personal\",\"3rd\",\"singular\",\"genitive\",\"\",\"regular\",\"primary\",\"\",\"3\"],[\"-\",\"\",\"personal\",\"3rd\",\"singular\",\"nominative\",\"\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλᾱ\",\"\",\"reciprocal\",\"\",\"dual\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλαιν\",\"\",\"reciprocal\",\"\",\"dual\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλαιν\",\"\",\"reciprocal\",\"\",\"dual\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλω\",\"\",\"reciprocal\",\"\",\"dual\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοιν\",\"\",\"reciprocal\",\"\",\"dual\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοιν\",\"\",\"reciprocal\",\"\",\"dual\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλω\",\"\",\"reciprocal\",\"\",\"dual\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοιν\",\"\",\"reciprocal\",\"\",\"dual\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοιν\",\"\",\"reciprocal\",\"\",\"dual\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλᾱς\",\"\",\"reciprocal\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλαις\",\"\",\"reciprocal\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλων\",\"\",\"reciprocal\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλους\",\"\",\"reciprocal\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοις\",\"\",\"reciprocal\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλων\",\"\",\"reciprocal\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἄλληλα\",\"\",\"reciprocal\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλοις\",\"\",\"reciprocal\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἀλλήλων\",\"\",\"reciprocal\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμᾶς\",\"\",\"reflexive\",\"1st\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά̄ς\",\"\",\"reflexive\",\"1st\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῖν\",\"\",\"reflexive\",\"1st\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐταῖς\",\"\",\"reflexive\",\"1st\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῶν\",\"\",\"reflexive\",\"1st\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"reflexive\",\"1st\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μᾶς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτά̄ς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μῖν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐταῖς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μῶν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτά̄ς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σφᾶς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτά̄ς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυταῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σφίσιν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑταῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σφῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμᾶς\",\"\",\"reflexive\",\"1st\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτούς\",\"\",\"reflexive\",\"1st\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῖν\",\"\",\"reflexive\",\"1st\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖς\",\"\",\"reflexive\",\"1st\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἡμῶν\",\"\",\"reflexive\",\"1st\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"reflexive\",\"1st\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μᾶς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτούς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μῖν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτοῖς\",\"\",\"reflexive\",\"2nd\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὑ̄μῶν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὐτῶν\",\"\",\"reflexive\",\"2nd\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτούς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σφᾶς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτούς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτοῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σφίσιν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτοῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σφῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτά\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"σφέα\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτά\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτοῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"σφίσιν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτοῖς\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"σφῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῶν\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτήν\",\"\",\"reflexive\",\"1st\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτῇ\",\"\",\"reflexive\",\"1st\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτῆς\",\"\",\"reflexive\",\"1st\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτήν\",\"\",\"reflexive\",\"2nd\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτήν\",\"\",\"reflexive\",\"2nd\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτῇ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτῇ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτῆς\",\"\",\"reflexive\",\"2nd\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτῆς\",\"\",\"reflexive\",\"2nd\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτήν\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτήν\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῇ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῇ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῆς\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῆς\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτόν\",\"\",\"reflexive\",\"1st\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτῷ\",\"\",\"reflexive\",\"1st\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἐμαυτοῦ\",\"\",\"reflexive\",\"1st\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτόν\",\"\",\"reflexive\",\"2nd\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτόν\",\"\",\"reflexive\",\"2nd\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτῷ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτῷ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σεαυτοῦ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"σαυτοῦ\",\"\",\"reflexive\",\"2nd\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτόν\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτόν\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῷ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῷ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτοῦ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτοῦ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτό\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτό\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτῷ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτῷ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἑαυτοῦ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"αὑτοῦ\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ̄\",\"\",\"relative\",\"\",\"dual\",\"accusative\",\"feminine\",\"irregular\",\"\",\"Attic\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἷν\",\"\",\"relative\",\"\",\"dual\",\"dative\",\"feminine\",\"irregular\",\"\",\"Attic\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἷν\",\"\",\"relative\",\"\",\"dual\",\"genitive\",\"feminine\",\"irregular\",\"\",\"Attic\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ̄\",\"\",\"relative\",\"\",\"dual\",\"nominative\",\"feminine\",\"irregular\",\"\",\"Attic\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷν\",\"\",\"relative\",\"\",\"dual\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὥ\",\"\",\"relative\",\"\",\"dual\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ̄ς\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἷς\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὧν\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"αἵ\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"οὕς\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἷς\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὧν\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οἵ\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οἷς\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὧν\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἅ\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ἥν\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ᾗ\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἧς\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ἥ\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"feminine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅν\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ᾧ\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"οὗ\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅς\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"masculine\",\"regular\",\"primary\",\"\",\"\"],[\"ὅ\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ᾧ\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"οὗ\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"neuter\",\"regular\",\"primary\",\"\",\"\"],[\"ὅ\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"neuter\",\"regular\",\"primary\",\"\",\"\"]]","module.exports = [[\"ID ref\",\"Match order\",\"Part of speech\",\"Stem type\",\"Voice\",\"Mood\",\"Tense\",\"Lemma\",\"Morph flags\",\"Dialect\"],[\"verbpdgm54\",\"13\",\"verb_participle\",\"w_stem\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm54\",\"12\",\"verb_participle\",\"reg_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm54\",\"12\",\"verb_participle\",\"evw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm55\",\"12\",\"verb_participle\",\"ww_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm55\",\"12\",\"verb_participle\",\"ew_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm55\",\"12\",\"verb_participle\",\"ew_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm55\",\"12\",\"verb_participle\",\"ow_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm56\",\"12\",\"verb_participle\",\"aw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm56\",\"12\",\"verb_participle\",\"ajw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm56\",\"12\",\"verb_participle\",\"aw_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm57\",\"12\",\"verb_participle\",\"aor2\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm57\",\"13\",\"verb_participle\",\"irreg_mi\",\"\",\"\",\"present\",\"εἰμί\",\"\",\"\"],[\"verbpdgm57\",\"13\",\"verb_participle\",\"irreg_mi\",\"\",\"\",\"present\",\"εἶμι\",\"\",\"\"],[\"verbpdgm58\",\"12\",\"verb_participle\",\"aor1\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm59\",\"12\",\"verb_participle\",\"ami_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm59\",\"12\",\"verb_participle\",\"ath_h_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm59\",\"12\",\"verb_participle\",\"ami_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm59\",\"12\",\"verb_participle\",\"irreg_mi\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm60\",\"12\",\"verb_participle\",\"emi_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm60\",\"13\",\"verb_participle\",\"emi_aor\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm60\",\"12\",\"verb_participle\",\"aor_pass\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm60\",\"11\",\"verb_participle\",\"aor2_pass\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm60\",\"13\",\"verb_participle\",\"irreg_mi\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm61\",\"12\",\"verb_participle\",\"omi_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm61\",\"12\",\"verb_participle\",\"omi_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm61\",\"12\",\"verb_participle\",\"ath_w_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm62\",\"12\",\"verb_participle\",\"umi_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm62\",\"12\",\"verb_participle\",\"ath_u_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm63\",\"12\",\"verb_participle\",\"perf_act\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm64\",\"12\",\"verb_participle\",\"perf2_act\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"w_stem\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"w_stem\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"aor2\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"aor1\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"reg_fut\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ew_fut\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"12\",\"verb_participle\",\"fut_perf\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ow_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ow_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ew_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ew_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"evw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"evw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"aw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"aw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ajw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ajw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ow_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ow_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"emi_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"emi_pr\",\"passive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"emi_aor\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"irreg_mi\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"irreg_mi\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"omi_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"omi_pr\",\"midle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"omi_aor\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ami_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ami_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ami_short\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ami_short\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"ami_aor\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"umi_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm65\",\"13\",\"verb_participle\",\"umi_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_vow\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_d\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_mp\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_g\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_l\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_gx\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_p\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_n\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm66\",\"12\",\"verb_participle\",\"perfp_un\",\"\",\"\",\"\",\"\",\"\",\"\"]]","module.exports = [[\"Index\",\"Text\"],[\"1\",\"With neuter plural subject, periphrastic forms are sometimes found in the indicative, but more commonly the 3rd singular form is used instead.\"],[\"2\",\"thus is late Greek with a neuter plural subject, but in classical Attic the 3rd singular form is used with neuter plural subject.\"]]","module.exports = [[\"ID ref\",\"Match order\",\"Part of speech\",\"Stem type\",\"Voice\",\"Mood\",\"Tense\",\"Lemma\",\"Morph flags\",\"Dialect\"],[\"verbpdgm1\",\"2\",\"verb\",\"w_stem\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm2\",\"2\",\"verb\",\"w_stem\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm2\",\"2\",\"verb\",\"w_stem\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm3\",\"1\",\"verb\",\"reg_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm4\",\"3\",\"verb\",\"reg_fut\",\"\",\"\",\"\",\"\",\"contr\",\"\"],[\"verbpdgm3\",\"1\",\"verb\",\"aw_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm4\",\"2\",\"verb\",\"aw_fut\",\"\",\"\",\"\",\"\",\"contr\",\"\"],[\"verbpdgm3\",\"1\",\"verb\",\"ew_fut\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm4\",\"2\",\"verb\",\"ew_fut\",\"\",\"\",\"\",\"\",\"contr\",\"\"],[\"verbpdgm5\",\"3\",\"verb\",\"aw_fut\",\"\",\"\",\"\",\"\",\"contr\",\"doric\"],[\"verbpdgm5\",\"3\",\"verb\",\"aw_fut\",\"\",\"\",\"\",\"\",\"contr\",\"aeolic\"],[\"verbpdgm6\",\"1\",\"verb\",\"aor2\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm7\",\"1\",\"verb\",\"aor2\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm8\",\"1\",\"verb\",\"aor1\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm9\",\"1\",\"verb\",\"aor1\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm10\",\"1\",\"verb\",\"aor_pass\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm10\",\"1\",\"verb\",\"aor2_pass\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm3\",\"3\",\"verb\",\"aor_pass\",\"passive\",\"\",\"future\",\"\",\"\",\"\"],[\"verbpdgm11\",\"1\",\"verb\",\"perf_act\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm15\",\"3\",\"verb\",\"perf_act\",\"active\",\"\",\"pluperfect\",\"\",\"\",\"\"],[\"verbpdgm12\",\"1\",\"verb\",\"\",\"mediopassive\",\"indicative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm12\",\"1\",\"verb\",\"\",\"mediopassive\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"mediopassive\",\"subjunctive\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"middle\",\"subjunctive\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"mediopassive\",\"optative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"middle\",\"optative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"mediopassive\",\"imperative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm13\",\"1\",\"verb\",\"\",\"middle\",\"imperative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"mediopassive\",\"subjunctive\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"middle\",\"subjunctive\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"mediopassive\",\"optative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"middle\",\"optative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"mediopassive\",\"imperative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm14\",\"1\",\"verb\",\"\",\"middle\",\"imperative\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm15\",\"1\",\"verb\",\"\",\"mediopassive\",\"indicative\",\"pluperfect\",\"\",\"\",\"\"],[\"verbpdgm16\",\"1\",\"verb\",\"fut_perf\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm17\",\"1\",\"verb\",\"perf2_act\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm18\",\"1\",\"verb\",\"ew_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm20\",\"1\",\"verb\",\"ew_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm20\",\"1\",\"verb\",\"ew_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm19\",\"1\",\"verb\",\"evw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm21\",\"2\",\"verb\",\"evw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm21\",\"2\",\"verb\",\"evw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm22\",\"2\",\"verb\",\"aw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm23\",\"1\",\"verb\",\"ajw_pr\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm24\",\"2\",\"verb\",\"aw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm24\",\"2\",\"verb\",\"aw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm25\",\"2\",\"verb\",\"ajw_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm25\",\"2\",\"verb\",\"ajw_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm26\",\"2\",\"verb\",\"ow_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm27\",\"2\",\"verb\",\"ow_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm27\",\"2\",\"verb\",\"ow_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm26\",\"2\",\"verb\",\"ww_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm27\",\"2\",\"verb\",\"ww_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm27\",\"2\",\"verb\",\"ww_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm28\",\"2\",\"verb\",\"emi_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm29\",\"2\",\"verb\",\"emi_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm29\",\"2\",\"verb\",\"emi_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm30\",\"2\",\"verb\",\"emi_or\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm31\",\"2\",\"verb\",\"emi_or\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm32\",\"2\",\"verb\",\"\",\"active\",\"\",\"\",\"ἵημι\",\"\",\"\"],[\"verbpdgm33\",\"2\",\"verb\",\"\",\"mediopassive\",\"\",\"\",\"ἵημι\",\"\",\"\"],[\"verbpdgm33\",\"2\",\"verb\",\"\",\"middle\",\"\",\"\",\"ἵημι\",\"\",\"\"],[\"verbpdgm34\",\"3\",\"verb\",\"\",\"acive\",\"\",\"aorist\",\"ἵημι\",\"\",\"\"],[\"verbpdgm35\",\"3\",\"verb\",\"\",\"middle\",\"\",\"aorist\",\"ἵημι\",\"\",\"\"],[\"verbpdgm35\",\"3\",\"verb\",\"\",\"middle\",\"\",\"aorist\",\"ἵημι\",\"\",\"\"],[\"verbpdgm36\",\"2\",\"verb\",\"omi_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm37\",\"2\",\"verb\",\"omi_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm37\",\"2\",\"verb\",\"omi_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm38\",\"2\",\"verb\",\"omi_aor\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm39\",\"2\",\"verb\",\"omi_aor\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm40\",\"2\",\"verb\",\"ami_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm41\",\"2\",\"verb\",\"ami_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm41\",\"2\",\"verb\",\"ami_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm42\",\"2\",\"verb\",\"ami_aor\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm43\",\"1\",\"verb\",\"ami_short\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm44\",\"2\",\"verb\",\"umi_pr\",\"active\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm45\",\"2\",\"verb\",\"umi_pr\",\"mediopassive\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm45\",\"2\",\"verb\",\"umi_pr\",\"middle\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm46\",\"2\",\"verb\",\"irreg_mi\",\"\",\"\",\"\",\"εἰμί\",\"\",\"\"],[\"verbpdgm47\",\"2\",\"verb\",\"irreg_mi\",\"\",\"\",\"\",\"εἶμι\",\"\",\"\"],[\"verbpdgm48\",\"2\",\"verb\",\"ath_primary\",\"active\",\"\",\"present\",\"\",\"\",\"\"],[\"verbpdgm48\",\"2\",\"verb\",\"ath_primary\",\"active\",\"\",\"imperfect\",\"\",\"\",\"\"],[\"verbpdgm49\",\"1\",\"verb\",\"ath_h_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm50\",\"1\",\"verb\",\"ath_w_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm51\",\"1\",\"verb\",\"ath_w_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm52\",\"1\",\"verb\",\"ath_u_aor\",\"\",\"\",\"\",\"\",\"\",\"\"],[\"verbpdgm53\",\"2\",\"verb\",\"ath_primary\",\"\",\"\",\"perfect\",\"\",\"\",\"\"],[\"verbpdgm53\",\"3\",\"verb\",\"perf_act\",\"active\",\"\",\"pluperfect\",\"\",\"\",\"\"]]","/*\n * Greek language data module\n */\nimport { Constants, Feature, Lemma, FeatureImporter } from 'alpheios-data-models'\nimport LanguageDataset from '../../../lib/language-dataset'\nimport ExtendedGreekData from '../../../lib/extended-greek-data'\nimport Suffix from '../../../lib/suffix.js'\nimport Form from '../../../lib/form.js'\nimport Paradigm from '../../../lib/paradigm.js'\nimport nounSuffixesCSV from './data/noun/suffixes.csv'\nimport nounFootnotesCSV from './data/noun/footnotes.csv'\nimport pronounFormsCSV from './data/pronoun/forms.csv'\nimport pronounFootnotesCSV from './data/pronoun/footnotes.csv'\n/* import adjectiveSuffixesCSV from './data/adjective/suffixes.csv';\nimport adjectiveFootnotesCSV from './data/adjective/footnotes.csv';\nimport verbSuffixesCSV from './data/verb/suffixes.csv';\nimport verbFootnotesCSV from './data/verb/footnotes.csv'; */\n\n// Verb paradigm tables\nimport paradigm01 from './data/verb/paradigm/tables/paradigm-01.json'\nimport paradigm02 from './data/verb/paradigm/tables/paradigm-02.json'\nimport paradigm03 from './data/verb/paradigm/tables/paradigm-03.json'\nimport paradigm04 from './data/verb/paradigm/tables/paradigm-04.json'\nimport paradigm05 from './data/verb/paradigm/tables/paradigm-05.json'\nimport paradigm06 from './data/verb/paradigm/tables/paradigm-06.json'\nimport paradigm07 from './data/verb/paradigm/tables/paradigm-07.json'\nimport paradigm08 from './data/verb/paradigm/tables/paradigm-08.json'\nimport paradigm09 from './data/verb/paradigm/tables/paradigm-09.json'\nimport paradigm10 from './data/verb/paradigm/tables/paradigm-10.json'\nimport paradigm11 from './data/verb/paradigm/tables/paradigm-11.json'\nimport paradigm12 from './data/verb/paradigm/tables/paradigm-12.json'\nimport paradigm13 from './data/verb/paradigm/tables/paradigm-13.json'\nimport paradigm14 from './data/verb/paradigm/tables/paradigm-14.json'\nimport paradigm15 from './data/verb/paradigm/tables/paradigm-15.json'\nimport paradigm16 from './data/verb/paradigm/tables/paradigm-16.json'\nimport paradigm17 from './data/verb/paradigm/tables/paradigm-17.json'\nimport paradigm18 from './data/verb/paradigm/tables/paradigm-18.json'\nimport paradigm19 from './data/verb/paradigm/tables/paradigm-19.json'\nimport paradigm20 from './data/verb/paradigm/tables/paradigm-20.json'\nimport paradigm21 from './data/verb/paradigm/tables/paradigm-21.json'\nimport paradigm22 from './data/verb/paradigm/tables/paradigm-22.json'\nimport paradigm23 from './data/verb/paradigm/tables/paradigm-23.json'\nimport paradigm24 from './data/verb/paradigm/tables/paradigm-24.json'\nimport paradigm25 from './data/verb/paradigm/tables/paradigm-25.json'\nimport paradigm26 from './data/verb/paradigm/tables/paradigm-26.json'\nimport paradigm27 from './data/verb/paradigm/tables/paradigm-27.json'\nimport paradigm28 from './data/verb/paradigm/tables/paradigm-28.json'\nimport paradigm29 from './data/verb/paradigm/tables/paradigm-29.json'\nimport paradigm30 from './data/verb/paradigm/tables/paradigm-30.json'\nimport paradigm31 from './data/verb/paradigm/tables/paradigm-31.json'\nimport paradigm32 from './data/verb/paradigm/tables/paradigm-32.json'\nimport paradigm33 from './data/verb/paradigm/tables/paradigm-33.json'\nimport paradigm34 from './data/verb/paradigm/tables/paradigm-34.json'\nimport paradigm35 from './data/verb/paradigm/tables/paradigm-35.json'\nimport paradigm36 from './data/verb/paradigm/tables/paradigm-36.json'\nimport paradigm37 from './data/verb/paradigm/tables/paradigm-37.json'\nimport paradigm38 from './data/verb/paradigm/tables/paradigm-38.json'\nimport paradigm39 from './data/verb/paradigm/tables/paradigm-39.json'\nimport paradigm40 from './data/verb/paradigm/tables/paradigm-40.json'\nimport paradigm41 from './data/verb/paradigm/tables/paradigm-41.json'\nimport paradigm42 from './data/verb/paradigm/tables/paradigm-42.json'\nimport paradigm43 from './data/verb/paradigm/tables/paradigm-43.json'\nimport paradigm44 from './data/verb/paradigm/tables/paradigm-44.json'\nimport paradigm45 from './data/verb/paradigm/tables/paradigm-45.json'\nimport paradigm46 from './data/verb/paradigm/tables/paradigm-46.json'\nimport paradigm47 from './data/verb/paradigm/tables/paradigm-47.json'\nimport paradigm48 from './data/verb/paradigm/tables/paradigm-48.json'\nimport paradigm49 from './data/verb/paradigm/tables/paradigm-49.json'\nimport paradigm50 from './data/verb/paradigm/tables/paradigm-50.json'\nimport paradigm51 from './data/verb/paradigm/tables/paradigm-51.json'\nimport paradigm52 from './data/verb/paradigm/tables/paradigm-52.json'\nimport paradigm53 from './data/verb/paradigm/tables/paradigm-53.json'\n// Verb paradigm rules and footnotes\nimport verbParadigmRulesCSV from './data/verb/paradigm/rules.csv'\nimport verbParadigmFootnotesCSV from './data/verb/paradigm/footnotes.csv'\n\n// Verb participle paradigm tables\nimport paradigm54 from './data/verb-participle/paradigm/tables/paradigm-54.json'\nimport paradigm55 from './data/verb-participle/paradigm/tables/paradigm-55.json'\nimport paradigm56 from './data/verb-participle/paradigm/tables/paradigm-56.json'\nimport paradigm57 from './data/verb-participle/paradigm/tables/paradigm-57.json'\nimport paradigm58 from './data/verb-participle/paradigm/tables/paradigm-58.json'\nimport paradigm59 from './data/verb-participle/paradigm/tables/paradigm-59.json'\nimport paradigm60 from './data/verb-participle/paradigm/tables/paradigm-60.json'\nimport paradigm61 from './data/verb-participle/paradigm/tables/paradigm-61.json'\nimport paradigm62 from './data/verb-participle/paradigm/tables/paradigm-62.json'\nimport paradigm63 from './data/verb-participle/paradigm/tables/paradigm-63.json'\nimport paradigm64 from './data/verb-participle/paradigm/tables/paradigm-64.json'\nimport paradigm65 from './data/verb-participle/paradigm/tables/paradigm-65.json'\nimport paradigm66 from './data/verb-participle/paradigm/tables/paradigm-66.json'\n// Verb participle rules\nimport verbParticipleParadigmRulesCSV from './data/verb-participle/paradigm/rules.csv'\n\nimport papaparse from 'papaparse'\n\n// region Definition of grammatical features\n/*\n Define grammatical features of a language. Those grammatical features definitions will also be used by morphological\n analyzer's language modules as well.\n */\n\n// endregion Definition of grammatical features\n\nexport default class GreekLanguageDataset extends LanguageDataset {\n  constructor () {\n    super(GreekLanguageDataset.languageID)\n\n    this.features = this.model.typeFeatures\n    this.features.set(Feature.types.footnote, new Feature(Feature.types.footnote, [], GreekLanguageDataset.languageID))\n    this.features.set(Feature.types.fullForm, new Feature(Feature.types.fullForm, [], GreekLanguageDataset.languageID))\n    this.features.set(Feature.types.hdwd, new Feature(Feature.types.hdwd, [], GreekLanguageDataset.languageID))\n    this.features.set(Feature.types.dialect, new Feature(Feature.types.dialect, [], GreekLanguageDataset.languageID))\n\n    // Create an importer with default values for every feature\n    for (let feature of this.features.values()) {\n      feature.addImporter(new FeatureImporter(feature.values, true))\n    }\n    // Custom importers for Greek-specific feature values\n    this.features.get(Feature.types.gender).getImporter()\n      .map('masculine feminine neuter', [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, Constants.GEND_NEUTER])\n  }\n\n  static get languageID () {\n    return Constants.LANG_GREEK\n  }\n\n  // For noun and adjectives\n  addSuffixes (partOfSpeech, data) {\n    // An order of columns in a data CSV file\n    const n = {\n      suffix: 0,\n      number: 1,\n      grmCase: 2,\n      declension: 3,\n      gender: 4,\n      type: 5,\n      primary: 6,\n      footnote: 7\n    }\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let suffixValue = item[n.suffix]\n      // Handle special suffix values\n      if (suffixValue === noSuffixValue) {\n        suffixValue = null\n      }\n\n      let primary = false\n      let features = [partOfSpeech,\n        this.features.get(Feature.types.number).createFromImporter(item[n.number]),\n        this.features.get(Feature.types.grmCase).createFromImporter(item[n.grmCase]),\n        this.features.get(Feature.types.declension).createFromImporter(item[n.declension]),\n        this.features.get(Feature.types.gender).createFromImporter(item[n.gender]),\n        this.features.get(Feature.types.type).createFromImporter(item[n.type])]\n      if (item[n.primary] === 'primary') {\n        primary = true\n      }\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n      this.addInflection(partOfSpeech.value, Suffix, suffixValue, features, extendedLangData)\n    }\n  }\n\n  // For pronoun\n  addPronounForms (partOfSpeech, data) {\n    this.pronounGroupingLemmas = new Map([\n      ['demonstrative', ['ὅδε', 'οὗτος', 'ἐκεῖνος']]\n    ])\n\n    // An order of columns in a data CSV file\n    const n = {\n      form: 0,\n      hdwd: 1,\n      grmClass: 2,\n      person: 3,\n      number: 4,\n      grmCase: 5,\n      gender: 6,\n      type: 7,\n      primary: 8,\n      dialect: 9,\n      footnote: 10\n    }\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let form = item[n.form]\n\n      let features = [\n        partOfSpeech,\n        this.features.get(Feature.types.fullForm).createFromImporter(form)\n      ]\n\n      if (item[n.hdwd]) {\n        features.push(this.features.get(Feature.types.hdwd).createFromImporter(item[n.hdwd]))\n      }\n      if (item[n.grmClass]) { features.push(this.features.get(Feature.types.grmClass).createFromImporter(item[n.grmClass])) }\n      if (item[n.person]) { features.push(this.features.get(Feature.types.person).createFromImporter(item[n.person])) }\n      if (item[n.number]) { features.push(this.features.get(Feature.types.number).createFromImporter(item[n.number])) }\n      if (item[n.grmCase]) { features.push(this.features.get(Feature.types.grmCase).createFromImporter(item[n.grmCase])) }\n      if (item[n.gender]) { features.push(this.features.get(Feature.types.gender).createFromImporter(item[n.gender])) }\n      if (item[n.type]) { features.push(this.features.get(Feature.types.type).createFromImporter(item[n.type])) }\n\n      let primary = (item[n.primary] === 'primary')\n\n      // Dialects could have multiple values\n      let dialects = item[n.dialect].split(',')\n      if (item[n.dialect] && dialects && dialects.length > 0) {\n        features.push(this.features.get(Feature.types.dialect).createFeatures(dialects))\n      }\n\n      // Footnotes. There can be multiple footnote indexes separated by commas\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n      this.addInflection(partOfSpeech.value, Form, form, features, extendedLangData)\n    }\n  }\n\n  static get verbParadigmTables () {\n    const partOfSpeech = Constants.POFS_VERB\n    return new Map([\n      ['verbpdgm1', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm01))],\n      ['verbpdgm2', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm02))],\n      ['verbpdgm3', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm03))],\n      ['verbpdgm4', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm04))],\n      ['verbpdgm5', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm05))],\n      ['verbpdgm6', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm06))],\n      ['verbpdgm7', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm07))],\n      ['verbpdgm8', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm08))],\n      ['verbpdgm9', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm09))],\n      ['verbpdgm10', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm10))],\n      ['verbpdgm11', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm11))],\n      ['verbpdgm12', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm12))],\n      ['verbpdgm13', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm13))],\n      ['verbpdgm14', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm14))],\n      ['verbpdgm15', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm15))],\n      ['verbpdgm16', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm16))],\n      ['verbpdgm17', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm17))],\n      ['verbpdgm18', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm18))],\n      ['verbpdgm19', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm19))],\n      ['verbpdgm20', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm20))],\n      ['verbpdgm21', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm21))],\n      ['verbpdgm22', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm22))],\n      ['verbpdgm23', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm23))],\n      ['verbpdgm24', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm24))],\n      ['verbpdgm25', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm25))],\n      ['verbpdgm26', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm26))],\n      ['verbpdgm27', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm27))],\n      ['verbpdgm28', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm28))],\n      ['verbpdgm29', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm29))],\n      ['verbpdgm30', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm30))],\n      ['verbpdgm31', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm31))],\n      ['verbpdgm32', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm32))],\n      ['verbpdgm33', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm33))],\n      ['verbpdgm34', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm34))],\n      ['verbpdgm35', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm35))],\n      ['verbpdgm36', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm36))],\n      ['verbpdgm37', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm37))],\n      ['verbpdgm38', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm38))],\n      ['verbpdgm39', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm39))],\n      ['verbpdgm40', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm40))],\n      ['verbpdgm41', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm41))],\n      ['verbpdgm42', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm42))],\n      ['verbpdgm43', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm43))],\n      ['verbpdgm44', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm44))],\n      ['verbpdgm45', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm45))],\n      ['verbpdgm46', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm46))],\n      ['verbpdgm47', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm47))],\n      ['verbpdgm48', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm48))],\n      ['verbpdgm49', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm49))],\n      ['verbpdgm50', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm50))],\n      ['verbpdgm51', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm51))],\n      ['verbpdgm52', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm52))],\n      ['verbpdgm53', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm53))]\n    ])\n  }\n\n  static get verbParticipleParadigmTables () {\n    const partOfSpeech = Constants.POFS_VERB_PARTICIPLE\n    return new Map([\n      ['verbpdgm54', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm54))],\n      ['verbpdgm55', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm55))],\n      ['verbpdgm56', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm56))],\n      ['verbpdgm57', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm57))],\n      ['verbpdgm58', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm58))],\n      ['verbpdgm59', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm59))],\n      ['verbpdgm60', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm60))],\n      ['verbpdgm61', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm61))],\n      ['verbpdgm62', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm62))],\n      ['verbpdgm63', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm63))],\n      ['verbpdgm64', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm64))],\n      ['verbpdgm65', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm65))],\n      ['verbpdgm66', new Paradigm(this.languageID, partOfSpeech, JSON.parse(paradigm66))]\n    ])\n  }\n\n  getParadigms (partOfSpeech, paradigms, rulesData) {\n    // An order of columns in a data CSV file\n    const n = {\n      id: 0,\n      matchOrder: 1,\n      partOfSpeech: 2, // Ignored, an argument value will be used\n      stemtype: 3,\n      voice: 4,\n      mood: 5,\n      tense: 6,\n      lemma: 7,\n      morphFlags: 8,\n      dialect: 9\n    }\n\n    // First row contains headers\n    for (let i = 1; i < rulesData.length; i++) {\n      let item = rulesData[i]\n      let id = item[n.id]\n      let matchOrder = Number.parseInt(item[n.matchOrder])\n\n      let features = [partOfSpeech]\n\n      if (item[n.stemtype]) { features.push(this.features.get(Feature.types.stemtype).createFromImporter(item[n.stemtype])) }\n      if (item[n.voice]) { features.push(this.features.get(Feature.types.voice).createFromImporter(item[n.voice])) }\n      if (item[n.mood]) { features.push(this.features.get(Feature.types.mood).createFromImporter(item[n.mood])) }\n      if (item[n.tense]) { features.push(this.features.get(Feature.types.tense).createFromImporter(item[n.tense])) }\n      if (item[n.dialect]) { features.push(this.features.get(Feature.types.dialect).createFromImporter(item[n.dialect])) }\n\n      let lemma\n      if (item[n.lemma]) {\n        lemma = new Lemma(item[n.lemma], this.constructor.languageID)\n      }\n\n      let morphFlags = ''\n      if (item[n.morphFlags]) {\n        morphFlags = item[n.morphFlags]\n      }\n\n      if (paradigms.has(id)) {\n        paradigms.get(id).addRule(matchOrder, features, lemma, morphFlags)\n      } else {\n        console.warn(`Cannot find a paradigm table for \"${id}\" index`)\n      }\n    }\n    for (let paradigm of paradigms.values()) {\n      paradigm.sortRules()\n    }\n    return Array.from(paradigms.values())\n  }\n\n  addFootnotes (partOfSpeech, classType, data) {\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      this.addFootnote(partOfSpeech.value, classType, data[i][0], data[i][1])\n    }\n  }\n\n  loadData () {\n    let partOfSpeech\n    let suffixes\n    let forms\n    let paradigms\n    let footnotes\n\n    // Nouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_NOUN)\n    suffixes = papaparse.parse(nounSuffixesCSV, {})\n    this.addSuffixes(partOfSpeech, suffixes.data)\n    footnotes = papaparse.parse(nounFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Suffix, footnotes.data)\n\n    // Pronouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_PRONOUN)\n    forms = papaparse.parse(pronounFormsCSV, {})\n    this.addPronounForms(partOfSpeech, forms.data)\n    footnotes = papaparse.parse(pronounFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Form, footnotes.data)\n\n    // Verbs\n    // Paradigms\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB)\n    paradigms = this.getParadigms(\n      partOfSpeech, this.constructor.verbParadigmTables, papaparse.parse(verbParadigmRulesCSV, {}).data)\n    this.addParadigms(partOfSpeech, paradigms)\n    this.addFootnotes(partOfSpeech, Paradigm, papaparse.parse(verbParadigmFootnotesCSV, {}).data)\n\n    // Verb Participles\n    // Paradigms\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB_PARTICIPLE)\n    paradigms = this.getParadigms(\n      partOfSpeech, this.constructor.verbParticipleParadigmTables, papaparse.parse(verbParticipleParadigmRulesCSV, {}).data)\n    this.addParadigms(partOfSpeech, paradigms)\n\n    this.dataLoaded = true\n    return this\n  }\n\n  /**\n   * Returns an array of lemmas that are used to group values within inflection tables,\n   * such as for demonstrative pronouns\n   * @param {string} grammarClass - A name of a pronoun class\n   * @return {string[]} An array of lemma values\n   */\n  getPronounGroupingLemmas (grammarClass) {\n    return this.pronounGroupingLemmas.has(grammarClass) ? this.pronounGroupingLemmas.get(grammarClass) : []\n  }\n\n  static getObligatoryMatchList (inflection) {\n    if (inflection.hasFeatureValue(Feature.types.part, Constants.POFS_PRONOUN)) {\n      // If it is a pronoun, it must match a grammatical class\n      return [Feature.types.grmClass]\n    } else if (inflection.constraints.fullFormBased) {\n      // Not a pronoun, but the other form-based word\n      return [Feature.types.fullForm]\n    } else {\n      // Default value for suffix matching\n      return [Feature.types.part]\n    }\n  }\n\n  static getOptionalMatchList (inflection) {\n    const featureOptions = [\n      Feature.types.grmCase,\n      Feature.types.declension,\n      Feature.types.gender,\n      Feature.types.number,\n      Feature.types.voice,\n      Feature.types.mood,\n      Feature.types.tense,\n      Feature.types.person\n    ]\n    return featureOptions.filter(f => inflection[f])\n  }\n}\n","module.exports = [[\"Index\",\"Text\"],[\"1\",\"Adjectives agree with the noun they modify in gender, number and case.\"],[\"2\",\"Adjectives are inflected according to either\"],[\"3\",\"Only nullus, sōlus, alius (alia, aliud), tōtus, ūllus, ūnus, alter, neuter (neutra,\\n            neutrum) and uter (utra, utrum).\"],[\"4\",\"In a few adjectives of Greek origin.\"],[\"5\",\"The \\\"two-ending\\\" adjectives use \\\"-is\\\", for both masculine and feminine nominative\\n            singular.\"],[\"6\",\"The \\\"one-ending\\\" adjectives use the same consonant ending for all three genders in the\\n            nominative singular and the neuter accusative and vocative singular.\"],[\"7\",\"An ablative singular in \\\"e\\\" is common in one-ending adjectives, but is usually confined to\\n            poetry in three and two-ending adjectives.\"],[\"8\",\"In comparatives, poetry and some one-ending adjectives.\"],[\"9\",\"Chiefly in comparatives.\"]]","module.exports = [[\"Ending\",\"Number\",\"Case\",\"Declension\",\"Gender\",\"Type\",\"Footnote\"],[\"a\",\"singular\",\"nominative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"us\",\"singular\",\"nominative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"um\",\"singular\",\"nominative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"is\",\"singular\",\"nominative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"feminine\",\"irregular\",\"6\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"is\",\"singular\",\"nominative\",\"3rd\",\"masculine\",\"irregular\",\"5\"],[\"e\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"6\"],[\"ae\",\"singular\",\"genitive\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"īus\",\"singular\",\"genitive\",\"1st 2nd\",\"feminine\",\"irregular\",\"3\"],[\"ī\",\"singular\",\"genitive\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"īus\",\"singular\",\"genitive\",\"1st 2nd\",\"masculine\",\"irregular\",\"3\"],[\"ī\",\"singular\",\"genitive\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"īus\",\"singular\",\"genitive\",\"1st 2nd\",\"neuter\",\"irregular\",\"3\"],[\"is\",\"singular\",\"genitive\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"is\",\"singular\",\"genitive\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"is\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ae\",\"singular\",\"dative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"1st 2nd\",\"feminine\",\"irregular\",\"3\"],[\"ō\",\"singular\",\"dative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"1st 2nd\",\"masculine\",\"irregular\",\"3\"],[\"ō\",\"singular\",\"dative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"1st 2nd\",\"neuter\",\"irregular\",\"3\"],[\"ī\",\"singular\",\"dative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"am\",\"singular\",\"accusative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"um\",\"singular\",\"accusative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"um\",\"singular\",\"accusative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"em\",\"singular\",\"accusative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"em\",\"singular\",\"accusative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"e\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"-\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"6\"],[\"ā\",\"singular\",\"ablative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ō\",\"singular\",\"ablative\",\"1st 2nd\",\"feminine\",\"irregular\",\"4\"],[\"ō\",\"singular\",\"ablative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"ō\",\"singular\",\"ablative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ī\",\"singular\",\"ablative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"e\",\"singular\",\"ablative\",\"3rd\",\"feminine\",\"irregular\",\"7\"],[\"ī\",\"singular\",\"ablative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"e\",\"singular\",\"ablative\",\"3rd\",\"masculine\",\"irregular\",\"7\"],[\"ī\",\"singular\",\"ablative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ae\",\"singular\",\"locative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"e\",\"singular\",\"locative\",\"3rd\",\"feminine\",\"irregular\",\"7\"],[\"ī\",\"singular\",\"locative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"a\",\"singular\",\"vocative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"e\",\"singular\",\"vocative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"ī\",\"singular\",\"vocative\",\"1st 2nd\",\"masculine\",\"irregular\",\"\"],[\"um\",\"singular\",\"vocative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"is\",\"singular\",\"vocative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"e\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"6\"],[\"ae\",\"plural\",\"nominative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ī\",\"plural\",\"nominative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"a\",\"plural\",\"nominative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"nominative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ēs\",\"plural\",\"nominative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ia\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ārum\",\"plural\",\"genitive\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ōrum\",\"plural\",\"genitive\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"ōrum\",\"plural\",\"genitive\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ium\",\"plural\",\"genitive\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"3rd\",\"feminine\",\"irregular\",\"8\"],[\"ium\",\"plural\",\"genitive\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"3rd\",\"masculine\",\"irregular\",\"8\"],[\"ium\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"8\"],[\"īs\",\"plural\",\"dative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"dative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"īs\",\"plural\",\"dative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ās\",\"plural\",\"accusative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ōs\",\"plural\",\"accusative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"a\",\"plural\",\"accusative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"īs\",\"plural\",\"accusative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ēs\",\"plural\",\"accusative\",\"3rd\",\"feminine\",\"irregular\",\"9\"],[\"īs\",\"plural\",\"accusative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ēs\",\"plural\",\"accusative\",\"3rd\",\"masculine\",\"irregular\",\"9\"],[\"ia\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"īs\",\"plural\",\"ablative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"ablative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"īs\",\"plural\",\"ablative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ae\",\"plural\",\"vocative\",\"1st 2nd\",\"feminine\",\"regular\",\"\"],[\"ī\",\"plural\",\"vocative\",\"1st 2nd\",\"masculine\",\"regular\",\"\"],[\"a\",\"plural\",\"vocative\",\"1st 2nd\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"vocative\",\"3rd\",\"feminine\",\"regular\",\"\"],[\"ēs\",\"plural\",\"vocative\",\"3rd\",\"masculine\",\"regular\",\"\"],[\"ia\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\"]]","module.exports = [[\"Index\",\"Text\"],[\"1\",\"archaic (final s and m of os and om may be omitted in inscriptions)\"],[\"2\",\"only in familiās\"],[\"3\",\"especially in Greek patronymics and compounds in -gena and -cola.\"],[\"4\",\"always in deābus and filiābus; rarely with other words to distinguish the female\"],[\"5\",\"archaic\"],[\"6\",\"rare\"],[\"7\",\"may occur in words of Greek origin. The forms of many Greek nouns vary among the first, second and third declensions.\"],[\"8\",\"proper names in ius and filius and genius\"],[\"9\",\"poetic\"],[\"10\",\"only pelagus, vīrus, and sometimes vulgus\"],[\"11\",\"may occur with i-stems\"],[\"12\",\"several nouns (most commonly domus) show forms of both second and fourth declensions\"],[\"13\",\"some nouns also have forms from the first declension (eg materia, saevitia) or the third declension (eg requiēs, satiēs, plēbēs, famēs)\"],[\"14\",\"Always in partus and tribus, usually in artus and lacus, sometimes in other words, eg portus and specus\"],[\"15\",\"Often in names of plants and trees and in nouns ending in -tus\"],[\"16\",\"When pronounced as one syllable\"],[\"17\",\"early\"],[\"18\",\"dies and meridies are masculine\"]]","module.exports = [[\"Ending\",\"Number\",\"Case\",\"Declension\",\"Gender\",\"Type\",\"Footnote\"],[\"a\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ē\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"irregular\",\"\"],[\"ēs\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"irregular\",\"\"],[\"ā\",\"singular\",\"nominative\",\"1st\",\"feminine\",\"irregular\",\"7\"],[\"us\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"er\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ir\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"-\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\"],[\"os\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"1\"],[\"ōs\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\"],[\"ō\",\"singular\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"7\"],[\"um\",\"singular\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"us\",\"singular\",\"nominative\",\"2nd\",\"neuter\",\"irregular\",\"10\"],[\"on\",\"singular\",\"nominative\",\"2nd\",\"neuter\",\"irregular\",\"7\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"os\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"\"],[\"ōn\",\"singular\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"7\"],[\"-\",\"singular\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"us\",\"singular\",\"nominative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"nominative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"singular\",\"nominative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ae\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"\"],[\"āī\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"1\"],[\"ās\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"2\"],[\"ēs\",\"singular\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"7\"],[\"ī\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ō\",\"singular\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"7\"],[\"ī\",\"singular\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"is\",\"singular\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"is\",\"singular\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ūs\",\"singular\",\"genitive\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"uis\",\"singular\",\"genitive\",\"4th\",\"masculine feminine\",\"irregular\",\"1\"],[\"uos\",\"singular\",\"genitive\",\"4th\",\"masculine feminine\",\"irregular\",\"1\"],[\"ī\",\"singular\",\"genitive\",\"4th\",\"masculine feminine\",\"irregular\",\"15\"],[\"ūs\",\"singular\",\"genitive\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēī\",\"singular\",\"genitive\",\"5th\",\"feminine\",\"regular\",\"\"],[\"eī\",\"singular\",\"genitive\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"genitive\",\"5th\",\"feminine\",\"irregular\",\"\"],[\"ē\",\"singular\",\"genitive\",\"5th\",\"feminine\",\"irregular\",\"\"],[\"ēs\",\"singular\",\"genitive\",\"5th\",\"feminine\",\"irregular\",\"6\"],[\"ae\",\"singular\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"āī\",\"singular\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"1\"],[\"ō\",\"singular\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ō\",\"singular\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"e\",\"singular\",\"dative\",\"3rd\",\"masculine feminine\",\"irregular\",\"17\"],[\"ī\",\"singular\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ūī\",\"singular\",\"dative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"dative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"dative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēī\",\"singular\",\"dative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"eī\",\"singular\",\"dative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"dative\",\"5th\",\"feminine\",\"irregular\",\"\"],[\"ē\",\"singular\",\"dative\",\"5th\",\"feminine\",\"irregular\",\"6\"],[\"am\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ēn\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"irregular\",\"\"],[\"ān\",\"singular\",\"accusative\",\"1st\",\"feminine\",\"irregular\",\"7\"],[\"um\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"om\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"1\"],[\"ōn\",\"singular\",\"accusative\",\"2nd\",\"masculine feminine\",\"irregular\",\"7\"],[\"um\",\"singular\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"us\",\"singular\",\"accusative\",\"2nd\",\"neuter\",\"irregular\",\"10\"],[\"on\",\"singular\",\"accusative\",\"2nd\",\"neuter\",\"irregular\",\"7\"],[\"em\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"im\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"11\"],[\"a\",\"singular\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"7\"],[\"-\",\"singular\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"um\",\"singular\",\"accusative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"accusative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"em\",\"singular\",\"accusative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ā\",\"singular\",\"ablative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ād\",\"singular\",\"ablative\",\"1st\",\"feminine\",\"irregular\",\"5\"],[\"ē\",\"singular\",\"ablative\",\"1st\",\"feminine\",\"irregular\",\"7\"],[\"ō\",\"singular\",\"ablative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ōd\",\"singular\",\"ablative\",\"2nd\",\"masculine feminine\",\"irregular\",\"1\"],[\"ō\",\"singular\",\"ablative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"e\",\"singular\",\"ablative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"ablative\",\"3rd\",\"masculine feminine\",\"irregular\",\"11\"],[\"e\",\"singular\",\"ablative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ī\",\"singular\",\"ablative\",\"3rd\",\"neuter\",\"irregular\",\"11\"],[\"ū\",\"singular\",\"ablative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ūd\",\"singular\",\"ablative\",\"4th\",\"masculine feminine\",\"irregular\",\"1\"],[\"ū\",\"singular\",\"ablative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ē\",\"singular\",\"ablative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ae\",\"singular\",\"locative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ō\",\"singular\",\"locative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ō\",\"singular\",\"locative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"e\",\"singular\",\"locative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ī\",\"singular\",\"locative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ū\",\"singular\",\"locative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"locative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ē\",\"singular\",\"locative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"a\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ē\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"irregular\",\"\"],[\"ā\",\"singular\",\"vocative\",\"1st\",\"feminine\",\"irregular\",\"7\"],[\"e\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"er\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"ir\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"-\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\"],[\"ī\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"irregular\",\"8\"],[\"ōs\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"irregular\",\"\"],[\"e\",\"singular\",\"vocative\",\"2nd\",\"masculine feminine\",\"irregular\",\"7\"],[\"um\",\"singular\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"on\",\"singular\",\"vocative\",\"2nd\",\"neuter\",\"irregular\",\"7\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"-\",\"singular\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"us\",\"singular\",\"vocative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ū\",\"singular\",\"vocative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"singular\",\"vocative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ae\",\"plural\",\"nominative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ī\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"oe\",\"plural\",\"nominative\",\"2nd\",\"masculine feminine\",\"irregular\",\"7 9\"],[\"a\",\"plural\",\"nominative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"es\",\"plural\",\"nominative\",\"3rd\",\"masculine feminine\",\"irregular\",\"7\"],[\"a\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ia\",\"plural\",\"nominative\",\"3rd\",\"neuter\",\"irregular\",\"11\"],[\"ūs\",\"plural\",\"nominative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ua\",\"plural\",\"nominative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"nominative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ārum\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"1st\",\"feminine\",\"irregular\",\"3\"],[\"ōrum\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"\"],[\"om\",\"plural\",\"genitive\",\"2nd\",\"masculine feminine\",\"irregular\",\"8\"],[\"ōrum\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"2nd\",\"neuter\",\"irregular\",\"\"],[\"um\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ium\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"11\"],[\"ōn\",\"plural\",\"genitive\",\"3rd\",\"masculine feminine\",\"irregular\",\"7\"],[\"um\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ium\",\"plural\",\"genitive\",\"3rd\",\"neuter\",\"irregular\",\"11\"],[\"uum\",\"plural\",\"genitive\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"um\",\"plural\",\"genitive\",\"4th\",\"masculine feminine\",\"irregular\",\"16\"],[\"uom\",\"plural\",\"genitive\",\"4th\",\"masculine feminine\",\"irregular\",\"1\"],[\"uum\",\"plural\",\"genitive\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ērum\",\"plural\",\"genitive\",\"5th\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"dative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ābus\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"4\"],[\"eis\",\"plural\",\"dative\",\"1st\",\"feminine\",\"irregular\",\"6\"],[\"īs\",\"plural\",\"dative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"dative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"dative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ubus\",\"plural\",\"dative\",\"4th\",\"masculine feminine\",\"irregular\",\"14\"],[\"ibus\",\"plural\",\"dative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēbus\",\"plural\",\"dative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ās\",\"plural\",\"accusative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ōs\",\"plural\",\"accusative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"a\",\"plural\",\"accusative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"11\"],[\"as\",\"plural\",\"accusative\",\"3rd\",\"masculine feminine\",\"irregular\",\"7\"],[\"a\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ia\",\"plural\",\"accusative\",\"3rd\",\"neuter\",\"irregular\",\"11\"],[\"ūs\",\"plural\",\"accusative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ua\",\"plural\",\"accusative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"accusative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"ablative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ābus\",\"plural\",\"ablative\",\"1st\",\"feminine\",\"irregular\",\"4\"],[\"eis\",\"plural\",\"ablative\",\"1st\",\"feminine\",\"irregular\",\"6\"],[\"īs\",\"plural\",\"ablative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"ablative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"ablative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ubus\",\"plural\",\"ablative\",\"4th\",\"masculine feminine\",\"irregular\",\"14\"],[\"ibus\",\"plural\",\"ablative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēbus\",\"plural\",\"ablative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"īs\",\"plural\",\"locative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ibus\",\"plural\",\"locative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēbus\",\"plural\",\"locative\",\"5th\",\"feminine\",\"regular\",\"\"],[\"ae\",\"plural\",\"vocative\",\"1st\",\"feminine\",\"regular\",\"\"],[\"ī\",\"plural\",\"vocative\",\"2nd\",\"masculine feminine\",\"regular\",\"\"],[\"a\",\"plural\",\"vocative\",\"2nd\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"vocative\",\"3rd\",\"masculine feminine\",\"regular\",\"\"],[\"a\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"regular\",\"\"],[\"ia\",\"plural\",\"vocative\",\"3rd\",\"neuter\",\"irregular\",\"11\"],[\"ūs\",\"plural\",\"vocative\",\"4th\",\"masculine feminine\",\"regular\",\"\"],[\"ua\",\"plural\",\"vocative\",\"4th\",\"neuter\",\"regular\",\"\"],[\"ēs\",\"plural\",\"vocative\",\"5th\",\"feminine\",\"regular\",\"\"]]","module.exports = [[\"Ending\",\"Conjugation\",\"Voice\",\"Mood\",\"Tense\",\"Number\",\"Person\",\"Case\",\"Type\",\"Footnote\"],[\"āns\",\"1st\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"antis\",\"1st\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"irregular\",\"\"],[\"ēns\",\"2nd\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ventis\",\"2nd\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"irregular\",\"\"],[\"ēns\",\"3rd\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"entis\",\"3rd\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"irregular\",\"\"],[\"iēns\",\"4th\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ientis\",\"4th\",\"active\",\"verb participle\",\"present\",\"\",\"\",\"\",\"irregular\",\"\"],[\"\",\"1st\",\"active\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"\",\"\"],[\"ātūrus\",\"1st\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"1st\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"1st\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"tūrus\",\"2nd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"2nd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"2nd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"tūrus\",\"3rd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"3rd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"3rd\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"ītūrus esse\",\"4th\",\"active\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"verb participle\",\"present\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"verb participle\",\"present\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"verb participle\",\"present\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"verb participle\",\"present\",\"\",\"\",\"\",\"\",\"\"],[\"ātus\",\"1st\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"1st\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"1st\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"itus\",\"2nd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"2nd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"2nd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"tus\",\"3rd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"3rd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"3rd\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"ītus\",\"4th\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"4th\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"4th\",\"passive\",\"verb participle\",\"perfect\",\"\",\"\",\"\",\"irregular\",\"\"],[\"andus\",\"1st\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"1st\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"1st\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"endus\",\"2nd\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"2nd\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"2nd\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"endus\",\"3rd\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"iendus\",\"4th\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"a\",\"4th\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"um\",\"4th\",\"passive\",\"verb participle\",\"future\",\"\",\"\",\"\",\"irregular\",\"\"],[\"\"]]","module.exports = [[\"Index\",\"Text\"],[\"1\",\"tU is made emphatic by adding on the endings –te, –temet or –timet. \\n            The other forms of the personal pronoun (with the exception of the genitive plural) \\n            are made emphatic by the addition of –met to the original form. Early emphatic forms include mEpte and tEpte.\"],[\"2\",\"Enclitics –ce or –c are sometimes added to forms of hic. Common examples include huiusce and hIsce.\"],[\"3\",\"Earlier forms.\"],[\"4\",\"The plural forms of the Interrogatives are the same as the plural forms of the Relative.\"]]","module.exports = [[\"Form Set\",\"Headwords\",\"Class\",\"Person\",\"Number\",\"Case\",\"Type\",\"Form\",\"Footnote\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"nominative\",\"regular\",\"ego\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"genitive\",\"regular\",\"meI\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"genitive\",\"irregular\",\"mIs\",\"1\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"dative\",\"regular\",\"mihi\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"dative\",\"irregular\",\"mI\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"accusative\",\"regular\",\"mE\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"accusative\",\"irregular\",\"mEmE\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"ablative\",\"regular\",\"mE\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"ablative\",\"irregular\",\"mEmE\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"tU\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"tuI\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"genitive\",\"irregular\",\"tIs\",\"1\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"dative\",\"regular\",\"tibi\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"tE\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"accusative\",\"irregular\",\"tEtE\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"tE\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"ablative\",\"irregular\",\"tEtE\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"singular\",\"vocative\",\"regular\",\"tU\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"nominative\",\"regular\",\"nOs\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"genitive\",\"regular\",\"nostrum\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"dative\",\"regular\",\"nObIs\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"accusative\",\"regular\",\"nOs\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"ablative\",\"regular\",\"nObIs\",\"\"],[\"1\",\"\",\"personal\",\"1st\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"vOs\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"vestrum\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"vestrI\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"genitive\",\"irregular\",\"vostrum\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"genitive\",\"irregular\",\"vostrI\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"dative\",\"regular\",\"vObIs\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"vOs\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"ablative\",\"regular\",\"vObIs\",\"\"],[\"1\",\"\",\"personal\",\"2nd\",\"plural\",\"vocative\",\"regular\",\"vOs\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"nominative\",\"\",\"\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"genitive\",\"regular\",\"suI\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"dative\",\"regular\",\"sibi\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"regular\",\"sE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"accusative\",\"irregular\",\"sEsE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"ablative\",\"regular\",\"sE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"ablative\",\"irregular\",\"sEsE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"nominative\",\"\",\"\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"genitive\",\"regular\",\"suI\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"dative\",\"regular\",\"sibi\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"regular\",\"sE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"accusative\",\"irregular\",\"sEsE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"ablative\",\"regular\",\"sE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"ablative\",\"irregular\",\"sEsE\",\"\"],[\"2\",\"\",\"reflexive\",\"3rd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"meus\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"meI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"meO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"meum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"meO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"mI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"irregular\",\"meus\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"mea\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"meae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"meae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"meam\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"meA\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"mea\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"meum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"meI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"meO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"meum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"meO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"meum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"tuus\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"tuI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"tuO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"tuum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"tuO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"tua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"tuae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"tuae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"tuam\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"tuA\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"tuum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"tuI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"tuO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"tuum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"tuO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"nominative\",\"regular\",\"suus\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"genitive\",\"regular\",\"suI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"dative\",\"regular\",\"suO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"accusative\",\"regular\",\"suum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"ablative\",\"regular\",\"suO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"nominative\",\"regular\",\"sua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"genitive\",\"regular\",\"suae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"dative\",\"regular\",\"suae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"accusative\",\"regular\",\"suam\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"ablative\",\"regular\",\"suA\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"nominative\",\"regular\",\"suum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"genitive\",\"regular\",\"suI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"dative\",\"regular\",\"suO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"accusative\",\"regular\",\"suum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"ablative\",\"regular\",\"suO\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"meI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"meOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"regular\",\"meIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"meOs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"regular\",\"meIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"meI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"meae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"meArum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"meAs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"meae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"mea\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"meOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"mea\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"mea\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"tuI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"tuOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"regular\",\"tuIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"tuOs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"regular\",\"tuIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"tuae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"tuArum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"tuAs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"tua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"tuOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"tua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"2nd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"nominative\",\"regular\",\"suI\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"genitive\",\"regular\",\"suOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"dative\",\"regular\",\"suIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"accusative\",\"regular\",\"suOs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"ablative\",\"regular\",\"suIs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"nominative\",\"regular\",\"suae\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"genitive\",\"regular\",\"suArum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"accusative\",\"regular\",\"suAs\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"nominative\",\"regular\",\"sua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"genitive\",\"regular\",\"suOrum\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"accusative\",\"regular\",\"sua\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"3\",\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\",\"possessive\",\"3rd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"noster\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"nostrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"nostrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"nostrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"nostrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"noster\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"nostra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"nostrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"nostrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"nostram\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"nostrA\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"nostra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"nominative\",\"regular\",\"nostrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"genitive\",\"regular\",\"nostrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"dative\",\"regular\",\"nostrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"accusative\",\"regular\",\"nostrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"ablative\",\"regular\",\"nostrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"singular\",\"vocative\",\"regular\",\"nostrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"vester\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"vestrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"vestrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"vestrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"vestrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"vestra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"vestrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"vestrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"vestram\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"vestrA\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"nominative\",\"regular\",\"vestum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"genitive\",\"regular\",\"vestrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"dative\",\"regular\",\"vestrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"accusative\",\"regular\",\"vestrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"ablative\",\"regular\",\"vestrO\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"nostrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"nostrOrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"regular\",\"nostrIs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"nostrOs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"regular\",\"nostrIs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"nostrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"nostrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"nostrArum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"nostrAs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"nostrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"nominative\",\"regular\",\"nostra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"genitive\",\"regular\",\"nostrOrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"accusative\",\"regular\",\"nostra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"1st\",\"plural\",\"vocative\",\"regular\",\"nostra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"vestrI\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"vestrOrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"regular\",\"vestrIs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"vestrOs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"regular\",\"vestrIs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"vestrae\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"vestrArum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"vestrAs\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"\",\"vocative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"nominative\",\"regular\",\"vestra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"genitive\",\"regular\",\"vestrOrum\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"accusative\",\"regular\",\"vestra\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"4\",\"noster,nostra,nostrum;vester,vestra,vestrum\",\"possessive\",\"2nd\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"is\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"regular\",\"eius\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"dative\",\"regular\",\"eI\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"eum\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"eO\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ea\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"eam\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"eA\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"id\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"id\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"eO\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"eI\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"irregular\",\"iI\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"irregular\",\"I\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"eOrum\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"dative\",\"regular\",\"eIs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"dative\",\"irregular\",\"iIs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"dative\",\"irregular\",\"Is\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"eOs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"regular\",\"eIs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"irregular\",\"iIs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"irregular\",\"Is\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"eae\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"eArum\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"eAs\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"ea\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"eOrum\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"ea\",\"\"],[\"5\",\"is,ea,id\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ille\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"regular\",\"illIus\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"regular\",\"illI\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"illum\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"illO\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"illa\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"illam\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"illA\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"illud\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"illud\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"illO\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"illI\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"illOrum\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"regular\",\"illIs\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"illOs\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"regular\",\"illIs\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"illae\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"illArum\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"illAs\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"Illa\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"illOrum\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"illa\",\"\"],[\"6\",\"ille,illa,illud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ipse\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"regular\",\"ipsIus\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"dative\",\"regular\",\"ipsI\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"ipsum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"ipsO\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ipsa\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"ipsam\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"ipsA\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ipsum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"ipsum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"ipsO\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"ipsI\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"ipsOrum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"dative\",\"regular\",\"ipsIs\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"ipsOs\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"regular\",\"ipsIs\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"ipsae\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"ipsArum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"ipsAs\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"ipsa\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"ipsOrum\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"ipsa\",\"\"],[\"7\",\"ipse,ipsa,ipsum\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"iste\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"regular\",\"istIus\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"regular\",\"istI\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"istum\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"istO\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"ista\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"istam\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"istA\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"istud\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"istud\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"istO\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"istI\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"istOrum\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"regular\",\"istIs\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"istOs\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"regular\",\"istIs\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"istae\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"istArum\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"istAs\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"ista\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"istOrum\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"ista\",\"\"],[\"8\",\"iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"singular\",\"vocative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"9\",\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"hIc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"regular\",\"huius\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"dative\",\"regular\",\"huic\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"hunc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"hOc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"haec\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"hanc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"hAc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"nominative\",\"regular\",\"hOc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"accusative\",\"regular\",\"hOc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"ablative\",\"regular\",\"hOc\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"hI\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"hOrum\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"dative\",\"regular\",\"hIs\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"hOs\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"regular\",\"hIs\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"hae\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"hArum\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"hAs\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"nominative\",\"regular\",\"haec\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"genitive\",\"regular\",\"hOrum\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"accusative\",\"regular\",\"haec\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"10\",\"hIc,haec,hOc\",\"demonstrative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"regular\",\"quI\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"regular\",\"cuius\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"irregular\",\"quoius\",\"3\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"regular\",\"cui\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"irregular\",\"quoius\",\"3\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"regular\",\"quem\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"ablative\",\"regular\",\"quO\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"regular\",\"qua\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"irregular\",\"quae\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"regular\",\"quam\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"ablative\",\"regular\",\"quA\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"nominative\",\"regular\",\"quod\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"accusative\",\"regular\",\"quod\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"ablative\",\"regular\",\"quO\",\"\"],[\"11\",\"\",\"relative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"regular\",\"quI\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"regular\",\"quEs\",\"3\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"regular\",\"quOrum\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"regular\",\"quibus\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"irregular\",\"quIs\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"regular\",\"quOs\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"ablative\",\"regular\",\"quibus\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"ablative\",\"irregular\",\"quIs\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"regular\",\"quae\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"regular\",\"quArum\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"regular\",\"quAs\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"nominative\",\"regular\",\"quae\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"genitive\",\"regular\",\"quorum\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"accusative\",\"regular\",\"quae\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"11\",\"\",\"relative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"nominative\",\"regular\",\"quis\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"regular\",\"cuius\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"regular\",\"cui\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"accusative\",\"regular\",\"quem\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"ablative\",\"regular\",\"quO\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"nominative\",\"regular\",\"quis\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"regular\",\"cuius\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"regular\",\"cui\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"accusative\",\"regular\",\"quem\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"ablative\",\"regular\",\"quO\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"nominative\",\"regular\",\"quid\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"genitive\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"dative\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"accusative\",\"regular\",\"quid\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"ablative\",\"regular\",\"quO\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"singular\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"regular\",\"quI\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"regular\",\"quEs\",\"3\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"genitive\",\"regular\",\"quOrum\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"regular\",\"quibus\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"irregular\",\"quIs\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"accusative\",\"regular\",\"quOs\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"ablative\",\"regular\",\"quibus\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"ablative\",\"irregular\",\"quIs\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"regular\",\"quae\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"genitive\",\"regular\",\"quArum\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"accusative\",\"regular\",\"quAs\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"nominative\",\"regular\",\"quae\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"genitive\",\"regular\",\"quorum\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"dative\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"accusative\",\"regular\",\"quae\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"ablative\",\"\",\"\",\"\"],[\"12\",\"\",\"interrogative\",\"\",\"plural\",\"vocative\",\"regular\",\"\",\"\"]]","module.exports = [[\"Ending\",\"Conjugation\",\"Voice\",\"Mood\",\"Tense\",\"Number\",\"Person\",\"Case\",\"Type\",\"Footnote\"],[\"ātum\",\"1st\",\"active\",\"supine\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"itum\",\"2nd\",\"active\",\"supine\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"tum\",\"3rd\",\"active\",\"supine\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"ītum\",\"4th\",\"active\",\"supine\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"ātū\",\"1st\",\"active\",\"supine\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"itū\",\"2nd\",\"active\",\"supine\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"tū\",\"3rd\",\"active\",\"supine\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"ītū\",\"4th\",\"active\",\"supine\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"supine\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"supine\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"supine\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"supine\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"supine\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"supine\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"supine\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"supine\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\"]]","module.exports = [[\"Index\",\"Text\"],[\"2\",\"Chiefly in poetry.\"],[\"3\",\"In tenses based on the perfect stem (the perfect, pluperfect and future perfect of the Active voice) a v between two vowels is often lost with contraction of the two vowels, thus āvī to ā, ēvī to ē, ōvi to ō. Perfects in īvī often omit the v but rarely contract the vowels, except before ss or st, and sometimes in the third person. In addition to the use of v or u, the Active perfect stem can also be formed in a number of other ways, such as the addition of s to the root (eg carpsi), reduplication of the root (eg cecidi from cado), and simple lengthening of the vowel (eg vidī from video or legī from lego).\"],[\"4\",\"Dic, duc, fac, and fer lack a final vowel in the imperative in classical Latin. The singular imperative of the verb sciō is always scītō, and the plural is usually scītōte.\"],[\"5\",\"Common in epic poetry.\"],[\"6\",\"Present in early Latin but chiefly confined to popular use until Livy and later writers.\"],[\"7\",\"The verb fīō is a 4th conjugation verb that is irregular in only two forms: the present infinitive fierī and the imperfect subjunctive fierem.\"]]","module.exports = [[\"Index\",\"Text\"],[\"1\",\"Old forms.\"],[\"2\",\"Alternate forms.\"],[\"3\",\"The original forms of ferrem and ferre are fer-sēm and fer-se, respectively.\"],[\"4\",\"Gerundive (Future Passive Participle)\"],[\"5\",\"singular\"],[\"6\",\"The verbs nōlō and malō are compounds of volo. They therefore attach nō- or mā- to the beginning of each verb, in place of vo- or vu-. Exceptions to this are found in the present tense: nōlō nōlumus mālō mālumus nōn vīs nōn vultis māvīs māvultis nōn vult nōlunt māvult mālunt In addition, nōlō is the only verb of the three that has present and future tense imperative forms of the verb: nōlī, nōlīte, and nōlītō, nōlītōte, respectively.\"],[\"7\",\"An earlier form.\"],[\"8\",\"The perfect passive participle ending will change according to its subject's gender, number and case. Endings shown here are the masculine, feminine and neuter nominative singular.\"],[\"9\",\"A passive form of the verb that is used impersonally is itum est.\"],[\"10\",\"While the perfect form of this verb is regular, ii usually contracts to i when it is followed by an s. Thus, īstī, īstis and īsse\"],[\"11\",\"It is rare that the “v” appear as a form.\"],[\"12\",\"Used by early writers.\"]]","module.exports = [[\"Lemma\",\"PrincipalParts\",\"Form\",\"Voice\",\"Mood\",\"Tense\",\"Number\",\"Person\",\"Footnote\"],[\"sum\",\"esse_fui_futurus\",\"sum\",\"\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"es\",\"\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"est\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sumus\",\"\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"estis\",\"\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sunt\",\"\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sim\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"siem\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"fuam\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"sīs\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"siēs\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"fuās\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"sit\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"siet\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"fuat\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"sīmus\",\"\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sītis\",\"\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sint\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"sient\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"fuant\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"es\",\"\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"este\",\"\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"esse\",\"\",\"infinitive\",\"present\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"eram\",\"\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erās\",\"\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erat\",\"\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erāmus\",\"\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erātis\",\"\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erant\",\"\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"essem\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"forem\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"essēs\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"forēs\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"esset\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"foret\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"essēmus\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"forēmus\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"essētis\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"forētis\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"essent\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"forent\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"2\"],[\"sum\",\"esse_fui_futurus\",\"erō\",\"\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"eris\",\"\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erit\",\"\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"escit\",\"\",\"indicative\",\"future\",\"singular\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"erimus\",\"\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"eritis\",\"\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"erunt\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"escunt\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"1\"],[\"sum\",\"esse_fui_futurus\",\"estō\",\"\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"estō\",\"\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"estōte\",\"\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"suntō\",\"\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"futūrus esse\",\"\",\"infinitive\",\"future\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fore\",\"\",\"infinitive\",\"future\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"futūrus\",\"\",\"verb_participle\",\"future\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"-a\",\"\",\"verb_participle\",\"future\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"-um\",\"\",\"verb_participle\",\"future\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuī\",\"\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuistī\",\"\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuit\",\"\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuimus\",\"\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuistis\",\"\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuērunt\",\"\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuēre\",\"\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerim\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fueris\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerit\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerimus\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fūvimus\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fueritis\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerint\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuisse\",\"\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fueram\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerās\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerat\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerāmus\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerātis\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerant\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuissem\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuissēs\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuisset\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fūvisset\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuissēmus\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuissētis\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuissent\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerō\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fueris\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerit\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerimus\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fueritis\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"sum\",\"esse_fui_futurus\",\"fuerint\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferō\",\"active\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fers\",\"active\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fert\",\"active\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferimus\",\"active\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertis\",\"active\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferunt\",\"active\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feram\",\"active\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferās\",\"active\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferat\",\"active\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferāmus\",\"active\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferātis\",\"active\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferant\",\"active\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fer\",\"active\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferte\",\"active\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferre\",\"active\",\"infinitive\",\"present\",\"\",\"\",\"3\"],[\"fero\",\"ferre_tuli_latus\",\"feror\",\"passive\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferris\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferre\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertur\",\"passive\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferimur\",\"passive\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feriminī\",\"passive\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feruntur\",\"passive\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferar\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferāris\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferāre\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferātur\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferāmur\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferāminī\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferantur\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferre\",\"passive\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feriminī\",\"passive\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrī\",\"passive\",\"infinitive\",\"present\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēns\",\"active\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"-entis\",\"active\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbam\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbās\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbat\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbāmus\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbātis\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbant\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrem\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"3\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēs\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferret\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēmus\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrētis\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrent\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbar\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbāris\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbāre\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbātur\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbāmur\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbāminī\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēbantur\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrer\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēris\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēre\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrētur\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēmur\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrēminī\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferrentur\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feram\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēs\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feret\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēmus\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferētis\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferent\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferar\",\"passive\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēris\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēre\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferētur\",\"passive\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēmur\",\"passive\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferēminī\",\"passive\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferentur\",\"passive\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertō\",\"active\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertōte\",\"active\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertō\",\"active\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feruntō\",\"active\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertor\",\"passive\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"fertor\",\"passive\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"feruntor\",\"passive\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latūrus esse\",\"active\",\"infinitive\",\"future\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latūm īrī\",\"passive\",\"infinitive\",\"future\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latūrus\",\"active\",\"verb_participle\",\"future\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferundus\",\"passive\",\"verb_participle\",\"future\",\"\",\"\",\"4\"],[\"fero\",\"ferre_tuli_latus\",\"tulī\",\"active\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulistī\",\"active\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulit\",\"active\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulimus\",\"active\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulistis\",\"active\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulērunt\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerim\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerīs\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerit\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerimus\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tuleritis\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerint\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) sum\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) es\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) est\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) sumus\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) estis\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) sunt\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) sim\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) sīs\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um)sit\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) sīmus\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) sītis\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a)sint\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulisse\",\"active\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus esse\",\"passive\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus, -ta, -tum\",\"passive\",\"verb_participle\",\"perfect\",\"\",\"\",\"8\"],[\"fero\",\"ferre_tuli_latus\",\"tuleram\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerās\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerat\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerāmus\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerātis\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerant\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulissem\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulissēs\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulisset\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulissēmus\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulissētis\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulissent\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) eram\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) erās\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) erat\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, a) erāmus\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, a) erātis\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, a) erant\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) essem\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) essēs\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) esset\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) essēmus\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) essētis\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) essent\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerō\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tuleris\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerit\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerimus\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tuleritis\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"tulerint\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) erō\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) eris\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātus (-a, -um) erit\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) erimus\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) ēritis\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"latī (-ae, -a) ērunt\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferendī\",\"\",\"gerundive\",\"\",\"\",\"\",\"5\"],[\"fero\",\"ferre_tuli_latus\",\"ferendō\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferendum\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"ferendō\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātum\",\"\",\"supine\",\"\",\"\",\"\",\"5\"],[\"fero\",\"ferre_tuli_latus\",\"lātū\",\"\",\"supine\",\"\",\"\",\"\",\"\"],[\"fero\",\"ferre_tuli_latus\",\"lātū\",\"\",\"supine\",\"\",\"\",\"\",\"\"],[\"volo\",\"velle_volui_-\",\"volō\",\"\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"vīs\",\"\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"vult\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"volt\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"7\"],[\"volo\",\"velle_volui_-\",\"volumus\",\"\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"vultis\",\"\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"volunt\",\"\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"velim\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"velīs\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"velit\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"velīmus\",\"\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"velītis\",\"\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"velint\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"velle\",\"\",\"infinitive\",\"present\",\"\",\"\",\"\"],[\"volo\",\"velle_volui_-\",\"volēns\",\"\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"volo\",\"velle_volui_-\",\"-entis\",\"\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbam\",\"\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbās\",\"\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbat\",\"\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbāmus\",\"\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbātis\",\"\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"volēbant\",\"\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"vellem\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"vellēs\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"vellet\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"vellēmus\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"vellētis\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"vellent\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"volam\",\"\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volēs\",\"\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"volet\",\"\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"volēmus\",\"\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volētis\",\"\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"volent\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluī\",\"\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluistī\",\"\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluit\",\"\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluimus\",\"\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluistis\",\"\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluērunt\",\"\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerim\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerīs\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerit\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerīmus\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerītis\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerint\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluisse\",\"\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"volo\",\"velle_volui_-\",\"volueram\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerās\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerat\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerāmus\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerātis\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerant\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluissem\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluissēs\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluisset\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluissēmus\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"voluissētis\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluissent\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerō\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volueris\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerit\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerimus\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"volo\",\"velle_volui_-\",\"volueritis\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"volo\",\"velle_volui_-\",\"voluerunt\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eō\",\"\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īs\",\"\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"it\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īmus\",\"\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ītis\",\"\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eunt\",\"\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eam\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eās\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eat\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eāmus\",\"\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eātis\",\"\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eant\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ī\",\"\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īte\",\"\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īre\",\"\",\"infinitive\",\"present\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"iēns\",\"\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"euntis\",\"\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībam\",\"\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ības\",\"\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībat\",\"\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībāmus\",\"\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībātis\",\"\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībant\",\"\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īrem\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īrēs\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īret\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īrēmus\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īrētis\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īrent\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībō\",\"\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībis\",\"\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībit\",\"\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībimus\",\"\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībitis\",\"\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ībunt\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ītō\",\"\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ītō\",\"\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ītōte\",\"\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"euntō\",\"\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"itūrus esse\",\"\",\"infinitive\",\"future\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"itūrus\",\"\",\"verb_participle\",\"future\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eundum\",\"passive\",\"verb_participle\",\"future\",\"\",\"\",\"4\"],[\"eo\",\"ire_ivi(ii)_itus\",\"iī\",\"\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"10\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īvī\",\"\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"11\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īstī\",\"\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"iit\",\"\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"iimus\",\"\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īstis\",\"\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"iērunt\",\"\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierim\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierīs\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierit\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierīmus\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierītis\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierint\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īsse\",\"\",\"infinitive\",\"perfect\",\"\",\"\",\"10\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īvisse\",\"\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ieram\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īveram\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierās\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierat\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierāmus\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierātis\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierant\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īssem\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īssēs\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īsset\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īssēmus\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īssētis\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īssent\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierō\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"īverō\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ieris\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierit\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierimus\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ieritis\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"ierunt\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eundī\",\"\",\"gerundive\",\"\",\"\",\"\",\"5\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eundō\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eundum\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"eundō\",\"\",\"gerundive\",\"\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"itum\",\"\",\"supine\",\"\",\"\",\"\",\"5\"],[\"eo\",\"ire_ivi(ii)_itus\",\"itū\",\"\",\"supine\",\"\",\"\",\"\",\"\"],[\"eo\",\"ire_ivi(ii)_itus\",\"itū\",\"\",\"supine\",\"\",\"\",\"\",\"\"],[\"possum\",\"posse_potui_-\",\"possum\",\"\",\"indicative\",\"present\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potis, -e sum\",\"\",\"indicative\",\"present\",\"singular\",\"1st\",\"12\"],[\"possum\",\"posse_potui_-\",\"potes\",\"\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potis, -e es\",\"\",\"indicative\",\"present\",\"singular\",\"2nd\",\"12\"],[\"possum\",\"posse_potui_-\",\"potest\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potis, -e est\",\"\",\"indicative\",\"present\",\"singular\",\"3rd\",\"12\"],[\"possum\",\"posse_potui_-\",\"possumus\",\"\",\"indicative\",\"present\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potes, -ia sumus\",\"\",\"indicative\",\"present\",\"plural\",\"1st\",\"12\"],[\"possum\",\"posse_potui_-\",\"potestis\",\"\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potes, -ia estis\",\"\",\"indicative\",\"present\",\"plural\",\"2nd\",\"12\"],[\"possum\",\"posse_potui_-\",\"possunt\",\"\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potes, -ia sunt\",\"\",\"indicative\",\"present\",\"plural\",\"3rd\",\"12\"],[\"possum\",\"posse_potui_-\",\"possim\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"possiem\",\"\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"12\"],[\"possum\",\"posse_potui_-\",\"possīs\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"possiēs\",\"\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"possit\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"postisit\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"12\"],[\"possum\",\"posse_potui_-\",\"possiet\",\"\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"possīmus\",\"\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"possiemus\",\"\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"possītis\",\"\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"possietis\",\"\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"possint\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"possient\",\"\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"posse\",\"\",\"infinitive\",\"present\",\"\",\"\",\"\"],[\"possum\",\"posse_potui_-\",\"potesse\",\"\",\"infinitive\",\"present\",\"\",\"\",\"12\"],[\"possum\",\"posse_potui_-\",\"potēns\",\"\",\"verb_participle\",\"present\",\"\",\"\",\"\"],[\"possum\",\"posse_potui_-\",\"poteram\",\"\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"poterās\",\"\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterat\",\"\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterāmus\",\"\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"poterātis\",\"\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterant\",\"\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"possem\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"possēs\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"posset\",\"\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"possēmus\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"possētis\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"possent\",\"\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterō\",\"\",\"indicative\",\"future\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"poteris\",\"\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterit\",\"\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterimus\",\"\",\"indicative\",\"future\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"poteritis\",\"\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterunt\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"poterint\",\"\",\"indicative\",\"future\",\"plural\",\"3rd\",\"12\"],[\"possum\",\"posse_potui_-\",\"potuī\",\"\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuistī\",\"\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuit\",\"\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuimus\",\"\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuistis\",\"\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuērunt\",\"\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerim\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerīs\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerit\",\"\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerīmus\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerītis\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerint\",\"\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuisse\",\"\",\"infinitive\",\"perfect\",\"\",\"\",\"\"],[\"possum\",\"posse_potui_-\",\"potueram\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerās\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerat\",\"\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerāmus\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerātis\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerant\",\"\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuissem\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuissēs\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuisset\",\"\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuissēmus\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potuissētis\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuissent\",\"\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerō\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potueris\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerit\",\"\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerimus\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\"],[\"possum\",\"posse_potui_-\",\"potueritis\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\"],[\"possum\",\"posse_potui_-\",\"potuerint\",\"\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\"]]","module.exports = [[\"Ending\",\"Conjugation\",\"Voice\",\"Mood\",\"Tense\",\"Number\",\"Person\",\"Case\",\"Type\",\"Footnote\"],[\"ō\",\"1st\",\"active\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ās\",\"1st\",\"active\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"at\",\"1st\",\"active\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āmus\",\"1st\",\"active\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ātis\",\"1st\",\"active\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ant\",\"1st\",\"active\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"em\",\"1st\",\"active\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēs\",\"1st\",\"active\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"et\",\"1st\",\"active\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmus\",\"1st\",\"active\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ētis\",\"1st\",\"active\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ent\",\"1st\",\"active\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"eō\",\"2nd\",\"active\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēs\",\"2nd\",\"active\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēt\",\"2nd\",\"active\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmus\",\"2nd\",\"active\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ētis\",\"2nd\",\"active\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ent\",\"2nd\",\"active\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"eam\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"eās\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"eat\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"eāmus\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"eātis\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"eant\",\"2nd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ō\",\"3rd\",\"active\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"is\",\"3rd\",\"active\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"it\",\"3rd\",\"active\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"imus\",\"3rd\",\"active\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"itis\",\"3rd\",\"active\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"unt\",\"3rd\",\"active\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"am\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ās\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"at\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āmus\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ātis\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ant\",\"3rd\",\"active\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"iō\",\"4th\",\"active\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īs\",\"4th\",\"active\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"it\",\"4th\",\"active\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īmus\",\"4th\",\"active\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ītis\",\"4th\",\"active\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iunt\",\"4th\",\"active\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"iam\",\"4th\",\"active\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"iās\",\"4th\",\"active\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iat\",\"4th\",\"active\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"iāmus\",\"4th\",\"active\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"iāatis\",\"4th\",\"active\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iant\",\"4th\",\"active\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ābam\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ābas\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ābat\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ābāmus\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ābātis\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ābant\",\"1st\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ārem\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ārēs\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āret\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ārēmus\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ārētis\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ārent\",\"1st\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbam\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēbās\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbat\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbāmus\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbātis\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbant\",\"2nd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ērem\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ērēs\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēret\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ērēmus\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ērētis\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ērēnt\",\"2nd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbas\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēbāt\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbat\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbāmus\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbātis\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbant\",\"3rd\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"erem\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"erēs\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"eret\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"erēmus\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"erētis\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"erent\",\"3rd\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"iēbam\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ībam\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"irregular\",\"2\"],[\"iēbas\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ības\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"iēbat\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ībat\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"irregular\",\"\"],[\"iēbāmus\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ībāmus\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"iēbātis\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ībātis\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"irregular\",\"\"],[\"iēbant\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ībant\",\"4th\",\"active\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"\"],[\"īrem\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īrēs\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īret\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īrēmus\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īrētis\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īrēnt\",\"4th\",\"active\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ābo\",\"1st\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ābis\",\"1st\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ābit\",\"1st\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ābimus\",\"1st\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ābitis\",\"1st\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ābunt\",\"1st\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ēbō\",\"2nd\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēbis\",\"2nd\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbit\",\"2nd\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbimus\",\"2nd\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbitis\",\"2nd\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbunt\",\"2nd\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"am\",\"3rd\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēs\",\"3rd\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"et\",\"3rd\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmus\",\"3rd\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ētis\",\"3rd\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ent\",\"3rd\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"iam\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ībō\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"irregular\",\"2\"],[\"iēs\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ībis\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"iet\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ībit\",\"4th\",\"active\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"irregular\",\"\"],[\"iēmus\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ībimus\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"iētis\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ībitis\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"irregular\",\"\"],[\"ient\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ībunt\",\"4th\",\"active\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"irregular\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"āvī\",\"1st\",\"active\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āvistī\",\"1st\",\"active\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āvit\",\"1st\",\"active\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āvimus\",\"1st\",\"active\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āvistis\",\"1st\",\"active\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āvērunt\",\"1st\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āvēre\",\"1st\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"6\"],[\"āverim\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āveris\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āverit\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āverimus\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āveritis\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āverint\",\"1st\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"vī\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"vistī\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"vit\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"vimus\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"vistis\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"vērunt\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"vēre\",\"2nd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"6\"],[\"verim\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"veris\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"verit\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"verimus\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"veritis\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"verint\",\"2nd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ī\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"istī\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"it\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"imus\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"istis\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ērunt\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ēre\",\"3rd\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"6\"],[\"erim\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"eris\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"erit\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"erimus\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"eritis\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"erint\",\"3rd\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"īvi\",\"4th\",\"active\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īvistī\",\"4th\",\"active\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īvit\",\"4th\",\"active\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īvimus\",\"4th\",\"active\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īvistis\",\"4th\",\"active\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īvērunt\",\"4th\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"īvēre\",\"4th\",\"active\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"6\"],[\"īverim\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"iveris\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īverit\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īverimus\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īveritis\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īverint\",\"4th\",\"active\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āveram\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āverās\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āverat\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āverāmus\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āverātis\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āverant\",\"1st\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āvissem\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āvissēs\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āvisset\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āvissēm\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āvissēs\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āvisset\",\"1st\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"veram\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"verās\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"verat\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"verāmus\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"verātis\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"verant\",\"2nd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"vissem\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"vissēs\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"visset\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"vissēmus\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"vissētis\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"vissent\",\"2nd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"eram\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"erās\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"erat\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"erāmus\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"erātis\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"erant\",\"3rd\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"issem\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"issēs\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"isset\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"issēmus\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"issētis\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"issent\",\"3rd\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"īveram\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īverās\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īverat\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īverāmus\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īverātis\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īverant\",\"4th\",\"active\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"īvissem\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īvissēs\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īvisset\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īvissēmus\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īvissētis\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īvissent\",\"4th\",\"active\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āverō\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āveris\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āverit\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āverimus\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āveritis\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āverint\",\"1st\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"verō\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"vēris\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"vērit\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"vērimus\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"vēritis\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"vērint\",\"2nd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"erō\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"eris\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"erit\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"erimus\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"eritis\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"erint\",\"3rd\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"īverō\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īveris\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īverit\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īverimus\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īveritis\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īverint\",\"4th\",\"active\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"active\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"or\",\"1st\",\"passive\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āris\",\"1st\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āre\",\"1st\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"irregular\",\"5\"],[\"ātur\",\"1st\",\"passive\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āmur\",\"1st\",\"passive\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āminiī\",\"1st\",\"passive\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"antur\",\"1st\",\"passive\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"er\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēris\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēre\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ētur\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmur\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēminī\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"entur\",\"1st\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"eor\",\"2nd\",\"passive\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēris\",\"2nd\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēre\",\"2nd\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ētur\",\"2nd\",\"passive\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmur\",\"2nd\",\"passive\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēmini\",\"2nd\",\"passive\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"entur\",\"2nd\",\"passive\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ear\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"eāris\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"eāre\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"eātur\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"eāmur\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"eāminī\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"eantur\",\"2nd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"or\",\"3rd\",\"passive\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"eris\",\"3rd\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ere\",\"3rd\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itur\",\"3rd\",\"passive\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"imur\",\"3rd\",\"passive\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"iminī\",\"3rd\",\"passive\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"untur\",\"3rd\",\"passive\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ar\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āris\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āre\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātur\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āmur\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āminī\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"antur\",\"3rd\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ior\",\"4th\",\"passive\",\"indicative\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īris\",\"4th\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īre\",\"4th\",\"passive\",\"indicative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītur\",\"4th\",\"passive\",\"indicative\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īmur\",\"4th\",\"passive\",\"indicative\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īminī\",\"4th\",\"passive\",\"indicative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iuntur\",\"4th\",\"passive\",\"indicative\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"iar\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"iāris\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iāre\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iātur\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"iāmur\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"iāminī\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iantur\",\"4th\",\"passive\",\"subjunctive\",\"present\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ābar\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ābāaris\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ābāre\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ābātur\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ābāmur\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ābāminī\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ābantur\",\"1st\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ārer\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ārēris\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ārēre\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ārētur\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ārēmur\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ārēminī\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ārentur\",\"1st\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbar\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēbāris\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbāre\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbātur\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbāmur\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbāmini\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbantur\",\"2nd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ērer\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ērēris\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ērēre\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ērētur\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ērēmur\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ērēminī\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ērentur\",\"2nd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbar\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēbāris\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbāre\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbatur\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbāmur\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbāminī\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbantur\",\"3rd\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"erer\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"erēris\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"erēre\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"erētur\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"erēmur\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"erēminī\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"erentur\",\"3rd\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"iēbar\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"iēbāris\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iēbāre\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iēbātur\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"iēbāmur\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"iēbāminī\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iēbantur\",\"4th\",\"passive\",\"indicative\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"īrer\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"īrēris\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īrēre\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īrētur\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"īrēmur\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īrēminī\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īrentur\",\"4th\",\"passive\",\"subjunctive\",\"imperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ābor\",\"1st\",\"passive\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"āberis\",\"1st\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ābere\",\"1st\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"ābitur\",\"1st\",\"passive\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ābimur\",\"1st\",\"passive\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ābiminī\",\"1st\",\"passive\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ābuntur\",\"1st\",\"passive\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ēbor\",\"2nd\",\"passive\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēberis\",\"2nd\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbere\",\"2nd\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbitur\",\"2nd\",\"passive\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēbimur\",\"2nd\",\"passive\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēbiminī\",\"2nd\",\"passive\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēbuntur\",\"2nd\",\"passive\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ar\",\"3rd\",\"passive\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ēris\",\"3rd\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēre\",\"3rd\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"ētur\",\"3rd\",\"passive\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ēmur\",\"3rd\",\"passive\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ēminī\",\"3rd\",\"passive\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"entur\",\"3rd\",\"passive\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"iar\",\"4th\",\"passive\",\"indicative\",\"future\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"iēris\",\"4th\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īēre\",\"4th\",\"passive\",\"indicative\",\"future\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"iētur\",\"4th\",\"passive\",\"indicative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"iēmur\",\"4th\",\"passive\",\"indicative\",\"future\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"iēminī\",\"4th\",\"passive\",\"indicative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ientur\",\"4th\",\"passive\",\"indicative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ātus sum\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus fui\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus es\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus fuisti\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus est\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus fuit\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āti sumus\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āti fuimus\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"āti estis\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āti fuistis\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"irregular\",\"\"],[\"āti sunt\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āti fuerunt\",\"1st\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"\"],[\"ātus sim\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus fuerim\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"irregular\",\"\"],[\"ātus sis\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus fueris\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"ātus sit\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus fuerit\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āti sīmus\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āti fuerimus\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"āti sītis\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āti fueritis\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"irregular\",\"\"],[\"āti sint\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āti fuerint\",\"1st\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"\"],[\"itus sum\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"itus es\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itus est\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itī sumus\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"itī estis\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"itī sunt\",\"2nd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"itus sim\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"itus sīs\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itus sit\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itī sīmus\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"itī sītis\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"itī sint\",\"2nd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"us sum\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"us es\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"us est\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ī sumus\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ī estis\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ī sunt\",\"3rd\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"us sim\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"us sīs\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"us sit\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"us sīmus\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"us sītis\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"us sint\",\"3rd\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītus sum\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ītus es\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītus est\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītī sumus\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īti estis\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īti sunt\",\"4th\",\"passive\",\"indicative\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītus sim\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ītus sīs\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītus sit\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītī sīmus\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īti sītis\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īti sint\",\"4th\",\"passive\",\"subjunctive\",\"perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus eram\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus fueram\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"irregular\",\"\"],[\"ātus eras\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus fueras\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"ātus erat\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus fuerat\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"irregular\",\"\"],[\"ātī erāmus\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ātī fueramus\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"ātī erātis\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ātī fueratis\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"irregular\",\"\"],[\"ātī erant\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ātī fuerant\",\"1st\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"irregular\",\"\"],[\"ātus essem\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus fuissem\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"irregular\",\"\"],[\"ātus esses\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus fuissēs\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"irregular\",\"\"],[\"ātus esset\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus fuisset\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"irregular\",\"\"],[\"āti essēmus\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āti fuissēmus\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"irregular\",\"\"],[\"āti essētis\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āti fuissētis\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āti essent\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āti fuissent\",\"1st\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"itus eram\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"itus erās\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itus erat\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itī erāmus\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"itī erātis\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"itī erant\",\"2nd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"itus essem\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"itus essēs\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itus esset\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itī essēmus\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īti essētis\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īti essent\",\"2nd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"us eram\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"us erās\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"us erat\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ī erāmus\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ī erātis\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ī erant\",\"3rd\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"us essem\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"us essēs\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"us esset\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ī essēmus\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ī essētis\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ī essent\",\"3rd\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītus eram\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ītus erās\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītus erat\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītī erāmus\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īti erātis\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ītī erant\",\"4th\",\"passive\",\"indicative\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītus essem\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ītus essēs\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītus esset\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītī essēmus\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"īti essētis\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īti essent\",\"4th\",\"passive\",\"subjunctive\",\"pluperfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ātus erō\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ātus eris\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātus erit\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"āti erimus\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"āti eritis\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āti erunt\",\"1st\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"itus erō\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"itus eris\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itus erit\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itī erimus\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"itī eritis\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"itī erunt\",\"2nd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"us erō\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"us eris\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"us erit\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ī erimus\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ī eritis\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ī erunt\",\"3rd\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ītus erō\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"1st\",\"\",\"regular\",\"\"],[\"ītus eris\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītus erit\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītī erimus\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"1st\",\"\",\"regular\",\"\"],[\"ītī eritis\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ītī erunt\",\"4th\",\"passive\",\"indicative\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"1st\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"2nd\",\"\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"subjunctive\",\"future_perfect\",\"plural\",\"3rd\",\"\",\"\",\"\"],[\"ā\",\"1st\",\"active\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"3\"],[\"āte\",\"1st\",\"active\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"āre\",\"1st\",\"passive\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"āminī\",\"1st\",\"passive\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ē\",\"2nd\",\"active\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"3\"],[\"ēte\",\"2nd\",\"active\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ēre\",\"2nd\",\"passive\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ēminī\",\"2nd\",\"passive\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"e\",\"3rd\",\"active\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"3\"],[\"īte\",\"3rd\",\"active\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ere\",\"3rd\",\"passive\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"iminī\",\"3rd\",\"passive\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ī\",\"4th\",\"active\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"3\"],[\"īte\",\"4th\",\"active\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"īre\",\"4th\",\"passive\",\"imperative\",\"present\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"īminī\",\"4th\",\"passive\",\"imperative\",\"present\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"ātō\",\"1st\",\"active\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ātō\",\"1st\",\"active\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ātote\",\"1st\",\"active\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"antō\",\"1st\",\"active\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ātōr\",\"1st\",\"passive\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"ātor\",\"1st\",\"passive\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"amantor\",\"1st\",\"passive\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ētō\",\"2nd\",\"active\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ētō\",\"2nd\",\"active\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ētōte\",\"2nd\",\"active\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"entō\",\"2nd\",\"active\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ētor\",\"2nd\",\"passive\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"\",\"2nd\",\"passive\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"ētor\",\"2nd\",\"passive\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"entor\",\"2nd\",\"passive\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"itō\",\"3rd\",\"active\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"itō\",\"3rd\",\"active\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"itōte\",\"3rd\",\"active\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"untō\",\"3rd\",\"active\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"itor\",\"3rd\",\"passive\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"\",\"3rd\",\"passive\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"itor\",\"3rd\",\"passive\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"untor\",\"3rd\",\"passive\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītō\",\"4th\",\"active\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"ītō\",\"4th\",\"active\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"regular\",\"\"],[\"ītōte\",\"4th\",\"active\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iuntō\",\"4th\",\"active\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"ītor\",\"4th\",\"passive\",\"imperative\",\"future\",\"singular\",\"2nd\",\"\",\"regular\",\"\"],[\"\",\"4th\",\"passive\",\"imperative\",\"future\",\"singular\",\"3rd\",\"\",\"\",\"\"],[\"ītor\",\"4th\",\"passive\",\"imperative\",\"future\",\"plural\",\"2nd\",\"\",\"regular\",\"\"],[\"iuntor\",\"4th\",\"passive\",\"imperative\",\"future\",\"plural\",\"3rd\",\"\",\"regular\",\"\"],[\"āre\",\"1st\",\"active\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ēre\",\"2nd\",\"active\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ere\",\"3rd\",\"active\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"īre\",\"4th\",\"active\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"āvisse\",\"1st\",\"active\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"visse\",\"2nd\",\"active\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"isse\",\"3rd\",\"active\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"īvisse\",\"4th\",\"active\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"āturus esse\",\"1st\",\"active\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"tūrus esse\",\"2nd\",\"active\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"tūrus esse\",\"3rd\",\"active\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"ītūrus esse\",\"4th\",\"active\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"ārī\",\"1st\",\"passive\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ērī\",\"2nd\",\"passive\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"ī\",\"3rd\",\"passive\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"īrī\",\"4th\",\"passive\",\"infinitive\",\"present\",\"\",\"\",\"\",\"regular\",\"\"],[\"āus esse\",\"1st\",\"passive\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"itus esse\",\"2nd\",\"passive\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"tus esse\",\"3rd\",\"passive\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"ītus esse\",\"4th\",\"passive\",\"infinitive\",\"perfect\",\"\",\"\",\"\",\"regular\",\"\"],[\"ātum īrī\",\"1st\",\"passive\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"itum īrī\",\"2nd\",\"passive\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"tum īri\",\"3rd\",\"passive\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"ītum īrī\",\"4th\",\"passive\",\"infinitive\",\"future\",\"\",\"\",\"\",\"regular\",\"\"],[\"andī\",\"1st\",\"active\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"regular\",\"\"],[\"endī\",\"2nd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"regular\",\"\"],[\"endī\",\"3rd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"regular\",\"\"],[\"iendī\",\"4th\",\"active\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"regular\",\"\"],[\"andō\",\"1st\",\"active\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"regular\",\"\"],[\"endō\",\"2nd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"regular\",\"\"],[\"endō\",\"3rd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"regular\",\"\"],[\"iendō\",\"4th\",\"active\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"regular\",\"\"],[\"andum\",\"1st\",\"active\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"endum\",\"2nd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"endum\",\"3rd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"iendum\",\"4th\",\"active\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"regular\",\"\"],[\"andō\",\"1st\",\"active\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"endō\",\"2nd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"endō\",\"3rd\",\"active\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"iendō\",\"4th\",\"active\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"regular\",\"\"],[\"\",\"1st\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"genitive\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"dative\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"accusative\",\"\",\"\"],[\"\",\"1st\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"2nd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"3rd\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\",\"4th\",\"passive\",\"gerundive\",\"\",\"\",\"\",\"ablative\",\"\",\"\"],[\"\"]]","/*\n * Latin language data module\n */\nimport { Constants, Feature, FeatureImporter } from 'alpheios-data-models'\nimport LanguageDataset from '../../../lib/language-dataset.js'\nimport Suffix from '../../../lib/suffix.js'\nimport Form from '../../../lib/form.js'\nimport nounSuffixesCSV from './data/noun/suffixes.csv'\nimport nounFootnotesCSV from './data/noun/footnotes.csv'\nimport pronounFormsCSV from './data/pronoun/forms.csv'\nimport pronounFootnotesCSV from './data/pronoun/footnotes.csv'\nimport adjectiveSuffixesCSV from './data/adjective/suffixes.csv'\nimport adjectiveFootnotesCSV from './data/adjective/footnotes.csv'\nimport verbSuffixesCSV from './data/verb/suffixes.csv'\nimport verbFootnotesCSV from './data/verb/footnotes.csv'\nimport verbFormsCSV from './data/verb/forms.csv'\nimport verbFormFootnotesCSV from './data/verb/form_footnotes.csv'\nimport verbParticipleSuffixesCSV from './data/participle/suffixes.csv'\nimport verbSupineSuffixesCSV from './data/supine/suffixes.csv'\nimport papaparse from 'papaparse'\n\n/*\n Define grammatical features of a language. Those grammatical features definitions will also be used by morphological\n analyzer's language modules as well.\n */\nexport default class LatinLanguageDataset extends LanguageDataset {\n  constructor () {\n    super(LatinLanguageDataset.languageID)\n\n    this.features = this.model.typeFeatures\n    this.features.set(Feature.types.footnote, new Feature(Feature.types.footnote, [], LatinLanguageDataset.languageID))\n    this.features.set(Feature.types.fullForm, new Feature(Feature.types.fullForm, [], LatinLanguageDataset.languageID))\n\n    // Create an importer with default values for every feature\n    for (let feature of this.features.values()) {\n      feature.addImporter(new FeatureImporter(feature.values, true))\n    }\n\n    // Create importer mapping for special language-specific values\n    this.features.get(Feature.types.declension).getImporter()\n      .map('1st 2nd', [Constants.ORD_1ST, Constants.ORD_2ND])\n    this.features.get(Feature.types.gender).getImporter()\n      .map('masculine feminine', [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n\n    this.features.get(Feature.types.tense).getImporter()\n      .map('future_perfect', Constants.TENSE_FUTURE_PERFECT)\n  }\n\n  static get languageID () {\n    return Constants.LANG_LATIN\n  }\n\n  // For noun and adjectives\n  addSuffixes (partOfSpeech, data) {\n    // An order of columns in a data CSV file\n    const n = {\n      suffix: 0,\n      number: 1,\n      grmCase: 2,\n      declension: 3,\n      gender: 4,\n      type: 5,\n      footnote: 6\n    }\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[n.suffix]\n      // Handle special suffix values\n      if (suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech,\n        this.features.get(Feature.types.number).createFromImporter(item[n.number]),\n        this.features.get(Feature.types.grmCase).createFromImporter(item[n.grmCase]),\n        this.features.get(Feature.types.declension).createFromImporter(item[n.declension]),\n        this.features.get(Feature.types.gender).createFromImporter(item[n.gender]),\n        this.features.get(Feature.types.type).createFromImporter(item[n.type])]\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n      this.addInflection(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  // For pronouns\n  addPronounForms (partOfSpeech, data) {\n    const n = {\n      formSet: 0,\n      headword: 1,\n      grmClass: 2,\n      person: 3,\n      number: 4,\n      case: 5,\n      type: 6,\n      form: 7,\n      footnote: 8\n    }\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let features = [partOfSpeech]\n      //    if (item[n.formSet]) {\n      //      features.push(languageModel.features[Feature.types.formSet]createFromImporter(item[0]))\n      //    }\n      // TODO read a headword into a principalPars array\n      //  if (item[n.headword]) { }\n      if (item[n.grmClass]) {\n        features.push(this.features.get(Feature.types.grmClass).createFromImporter(item[n.grmClass]))\n      }\n      if (item[n.person]) {\n        features.push(this.features.get(Feature.types.person).createFromImporter(item[n.person]))\n      }\n      if (item[n.number]) {\n        features.push(this.features.get(Feature.types.number).createFromImporter(item[n.number]))\n      }\n      if (item[n.case]) {\n        features.push(this.features.get(Feature.types.case).createFromImporter(item[n.case]))\n      }\n      if (item[n.type]) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(item[n.type]))\n      }\n      let form = item[n.form] ? item[n.form] : ''\n\n      // Footnotes\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n      this.addInflection(partOfSpeech.value, Form, form, features)\n    }\n  }\n\n  // For verbs\n  addVerbSuffixes (partOfSpeech, data) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      let columns = [\n        Feature.types.conjugation,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.case,\n        Feature.types.type\n      ]\n      columns.forEach((c, j) => {\n        try {\n          features.push(this.features.get(c).createFromImporter(item[j + 1]))\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      let grammartype = item[7]\n      // Type information can be empty if no ending is provided\n      if (grammartype) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(grammartype))\n      }\n      // Footnotes\n      if (item[9]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[9].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n      this.addInflection(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  addVerbParticipleSuffixes (partOfSpeech, data) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      let columns = [\n        Feature.types.conjugation,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.case,\n        Feature.types.type\n      ]\n      columns.forEach((c, j) => {\n        try {\n          features.push(this.features.get(c).createFromImporter(item[j + 1]))\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      let grammartype = item[7]\n      // Type information can be empty if no ending is provided\n      if (grammartype) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(grammartype))\n      }\n      this.addInflection(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  addVerbSupineSuffixes (partOfSpeech, data) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      let columns = [\n        Feature.types.conjugation,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.case,\n        Feature.types.type\n      ]\n      columns.forEach((c, j) => {\n        try {\n          features.push(this.features.get(c).createFromImporter(item[j + 1]))\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      let grammartype = item[7]\n      // Type information can be empty if no ending is provided\n      if (grammartype) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(grammartype))\n      }\n      this.addInflection(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  // for Lemmas\n  addVerbForms (partOfSpeech, data) {\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let lemma = item[0]\n      // let principalParts = item[1].split(/_/)\n      let form = item[2]\n\n      // Lemma,PrincipalParts,Form,Voice,Mood,Tense,Number,Person,Footnote\n      let features = [\n        partOfSpeech,\n        this.features.get(Feature.types.fullForm).createFromImporter(lemma)\n      ]\n      if (item[3]) {\n        features.push(this.features.get(Feature.types.voice).createFromImporter(item[3]))\n      }\n      if (item[4]) {\n        features.push(this.features.get(Feature.types.mood).createFromImporter(item[4]))\n      }\n      if (item[5]) {\n        features.push(this.features.get(Feature.types.tense).createFromImporter(item[5]))\n      }\n      if (item[6]) {\n        features.push(this.features.get(Feature.types.number).createFromImporter(item[6]))\n      }\n      if (item[7]) {\n        features.push(this.features.get(Feature.types.person).createFromImporter(item[7]))\n      }\n\n      // Footnotes\n      if (item[8]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[8].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n      }\n      this.addInflection(partOfSpeech.value, Form, form, features)\n    }\n  }\n\n  addFootnotes (partOfSpeech, classType, data) {\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      this.addFootnote(partOfSpeech.value, classType, data[i][0], data[i][1])\n    }\n  }\n\n  loadData () {\n    let partOfSpeech\n    let suffixes\n    let forms\n    let footnotes\n\n    // Nouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_NOUN)\n    suffixes = papaparse.parse(nounSuffixesCSV, {})\n    this.addSuffixes(partOfSpeech, suffixes.data)\n    footnotes = papaparse.parse(nounFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Suffix, footnotes.data)\n\n    // Pronouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_PRONOUN)\n    forms = papaparse.parse(pronounFormsCSV, {})\n    this.addPronounForms(partOfSpeech, forms.data)\n    footnotes = papaparse.parse(pronounFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Form, footnotes.data)\n\n    // Adjectives\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_ADJECTIVE)\n    suffixes = papaparse.parse(adjectiveSuffixesCSV, {})\n    this.addSuffixes(partOfSpeech, suffixes.data)\n    footnotes = papaparse.parse(adjectiveFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Suffix, footnotes.data)\n\n    // Verbs\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB)\n    suffixes = papaparse.parse(verbSuffixesCSV, {})\n    this.addVerbSuffixes(partOfSpeech, suffixes.data)\n    footnotes = papaparse.parse(verbFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Suffix, footnotes.data)\n    forms = papaparse.parse(verbFormsCSV, {})\n    this.addVerbForms(partOfSpeech, forms.data)\n    footnotes = papaparse.parse(verbFormFootnotesCSV, {})\n    this.addFootnotes(partOfSpeech, Form, footnotes.data)\n\n    // Verb Participles\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB_PARTICIPLE)\n    suffixes = papaparse.parse(verbParticipleSuffixesCSV, {})\n    this.addVerbParticipleSuffixes(partOfSpeech, suffixes.data)\n\n    // Verb Supine\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_SUPINE)\n    suffixes = papaparse.parse(verbSupineSuffixesCSV, {})\n    this.addVerbSupineSuffixes(partOfSpeech, suffixes.data)\n\n    this.dataLoaded = true\n    return this\n  }\n\n  static getObligatoryMatchList (inflection) {\n    if (inflection.constraints.fullFormBased) {\n      return [Feature.types.fullForm]\n    } else {\n      // Default value for suffix matching\n      return [Feature.types.part]\n    }\n  }\n\n  static getOptionalMatchList (inflection) {\n    const featureOptions = [\n      Feature.types.grmCase,\n      Feature.types.declension,\n      Feature.types.gender,\n      Feature.types.number,\n      Feature.types.voice,\n      Feature.types.mood,\n      Feature.types.tense,\n      Feature.types.person\n    ]\n    return featureOptions.filter(f => inflection[f])\n  }\n}\n","import InflectionData from './inflection-data.js'\nimport LatinDataset from './lang/latin/latin-language-dataset.js'\nimport GreekDataset from './lang/greek/greek-language-dataset.js'\n\n// Stores a LanguageDatasetFactory's single instance\nlet datasetFactory\n\n/**\n * Creates and stores datasets for all available languages. This is a singleton.\n * When created, datasets' data is not loaded yet. It will be loaded on a first call (lazy initialization).\n */\nexport default class LanguageDatasetFactory {\n  /**\n   * @param {Constructor[]} languageData - Language datasets of supported languages.\n   */\n  constructor (languageData = [LatinDataset, GreekDataset]) {\n    this.sets = new Map()\n    for (let Set of languageData) {\n      this.sets.set(Set.languageID, new Set())\n    }\n  }\n\n  /**\n   * Returns a single instance of self.\n   * @return {LanguageDatasetFactory} A self instances.\n   */\n  static get instance () {\n    if (!datasetFactory) {\n      datasetFactory = new LanguageDatasetFactory()\n    }\n    return datasetFactory\n  }\n\n  /**\n   * Returns an instance of a dataset for a language ID given.\n   * @param {symbol} languageID - A language ID of a dataset to be retrieved.\n   * @return {LanguageDataset} An instance of a language dataset.\n   */\n  static getDataset (languageID) {\n    let instance = this.instance\n    if (instance.sets.has(languageID)) {\n      let dataset = instance.sets.get(languageID)\n      if (!dataset.dataLoaded) {\n        dataset.loadData()\n      }\n      return dataset\n    }\n  }\n\n  /**\n   * Finds matching forms or suffixes for a homonym.\n   * @param {Homonym} homonym - A homonym for which matching suffixes must be found.\n   * @return {InflectionData} A return value of an inflection query.\n   */\n  static getInflectionData (homonym) {\n    let instance = this.instance\n    if (instance.sets.has(homonym.languageID)) {\n      let dataset = this.getDataset(homonym.languageID)\n      for (let inflection of homonym.inflections) {\n        // Set grammar rules for an inflection\n        inflection.setConstraints()\n        // dataset.setInflectionConstraints(inflection)\n      }\n      return dataset.getInflectionData(homonym)\n    } else {\n      return new InflectionData(homonym) // Return an empty inflection data set\n    }\n  }\n}\n","import { Feature, GrmFeature, LanguageModelFactory as LMF } from 'alpheios-data-models'\nimport Suffix from './suffix.js'\nimport Form from './form.js'\nimport Footnote from './footnote.js'\nimport InflectionSet from './inflection-set.js'\nimport InflectionData from './inflection-data.js'\nimport MatchData from './match-data.js'\n\n/**\n * Stores inflection language data\n */\nexport default class LanguageDataset {\n  /**\n   * Initializes a LanguageDataset.\n   * @param {symbol} languageID - A language ID of a data set.\n   */\n  constructor (languageID) {\n    if (!languageID) {\n      // Language is not supported\n      throw new Error('Language ID cannot be empty.')\n    }\n\n    this.languageID = languageID\n    this.dataLoaded = false\n    this.model = LMF.getLanguageModel(languageID)\n    this.pos = new Map()\n    this.footnotes = [] // Footnotes\n  }\n\n  /**\n   * Each grammatical feature can be either a single or an array of GrmFeature objects. The latter is the case when\n   * an ending can belong to several grammatical features at once (i.e. belong to both 'masculine' and\n   * 'feminine' genders.\n   *\n   * @param {string} partOfSpeech - A part of speech this inflection belongs to.\n   * @param {Function} ClassType - either Suffix, Form, or Paradigm\n   * @param {string | null} itemValue - A text of an item. It is either a string or null if there is no suffix.\n   * @param {Feature[]} features.\n   * @param {ExtendedLanguageData} extendedLangData\n   */\n  addInflection (partOfSpeech, ClassType, itemValue, features, extendedLangData = undefined) {\n    let item = new ClassType(itemValue)\n    item.extendedLangData = extendedLangData\n\n    // Go through all features provided\n    for (let feature of features) {\n      // If this is a footnote. Footnotes should go in a flat array\n      // because we don't need to split by them\n      if (feature.type === GrmFeature.types.footnote) {\n        item[GrmFeature.types.footnote] = item[GrmFeature.types.footnote] || []\n        item[GrmFeature.types.footnote].push(feature.value)\n      } else {\n        item.features[feature.type] = feature\n      }\n    }\n\n    if (!this.pos.has(partOfSpeech)) {\n      this.pos.set(partOfSpeech, new InflectionSet(partOfSpeech))\n    }\n    this.pos.get(partOfSpeech).addInflectionItem(item)\n  }\n\n  addParadigms (partOfSpeech, paradigms) {\n    if (!this.pos.has(partOfSpeech.value)) {\n      this.pos.set(partOfSpeech.value, new InflectionSet(partOfSpeech.value))\n    }\n    this.pos.get(partOfSpeech.value).addInflectionItems(paradigms)\n  }\n\n  /**\n   * Stores a footnote item.\n   * @param {string} partOfSpeech - A part of speech this footnote belongs to\n   * @param {Function} classType - A class constructor of either a Suffix or a Form\n   * @param {number} index - A footnote's index.\n   * @param {string} text - A footnote's text.\n   */\n  addFootnote (partOfSpeech, classType, index, text) {\n    if (!index) {\n      throw new Error('Footnote index data should not be empty.')\n    }\n\n    if (!text) {\n      throw new Error('Footnote text data should not be empty.')\n    }\n\n    let footnote = new Footnote(index, text, partOfSpeech)\n\n    // this.footnotes.push(footnote)\n\n    if (!this.pos.has(partOfSpeech)) {\n      this.pos.set(partOfSpeech, new InflectionSet(partOfSpeech))\n    }\n    this.pos.get(partOfSpeech).addFootnote(classType, index, footnote)\n  }\n\n  /**\n   * Checks for obligatory matches between an inflection and an item.\n   * @param {Inflection} inflection - An inflection object.\n   * @param {Morpheme} item - An inflection data item: a Suffix, a Form, or a Paradigm\n   * @return {Object} A results in the following format:\n   *   {Feature[]} matchedItems - Features that matched (if any)\n   *   {boolean} matchResult - True if all obligatory matches are fulfilled, false otherwise.\n   */\n  static getObligatoryMatches (inflection, item) {\n    return this.checkMatches(this.getObligatoryMatchList(inflection), inflection, item)\n  }\n\n  /**\n   * Checks for optional matches between an inflection and an item.\n   * @param {Inflection} inflection - An inflection object.\n   * @param {Morpheme} item - An inflection data item: a Suffix, a Form, or a Paradigm\n   * @return {Object} A results in the following format:\n   *   {Feature[]} matchedItems - Features that matched (if any)\n   *   {boolean} matchResult - True if all obligatory matches are fulfilled, false otherwise.\n   */\n  static getOptionalMatches (inflection, item) {\n    return this.checkMatches(this.getOptionalMatchList(inflection), inflection, item)\n  }\n\n  static checkMatches (matchList, inflection, item) {\n    let matches = matchList.reduce((acc, f) => {\n      if (inflection.hasOwnProperty(f) && item.featureMatch(inflection[f])) {\n        acc.push(f)\n      }\n      return acc\n    }, [])\n    let result = (matches.length === matchList.length)\n    return { fullMatch: result, matchedItems: matches }\n  }\n\n  /**\n   * Sets inflection grammar properties based on inflection data\n   * @param {Inflection} inflection - An inflection data object\n   * @return {Inflection} A modified inflection data object\n   */\n  /* setInflectionConstraints (inflection) {\n    inflection.constraints.optionalMatches = this.constructor.getOptionalMatches(inflection)\n    return inflection\n  } */\n\n  getInflectionData (homonym) {\n    // Add support for languages\n    let result = new InflectionData(homonym)\n    let inflections = {}\n\n    for (let lexeme of homonym.lexemes) {\n      for (let inflection of lexeme.inflections) {\n        let partOfSpeech = inflection[GrmFeature.types.part]\n        if (!partOfSpeech) {\n          throw new Error('Part of speech data is missing in an inflection')\n        }\n        /* if (!Array.isArray(partOfSpeech)) {\n          throw new Error('Part of speech data should be in an array format')\n        }\n        if (partOfSpeech.length === 0 && partOfSpeech.length > 1) {\n          throw new Error('Part of speech data should be an array with exactly one element')\n        }\n        partOfSpeech = partOfSpeech[0].value */\n        if (!partOfSpeech.isSingle) {\n          throw new Error('Part of speech data should have only one value')\n        }\n        partOfSpeech = partOfSpeech.value\n\n        if (inflection.constraints.pronounClassRequired) {\n          /*\n          A `class` grammatical feature is an obligatory match for Greek pronouns. Class, however, is not present in\n          the Inflection object at the time we receive it from a morphological analyzer because a morphological analyzer\n          does not provide such data. To fix this, for pronouns we need to figure out what the `class` feature value is\n          by finding an exact pronoun form match in inflection data and obtaining a corresponding `class` value.\n          The value found will then be attached to an Inflection object.\n           */\n          // Get a class this inflection belongs to\n          let grmClasses = this.model.getPronounClasses(this.pos.get(partOfSpeech).types.get(Form).items, inflection.form)\n          if (!grmClasses) {\n            console.warn(`Cannot determine a grammar class for a ${inflection.form} pronoun. \n              Table construction will probably fail`)\n          } else {\n            // One or more values found\n            inflection[GrmFeature.types.grmClass] = grmClasses\n          }\n        }\n\n        // add the lemma to the inflection\n        inflection[Feature.types.word] = new Feature(Feature.types.word, lexeme.lemma.word, lexeme.lemma.languageID)\n\n        // Group inflections by a part of speech\n        if (!inflections.hasOwnProperty(partOfSpeech)) {\n          inflections[partOfSpeech] = []\n        }\n        inflections[partOfSpeech].push(inflection)\n      }\n    }\n\n    // Scan for matches for all parts of speech separately\n    for (const partOfSpeech in inflections) {\n      let inflectionSet = new InflectionSet(partOfSpeech)\n      if (inflections.hasOwnProperty(partOfSpeech)) {\n        let inflectionsGroup = inflections[partOfSpeech]\n        let sourceSet = this.pos.get(partOfSpeech)\n        if (!sourceSet) {\n          // There is no source data for this part of speech\n          console.warn(`There is no source data for the following part of speech: ${partOfSpeech}`)\n          continue\n        }\n\n        let paradigms = []\n        let paradigmIDs = []\n        let paradigmBased = false\n\n        /*\n        There might be cases when we don't know beforehand if an inflection is form based.\n        In this case, if `fullFormBased` constraint not set, we'll try to find matching forms within a source data.\n        If any found, `fullFormBased` constraint will be set to true.\n         */\n        for (let inflection of inflectionsGroup) {\n          let matchingParadigms = sourceSet.getMatchingParadigms(inflection)\n          if (matchingParadigms.length > 0) {\n            // Make sure all paradigms are unique\n            for (const paradigm of matchingParadigms) {\n              if (!paradigmIDs.includes(paradigm.id)) {\n                paradigms.push(paradigm)\n                paradigmIDs.push(paradigm.id)\n              }\n            }\n            inflection.constraints.paradigmBased = true\n            paradigmBased = true\n          }\n\n          if (!inflection.constraints.suffixBased && !paradigmBased) {\n            inflection.constraints.fullFormBased = this.hasMatchingForms(partOfSpeech, inflection)\n          }\n\n          if (!inflection.constraints.fullFormBased && !paradigmBased) {\n            // If it is not full form based, then probably it is suffix base\n            inflection.constraints.suffixBased = true\n          }\n        }\n        if (paradigmBased) {\n          inflectionSet.addInflectionItems(paradigms)\n        }\n\n        // If at least one inflection in a group has a constraint, we'll search for data based on that criteria\n        let suffixBased = (inflectionsGroup.find(i => i.constraints.suffixBased) !== undefined)\n        let formBased = (inflectionsGroup.find(i => i.constraints.fullFormBased) !== undefined)\n\n        // Check for suffix matches\n        if (suffixBased) {\n          if (sourceSet.types.has(Suffix)) {\n            let items = sourceSet.types.get(Suffix).items.reduce(this['reducer'].bind(this, inflectionsGroup), [])\n            if (items.length > 0) {\n              inflectionSet.addInflectionItems(items)\n            }\n          }\n        }\n\n        // If there is at least on full form based inflection, search for full form items\n        if (formBased) {\n          let items = sourceSet.types.get(Form).items.reduce(this['reducer'].bind(this, inflectionsGroup), [])\n          if (items.length > 0) {\n            inflectionSet.addInflectionItems(items)\n          }\n        }\n\n        if (inflectionSet.hasTypes) {\n          for (const inflectionType of inflectionSet.inflectionTypes) {\n            let footnotesSource = sourceSet.types.get(inflectionType).footnotesMap\n            const footnotesInUse = inflectionSet.types.get(inflectionType).footnotesInUse\n            for (let footnote of footnotesSource.values()) {\n              if (footnotesInUse.includes(footnote.index)) {\n                inflectionSet.addFootnote(inflectionType, footnote.index, footnote)\n              }\n            }\n          }\n          result.addInflectionSet(inflectionSet)\n        }\n      }\n    }\n\n    return result\n  }\n\n  hasMatchingForms (partOfSpeech, inflection) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n      if (inflectionSet.types.has(Form)) {\n        return inflectionSet.types.get(Form).items.find(item => this.matcher([inflection], item)) !== undefined\n      }\n    }\n    return false\n  }\n\n  reducer (inflections, accumulator, item) {\n    let result = this.matcher(inflections, item)\n    if (result) {\n      accumulator.push(result)\n    }\n    return accumulator\n  }\n\n  /**\n   * Decides whether a suffix is a match to any of inflections, and if it is, what type of match it is.\n   * @param {Inflection[]} inflections - an array of inflection objects to be matched against a suffix.\n   * @param {Suffix} item - a suffix to be matched with inflections.\n   * @returns {Suffix | null} if a match is found, returns a suffix object modified with some\n   * additional information about a match. if no matches found, returns null.\n   */\n  matcher (inflections, item) {\n    // Any of those features must match between an inflection and an ending\n    let bestMatchData = null // information about the best match we would be able to find\n\n    /*\n     There can be only one full match between an inflection and a suffix (except when suffix has multiple values?)\n     But there could be multiple partial matches. So we should try to find the best match possible and return it.\n     a fullFeature match is when one of inflections has all grammatical features fully matching those of a suffix\n     */\n    for (let inflection of inflections) {\n      let matchData = new MatchData() // Create a match profile\n      matchData.suffixMatch = inflection.compareWithWord(item.value)\n\n      // Check for obligatory matches\n      const obligatoryMatches = this.constructor.getObligatoryMatches(inflection, item)\n      if (obligatoryMatches.fullMatch) {\n        matchData.matchedFeatures.push(...obligatoryMatches.matchedItems)\n      } else {\n        // If obligatory features do not match, there is no reason to check other items\n        break\n      }\n\n      // Check for optional matches\n      const optionalMatches = this.constructor.getOptionalMatches(inflection, item)\n      matchData.matchedFeatures.push(...optionalMatches.matchedItems)\n\n      if (matchData.suffixMatch && obligatoryMatches.fullMatch && optionalMatches.fullMatch) {\n        // This is a full match\n        matchData.fullMatch = true\n\n        // There can be only one full match, no need to search any further\n        item.match = matchData\n        return item\n      }\n      bestMatchData = this.bestMatch(bestMatchData, matchData)\n    }\n    if (bestMatchData) {\n      // There is some match found\n      item.match = bestMatchData\n      return item\n    }\n    return null\n  }\n\n  /**\n   * Decides whether matchA is 'better' (i.e. has more items matched) than matchB or not\n   * @param {MatchData} matchA\n   * @param {MatchData} matchB\n   * @returns {MatchData} A best of two matches\n   */\n  bestMatch (matchA, matchB) {\n    // If one of the arguments is not set, return the other one\n    if (!matchA && matchB) {\n      return matchB\n    }\n\n    if (!matchB && matchA) {\n      return matchA\n    }\n\n    // item match has a priority\n    if (matchA.suffixMatch !== matchB.suffixMatch) {\n      if (matchA.suffixMatch > matchB.suffixMatch) {\n        return matchA\n      } else {\n        return matchB\n      }\n    }\n\n    // If same on suffix matche, compare by how many features matched\n    if (matchA.matchedFeatures.length >= matchB.matchedFeatures.length) {\n      // Arbitrarily return matchA if matches are the same\n      return matchA\n    } else {\n      return matchB\n    }\n  }\n}\n","/**\n * Detailed information about a match type.\n */\nexport default class MatchData {\n  constructor () {\n    this.suffixMatch = false // Whether two suffixes are the same.\n    this.formMatch = false // Whether two forms of the word are the same\n    this.fullMatch = false // Whether two suffixes and all grammatical features, including part of speech, are the same.\n    this.matchedFeatures = [] // How many features matches each other.\n  }\n\n  static readObject (jsonObject) {\n    let matchData = new MatchData()\n    matchData.suffixMatch = jsonObject.suffixMatch\n    matchData.fullMatch = jsonObject.fullMatch\n    for (let feature of jsonObject.matchedFeatures) {\n      matchData.matchedFeatures.push(feature)\n    }\n    return matchData\n  }\n}\n","import * as Models from 'alpheios-data-models'\nimport MatchData from './match-data'\nimport ExtendedLanguageData from './extended-language-data'\nimport uuidv4 from 'uuid/v4'\n\n/**\n * Suffix is an ending of a word with none or any grammatical features associated with it.\n * Features are stored in properties whose names are type of a grammatical feature (i.e. case, gender, etc.)\n * Each feature can have a single or multiple values associated with it (i.e. gender can be either 'masculine',\n * a single value, or 'masculine' and 'feminine'. That's why all values are stored in an array.\n */\nexport default class Morpheme {\n  /**\n   * Initializes a Suffix object.\n   * @param {string | null} morphemeValue - A suffix text or null if suffix is empty.\n   */\n  constructor (morphemeValue) {\n    if (morphemeValue === undefined) {\n      throw new Error('Morpheme value should not be empty.')\n    }\n    this.id = uuidv4()\n    this.value = morphemeValue\n    this.features = {}\n    this.featureGroups = {}\n\n    /*\n    Extended language data stores additional suffix information that is specific for a particular language.\n    It uses the following schema:\n    {string} language(key): {object} extended language data. This object is specific for each language\n    and is defined in a language model.\n     */\n    this.extendedLangData = {}\n    this.match = undefined\n  }\n\n  static get ClassType () {\n    return this\n  }\n\n  static readObject (jsonObject) {\n    let suffix = new this.ClassType(jsonObject.value)\n\n    if (jsonObject.features) {\n      for (let key in jsonObject.features) {\n        if (jsonObject.features.hasOwnProperty(key)) {\n          suffix.features[key] = jsonObject.features[key]\n        }\n      }\n    }\n\n    if (jsonObject.featureGroups) {\n      for (let key in jsonObject.featureGroups) {\n        if (jsonObject.featureGroups.hasOwnProperty(key)) {\n          suffix.featureGroups[key] = []\n          for (let value of jsonObject.featureGroups[key]) {\n            suffix.featureGroups[key].push(value)\n          }\n        }\n      }\n    }\n\n    if (jsonObject[Models.GrmFeature.types.footnote]) {\n      suffix[Models.GrmFeature.types.footnote] = []\n      for (let footnote of jsonObject[Models.GrmFeature.types.footnote]) {\n        suffix[Models.GrmFeature.types.footnote].push(footnote)\n      }\n    }\n\n    if (jsonObject.match) {\n      suffix.match = MatchData.readObject(jsonObject.match)\n    }\n\n    for (const lang in jsonObject.extendedLangData) {\n      if (jsonObject.extendedLangData.hasOwnProperty(lang)) {\n        suffix.extendedLangData[lang] = ExtendedLanguageData.readObject(jsonObject.extendedLangData[lang])\n      }\n    }\n    return suffix\n  }\n\n  /**\n   * Returns a copy of itself. Used in splitting suffixes with multi-value features.\n   * @returns {Suffix}\n   */\n  clone () {\n    // TODO: do all-feature two-level cloning\n    let clone = new this.constructor.ClassType(this.value)\n    for (const key in this.features) {\n      if (this.features.hasOwnProperty(key)) {\n        clone.features[key] = this.features[key]\n      }\n    }\n    for (const key in this.featureGroups) {\n      if (this.featureGroups.hasOwnProperty(key)) {\n        clone.featureGroups[key] = this.featureGroups[key]\n      }\n    }\n\n    if (this.hasOwnProperty(Models.GrmFeature.types.footnote)) {\n      clone[Models.GrmFeature.types.footnote] = this[Models.GrmFeature.types.footnote]\n    }\n\n    for (const lang in this.extendedLangData) {\n      if (this.extendedLangData.hasOwnProperty(lang)) {\n        clone.extendedLangData[lang] = this.extendedLangData[lang]\n      }\n    }\n    return clone\n  }\n\n  /**\n   * Checks if a morpheme has at least one common feature value with a `feature`.\n   * @param {Feature} feature - A feature we need to match with the ones stored inside the morpheme object.\n   * @returns {boolean} - True if a `feature` has at least one value in common with a morpheme, false otherwise.\n   */\n  featureMatch (feature) {\n    const matchingValues = this.matchingValues(feature)\n    return matchingValues.length > 0\n  }\n\n  /**\n   * Returns a list of values that are the same between a morpheme and a feature (an intersection).\n   * @param {Feature} feature\n   * @return {string[]}\n   */\n  matchingValues (feature) {\n    let matches = []\n    if (feature && this.features.hasOwnProperty(feature.type)) {\n      const morphemeValue = this.features[feature.type]\n      for (const featureValue of feature.values) {\n        if (morphemeValue.values.includes(featureValue)) {\n          matches.push(featureValue)\n        }\n      }\n    }\n    return matches\n  }\n\n  /**\n   * Find feature groups in Suffix.featureGroups that are the same between suffixes provided\n   * @param suffixes\n   */\n  static getCommonGroups (suffixes) {\n    let features = Object.keys(suffixes[0].featureGroups)\n\n    let commonGroups = features.filter(feature => {\n      let result = true\n      for (let i = 1; i < suffixes.length; i++) {\n        result = result && suffixes[i].features.hasOwnProperty(feature)\n      }\n      return result\n    })\n    return commonGroups\n  }\n\n  /**\n   * Finds out if an suffix is in the same group with some other suffix. The other suffix is provided as a function argument.\n   * Two suffixes are considered to be in the same group if they are:\n   * a. Have at least one common group in featureGroups;\n   * b. Have the same suffix\n   * c. Have values of all features the same except for those that belong to a common group(s)\n   * d. Values of the common group features must be complementary. Here is an example:\n   * Let's say a 'gender' group can have values such as 'masculine' and 'feminine'. Then suffixes will be combined\n   * only if gender value of one suffix is 'masculine' and the other value is 'feminine'. If both suffixes have the same\n   * either 'masculine' or 'feminine' value, they sill not be combined as are not being complementary.\n   * @param {Suffix} suffix - An other suffix that we compare this suffix with.\n   * @returns {boolean} - True if both suffixes are in the same group, false otherwise.\n   */\n  isInSameGroupWith (suffix) {\n    let commonGroups = Morpheme.getCommonGroups([this, suffix])\n    if (commonGroups.length < 1) {\n      // If elements do not have common groups in Suffix.featureGroups then they are not in the same group\n      return false\n    }\n\n    let commonValues = {}\n    commonGroups.forEach((feature) => { commonValues[feature] = new Set([this.features[feature]]) })\n\n    let result = true\n    result = result && this.value === suffix.value\n    // If suffixes does not match don't check any further\n    if (!result) {\n      return false\n    }\n\n    // Check all features to be a match, except those that are possible group values\n    for (let feature of Object.keys(this.features)) {\n      if (commonGroups.indexOf(feature) >= 0) {\n        commonValues[feature].add(suffix.features[feature])\n\n        // Do not compare common groups\n        continue\n      }\n      result = result && this.features[feature] === suffix.features[feature]\n      // If feature mismatch discovered, do not check any further\n      if (!result) {\n        return false\n      }\n    }\n\n    commonGroups.forEach(feature => {\n      result = result && commonValues[feature].size === 2\n    })\n\n    return result\n  }\n\n  /**\n   * Splits a suffix that has multiple values of one or more grammatical features into an array of Suffix objects\n   * with each Suffix object having only a single value of those grammatical features. Initial multiple values\n   * are stored in a featureGroups[featureType] property as an array of values.\n   * @param {string} featureType - A type of a feature\n   * @param {GrmFeature[]} featureValues - Multiple grammatical feature values.\n   * @returns {Suffix[]} - An array of suffixes.\n   */\n  split (featureType, featureValues) {\n    let copy = this.clone()\n    let values = []\n    featureValues.forEach(element => values.push(element.value))\n    copy.features[featureType] = featureValues[0].value\n    copy.featureGroups[featureType] = values\n    let suffixItems = [copy]\n    for (let i = 1; i < featureValues.length; i++) {\n      copy = this.clone()\n      copy.features[featureType] = featureValues[i].value\n      copy.featureGroups[featureType] = values\n      suffixItems.push(copy)\n    }\n    return suffixItems\n  }\n\n  /**\n   * Combines suffixes that are in the same group together. Suffixes to be combined must have their values listed\n   * in an array stored as featureGroups[featureType] property.\n   * @param {Suffix[]} suffixes - An array of suffixes to be combined.\n   * @param {function} mergeFunction - A function that will merge two suffixes. By default it uses Suffix.merge,\n   * but provides a way to supply a presentation specific functions. Please see Suffix.merge for more\n   * information on function format.\n   * @returns {Suffix[]} An array of suffixes with some items possibly combined together.\n   */\n  static combine (suffixes, mergeFunction = Morpheme.merge) {\n    let matchFound = false\n    let matchIdx\n\n    do {\n      matchFound = false\n\n      /*\n      Go through an array of suffixes end compare each suffix with each other (two-way compare) one time. \\\n      If items are in the same group, merge two suffixes, break out of a loop,\n      and remove one matching suffix (the second one) from an array.\n      Then repeat on a modified array until no further matches found.\n       */\n      for (let i = 0; i < suffixes.length; i++) {\n        if (matchFound) {\n          continue\n        }\n        for (let j = i + 1; j < suffixes.length; j++) {\n          if (suffixes[i].isInSameGroupWith(suffixes[j])) {\n            matchIdx = j\n            matchFound = true\n            mergeFunction(suffixes[i], suffixes[j])\n          }\n        }\n      }\n\n      if (matchFound) {\n        suffixes.splice(matchIdx, 1)\n      }\n    }\n    while (matchFound)\n    return suffixes\n  }\n\n  /**\n   * This function provide a logic of to merge data of two suffix object that were previously split together.\n   * @param {Suffix} suffixA - A first of two suffixes to merge (to be returned).\n   * @param {Suffix} suffixB - A second ending to merge (to be discarded).\n   * @returns {Suffix} A modified value of ending A.\n   */\n  static merge (suffixA, suffixB) {\n    let commonGroups = Morpheme.getCommonGroups([suffixA, suffixB])\n    for (let type of commonGroups) {\n      // Combine values using a comma separator. Can do anything else if we need to.\n      suffixA.features[type] = suffixA.features[type] + ', ' + suffixB.features[type]\n    }\n    return suffixA\n  }\n}\n","export default class ParadigmRule {\n  constructor (matchOrder, features, lemma, morphFlags) {\n    this.matchOrder = matchOrder\n    this.features = features\n    this.lemma = lemma\n    this.morphFlags = morphFlags\n  }\n}\n","import uuidv4 from 'uuid/v4'\n\nimport ParadigmRule from './paradigm-rule.js'\n\nexport default class Paradigm {\n  constructor (languageID, partOfSpeech, table) {\n    this.id = uuidv4()\n    this.languageID = languageID\n    this.partOfSpeech = partOfSpeech\n    this.title = table.title\n    this.table = table.table\n    this.subTables = table.subTables\n    this.rules = []\n  }\n\n  static get ClassType () {\n    return this\n  }\n\n  addRule (matchOrder, features, lemma, morphFlags) {\n    this.rules.push(new ParadigmRule(matchOrder, features, lemma, morphFlags))\n  }\n\n  sortRules () {\n    this.rules.sort((a, b) => b.matchOrder - a.matchOrder)\n  }\n\n  /**\n   * Checks wither an inflection matches any single rules within a `rules` array. Rules within a Paradigm\n   * are sorted according to the match order, highest first. This is an order an array of rules will be iterated by.\n   * In order for rule to be a match, an inflection should have all features with values equal to those\n   * listed within a rule.\n   * If rule is a match, an object with a paradigm and a rule that matched is returned.\n   * @param {Inflection} inflection.\n   * @return {Object | undefined} An object with a paradigm and a matching rule if there is a match\n   * or false otherwise.\n   */\n  matches (inflection) {\n    for (const rule of this.rules) {\n      let match = true\n      for (const feature of rule.features) {\n        if (!inflection.hasOwnProperty(feature.type) || feature.value !== inflection[feature.type].value) {\n          match = false\n        }\n      }\n      return match ? {paradigm: this, rule: rule} : undefined\n    }\n  }\n}\n","import Morpheme from './morpheme.js'\n\nexport default class Suffix extends Morpheme {\n}\n","/*!\n\tPapa Parse\n\tv4.3.7\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function () {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\tvar _output = '';\n\t\tvar _fields = [];\n\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n\t\t\t\t&& _config.delimiter.length === 1\n\t\t\t\t&& Papa.BAD_DELIMITERS.indexOf(_config.delimiter) === -1)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar+_quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._paused = false;\n\t\tthis._finished = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk))\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._paused)\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted))\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes='+this._start+'-'+end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t}\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState != 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t}\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(errorText);\n\t\t}\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t}\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t}\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t}\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error.message);\n\t\t}\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar string;\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tstring = s;\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t}\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t}\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t}\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t}\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error.message);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._finished = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input);\n\t\t};\n\n\t\tthis.aborted = function ()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\''+Papa.DefaultDelimiter+'\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (_results.data[i].length === 1 && _results.data[i][0] === '')\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTyping();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t\t_fields.push(_results.data[i][j]);\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\treturn tryParseFloat(value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTyping()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && preview.data[j].length === 1 && preview.data[j][0].length === 0) {\n\t\t\t\t\t\temptyLinesCount++\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t}\n\t\t}\n\n\t\tfunction guessLineEndings(input)\n\t\t{\n\t\t\tinput = input.substr(0, 1024*1024);\t// max length 1 MB\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction tryParseFloat(val)\n\t\t{\n\t\t\tvar isNumber = FLOAT.test(val);\n\t\t\treturn isNumber ? parseFloat(val) : val;\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined){\n\t\t\tvar quoteChar = '\"';\n\t\t} else {\n\t\t\tvar quoteChar = config.quoteChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline != '\\n' && newline != '\\r' && newline != '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar row = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(quoteChar+quoteChar, 'g');\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tvar quoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tvar quoteSearch = input.indexOf(quoteChar, quoteSearch+1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\tif (input[quoteSearch+1] === quoteChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote followed by delimiter\n\t\t\t\t\t\tif (input[quoteSearch+1] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote followed by newline\n\t\t\t\t\t\tif (input.substr(quoteSearch+1, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [], errors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object')\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport LanguageDatasetFactory from '../../../lib/language-dataset-factory.js'\nimport Table from '../../lib/table.js'\nimport View from '../../lib/view.js'\nimport GroupFeatureType from '../../lib/group-feature-type.js'\n\nexport default class GreekView extends View {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.languageID = GreekView.languageID\n    this.model = LanguageModelFactory.getLanguageModel(GreekView.languageID)\n    this.dataset = LanguageDatasetFactory.getDataset(GreekView.languageID)\n\n    /*\n    Default grammatical features of a View. It child views need to have different feature values, redefine\n    those values in child objects.\n     */\n    this.features = {\n      numbers: new GroupFeatureType(this.model.typeFeature(Feature.types.number), 'Number'),\n      cases: new GroupFeatureType(this.model.typeFeature(Feature.types.grmCase), 'Case'),\n      declensions: new GroupFeatureType(this.model.typeFeature(Feature.types.declension), 'Declension'),\n      genders: new GroupFeatureType(this.model.typeFeature(Feature.types.gender), 'Gender'),\n      types: new GroupFeatureType(this.model.typeFeature(Feature.types.type), 'Type')\n    }\n  }\n\n  static get languageID () {\n    return Constants.LANG_GREEK\n  }\n\n  /**\n   * Creates and initializes an inflection table. Redefine this method in child objects in order to create\n   * an inflection table differently.\n   */\n  createTable () {\n    this.table = new Table([this.features.declensions, this.features.genders,\n      this.features.types, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [\n      this.model.typeFeature(Feature.types.declension),\n      this.model.typeFeature(Feature.types.gender),\n      this.model.typeFeature(Feature.types.type)\n    ]\n    features.rows = [\n      this.model.typeFeature(Feature.types.number),\n      this.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.columnRowTitles = [\n      this.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.fullWidthRowTitles = [\n      this.model.typeFeature(Feature.types.number)\n    ]\n  }\n}\n","import { Constants, LanguageModelFactory } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport GreekNounView from './greek-noun-view'\n\nexport default class GreekNounSimplifiedView extends GreekNounView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'nounDeclensionSimplified'\n    this.name = 'noun declension simplified'\n    this.title = 'Noun declension (simplified)'\n    this.partOfSpeech = Constants.POFS_NOUN\n    this.inflectionType = Suffix\n    let genderMasculine = Constants.GEND_MASCULINE\n    let genderFeminine = Constants.GEND_FEMININE\n    let genderNeuter = Constants.GEND_NEUTER\n\n    this.features.genders.getOrderedValues = function getOrderedValues (ancestorFeatures) {\n      if (ancestorFeatures) {\n        if (ancestorFeatures.value === Constants.ORD_2ND || ancestorFeatures.value === Constants.ORD_3RD) {\n          return [[genderMasculine, genderFeminine], genderNeuter]\n        }\n      }\n      return [genderMasculine, genderFeminine, genderNeuter]\n    }\n\n    this.createTable()\n\n    this.table.suffixCellFilter = GreekNounSimplifiedView.suffixCellFilter\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_NOUN\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(GreekNounSimplifiedView.languageID, inflectionData.languageID)) {\n      return inflectionData.pos.has(GreekNounSimplifiedView.partOfSpeech)\n    }\n  }\n\n  static suffixCellFilter (suffix) {\n    if (suffix.extendedLangData && suffix.extendedLangData[Constants.STR_LANG_CODE_GRC]) {\n      return suffix.extendedLangData[Constants.STR_LANG_CODE_GRC].primary\n    } else {\n      console.warn(`Greek morpheme \"${suffix.value}\" has no extended language data attached.`)\n      return false\n    }\n  }\n}\n","import { Constants, LanguageModelFactory } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport GreekView from '../greek-view.js'\n\nexport default class GreekNounView extends GreekView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'nounDeclension'\n    this.name = 'noun declension'\n    this.title = 'Noun declension'\n    this.partOfSpeech = Constants.POFS_NOUN\n    this.inflectionType = Suffix\n    let genderMasculine = Constants.GEND_MASCULINE\n    let genderFeminine = Constants.GEND_FEMININE\n    let genderNeuter = Constants.GEND_NEUTER\n\n    this.features.genders.getOrderedValues = function getOrderedValues (ancestorFeatures) {\n      if (ancestorFeatures) {\n        if (ancestorFeatures.value === Constants.ORD_2ND || ancestorFeatures.value === Constants.ORD_3RD) {\n          return [[genderMasculine, genderFeminine], genderNeuter]\n        }\n      }\n      return [genderMasculine, genderFeminine, genderNeuter]\n    }\n\n    this.createTable()\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_NOUN\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(GreekNounView.languageID, inflectionData.languageID)) {\n      return inflectionData.pos.has(GreekNounView.partOfSpeech)\n    }\n  }\n}\n","import { Constants, LanguageModelFactory } from 'alpheios-data-models'\nimport Paradigm from '../../../../lib/paradigm.js'\nimport View from '../../../lib/view.js'\nimport GreekView from '../greek-view.js'\n\n/**\n * This is a base class for all pronoun views. This class should not be used to create tables. Its purpose\n * is to define common features and properties for all pronoun classes.\n */\nexport default class GreekParadigmView extends GreekView {\n  /**\n   * @param {Paradigm} paradigm\n   * @param {InflectionData} inflectionData\n   * @param {string} locale\n   */\n  constructor (paradigm, inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = paradigm.id\n    this.name = paradigm.title.toLowerCase()\n    this.title = paradigm.title\n    this.hasComponentData = true\n    this.paradigm = paradigm\n    this.featureTypes = {}\n\n    this.wideTable = this.paradigm.table\n    this.wideSubTables = this.paradigm.subTables\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_VERB\n  }\n\n  static get inflectionType () {\n    return Paradigm\n  }\n\n  /**\n   * What classes of pronouns this view should be used with.\n   * Should be defined in descendants.\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return []\n  }\n\n  static getID (grammarClass) {\n    return `${grammarClass}${View.toTitleCase(GreekParadigmView.partOfSpeech)}Paradigm`\n  }\n\n  static getName (grammarClass) {\n    return `${grammarClass} ${GreekParadigmView.partOfSpeech} paradigm`\n  }\n\n  static getTitle (grammarClass) {\n    return View.toTitleCase(`${grammarClass} ${GreekParadigmView.partOfSpeech} Paradigm`).trim()\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(this.languageID, inflectionData.languageID) &&\n      inflectionData.pos.has(this.partOfSpeech)) {\n      let inflectionSet = inflectionData.pos.get(this.partOfSpeech)\n      if (inflectionSet.types.has(this.inflectionType)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static getMatchingInstances (inflectionData, messages) {\n    if (this.matchFilter(inflectionData)) {\n      let paradigms = inflectionData.pos.get(this.partOfSpeech).types.get(this.inflectionType).items\n      return paradigms.map(paradigm => new this(paradigm, inflectionData, messages))\n    }\n    return []\n  }\n\n  render () {\n    // Do nothing as there is no need to render anything\n    return this\n  }\n\n  get wideViewNodes () {\n    return this.nodes\n  }\n\n  hideEmptyColumns () {\n    return this\n  }\n\n  showEmptyColumns () {\n    return this\n  }\n\n  hideNoSuffixGroups () {\n    return this\n  }\n\n  showNoSuffixGroups () {\n    return this\n  }\n}\n","import { Constants, GreekLanguageModel, Feature } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for several classes of pronouns, see `classes` method for a full list.\n * Produces a table grouped into columns by gender.\n */\nexport default class GreekGenderPronounView extends GreekPronounView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.featureTypes.genders]\n    features.rows = [this.featureTypes.numbers, GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.featureTypes.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [\n      Constants.CLASS_GENERAL_RELATIVE,\n      Constants.CLASS_INDEFINITE,\n      Constants.CLASS_INTENSIVE,\n      Constants.CLASS_INTERROGATIVE,\n      Constants.CLASS_RECIPROCAL,\n      Constants.CLASS_RELATIVE\n    ]\n  }\n}\n","import { Constants, GreekLanguageModel, Feature } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for demonstrative pronouns. Produces a table grouped into columns by lemma and gender\n */\nexport default class GreekLemmaGenderPronounView extends GreekPronounView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale, GreekLemmaGenderPronounView.classes[0])\n\n    // Add lemmas\n    const lemmaValues = this.dataset.getPronounGroupingLemmas(GreekLemmaGenderPronounView.classes[0])\n    this.featureTypes.lemmas = new Feature(Feature.types.hdwd, lemmaValues, GreekLemmaGenderPronounView.languageID)\n    this.features.lemmas = new GroupFeatureType(this.featureTypes.lemmas, 'Lemma')\n\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.lemmas, this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.featureTypes.lemmas, this.featureTypes.genders]\n    features.rows = [this.featureTypes.numbers, GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.featureTypes.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_DEMONSTRATIVE]\n  }\n}\n","import { Constants, GreekLanguageModel, Feature } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for reflexive pronouns. Produces a table grouped into columns by person and gender\n */\nexport default class GreekPersonGenderPronounView extends GreekPronounView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale, GreekPersonGenderPronounView.classes[0])\n\n    // Add persons\n    this.featureTypes.persons = new Feature(\n      Feature.types.person,\n      [\n        Constants.ORD_1ST,\n        Constants.ORD_2ND,\n        Constants.ORD_3RD\n      ],\n      this.languageID)\n    this.features.persons = new GroupFeatureType(this.featureTypes.persons, 'Person')\n\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.persons, this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.featureTypes.persons, this.featureTypes.genders]\n    features.rows = [this.featureTypes.numbers, GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.featureTypes.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_REFLEXIVE]\n  }\n}\n","import { Constants, GreekLanguageModel, Feature } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for personal pronouns. Produces a table grouped into columns by person\n */\nexport default class GreekPersonPronounView extends GreekPronounView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale, GreekPersonPronounView.classes[0])\n\n    // Add persons\n    this.featureTypes.persons = new Feature(\n      Feature.types.person,\n      [\n        Constants.ORD_1ST,\n        Constants.ORD_2ND,\n        Constants.ORD_3RD\n      ],\n      this.languageID)\n    this.features.persons = new GroupFeatureType(this.featureTypes.persons, 'Person')\n\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.persons, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.featureTypes.persons]\n    features.rows = [this.featureTypes.numbers, GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [GreekLanguageModel.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.featureTypes.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_PERSONAL]\n  }\n}\n","import { Constants, GreekLanguageModel, Feature, LanguageModelFactory } from 'alpheios-data-models'\nimport Form from '../../../../lib/form.js'\nimport View from '../../../lib/view.js'\nimport GreekView from '../greek-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\n\n/**\n * This is a base class for all pronoun views. This class should not be used to create tables. Its purpose\n * is to define common features and properties for all pronoun classes.\n */\nexport default class GreekPronounView extends GreekView {\n  /**\n   * @param {InflectionData} inflectionData\n   * @param {string} locale\n   * @param {string} grammarClass - For what pronoun class a view will be created\n   */\n  constructor (inflectionData, locale, grammarClass = 'Greek') {\n    super(inflectionData, locale)\n    this.id = GreekPronounView.getID(grammarClass)\n    this.name = GreekPronounView.getName(grammarClass)\n    this.title = GreekPronounView.getTitle(grammarClass)\n    this.featureTypes = {}\n\n    const GEND_MASCULINE_FEMININE = 'masculine feminine'\n    const GEND_MASCULINE_FEMININE_NEUTER = 'masculine feminine neuter'\n    this.featureTypes.numbers = new Feature(\n      Feature.types.number,\n      [Constants.NUM_SINGULAR, Constants.NUM_DUAL, Constants.NUM_PLURAL],\n      this.languageID\n    )\n\n    this.featureTypes.genders = new Feature(\n      Feature.types.gender,\n      [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, GEND_MASCULINE_FEMININE, Constants.GEND_NEUTER, GEND_MASCULINE_FEMININE_NEUTER],\n      this.languageID\n    )\n\n    // This is just a placeholder. Lemma values will be generated dynamically\n    this.featureTypes.lemmas = new Feature(Feature.types.hdwd, [], this.languageID)\n\n    this.features = {\n      numbers: new GroupFeatureType(this.featureTypes.numbers, 'Number'),\n      cases: new GroupFeatureType(GreekLanguageModel.typeFeature(Feature.types.grmCase), 'Case'),\n      genders: new GroupFeatureType(this.featureTypes.genders, 'Gender'),\n      persons: new GroupFeatureType(GreekLanguageModel.typeFeature(Feature.types.person), 'Person')\n    }\n\n    this.features.genders.getTitle = function getTitle (featureValue) {\n      if (featureValue === Constants.GEND_MASCULINE) { return 'm.' }\n      if (featureValue === Constants.GEND_FEMININE) { return 'f.' }\n      if (featureValue === Constants.GEND_NEUTER) { return 'n.' }\n      if (featureValue === GEND_MASCULINE_FEMININE) { return 'm./f.' }\n      if (featureValue === GEND_MASCULINE_FEMININE_NEUTER) { return 'm./f./n.' }\n      return featureValue\n    }\n\n    this.features.genders.filter = function filter (featureValues, suffix) {\n      // If not an array, convert it to array for uniformity\n      if (!Array.isArray(featureValues)) {\n        featureValues = [featureValues]\n      }\n      for (const value of featureValues) {\n        if (suffix.features[this.type] === value) {\n          return true\n        }\n      }\n\n      return false\n    }\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_PRONOUN\n  }\n\n  static get inflectionType () {\n    return Form\n  }\n\n  /**\n   * What classes of pronouns this view should be used with.\n   * Should be defined in descendants.\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return []\n  }\n\n  static getID (grammarClass) {\n    return `${grammarClass}${View.toTitleCase(GreekPronounView.partOfSpeech)}Declension`\n  }\n\n  static getName (grammarClass) {\n    return `${grammarClass} ${GreekPronounView.partOfSpeech} declension`\n  }\n\n  static getTitle (grammarClass) {\n    return View.toTitleCase(`${grammarClass} ${GreekPronounView.partOfSpeech} Declension`).trim()\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(this.languageID, inflectionData.languageID) &&\n      inflectionData.pos.has(this.partOfSpeech)) {\n      let inflectionSet = inflectionData.pos.get(this.partOfSpeech)\n      if (inflectionSet.types.has(this.inflectionType)) {\n        let inflections = inflectionSet.types.get(this.inflectionType)\n        let found = inflections.items.find(form => {\n          let match = false\n          for (const value of form.features[Feature.types.grmClass].values) {\n            match = match || this.classes.includes(value)\n          }\n          return match\n        })\n        if (found) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  static getMorphemes (inflectionData) {\n    return inflectionData.pos.get(this.partOfSpeech)\n      .types.get(this.inflectionType).items\n      .filter(item => item.features.hasOwnProperty(Feature.types.grmClass) &&\n            item.features[Feature.types.grmClass].hasSomeValues(this.classes)\n      )\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LanguageDataset from '../../../../lib/language-dataset.js'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\n\nexport default class LatinAdjectiveView extends LatinView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'adjectiveDeclension'\n    this.name = 'adjective declension'\n    this.title = 'Adjective declension'\n    this.partOfSpeech = LatinAdjectiveView.partOfSpeech\n    this.inflectionType = LanguageDataset.SUFFIX\n\n    // Feature that are different from base class values\n    this.features.declensions = new GroupFeatureType(this.language_features[Feature.types.declension], 'Declension',\n      [ Constants.ORD_1ST, Constants.ORD_2ND, Constants.ORD_3RD ])\n    this.features.declensions.getTitle = LatinView.getDeclensionTitle\n\n    this.createTable()\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_ADJECTIVE\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinAdjectiveView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinAdjectiveView.partOfSpeech)\n    }\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport LanguageDatasetFactory from '../../../lib/language-dataset-factory.js'\nimport View from '../../lib/view.js'\nimport GroupFeatureType from '../../lib/group-feature-type.js'\nimport Table from '../../lib/table.js'\n\nexport default class LatinView extends View {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.model = LanguageModelFactory.getLanguageModel(LatinView.languageID)\n    this.dataset = LanguageDatasetFactory.getDataset(LatinView.languageID)\n    this.language_features = this.model.features\n    // limit regular verb moods\n    this.language_features[Feature.types.mood] =\n      new Feature(Feature.types.mood,\n        [ Constants.MOOD_INDICATIVE,\n          Constants.MOOD_SUBJUNCTIVE\n        ], LatinView.languageID)\n\n    /*\n        Default grammatical features of a view. It child views need to have different feature values, redefine\n        those values in child objects.\n         */\n    this.features = {\n      numbers: new GroupFeatureType(this.model.typeFeature(Feature.types.number), 'Number'),\n      cases: new GroupFeatureType(this.model.typeFeature(Feature.types.grmCase), 'Case'),\n      declensions: new GroupFeatureType(this.model.typeFeature(Feature.types.declension), 'Declension'),\n      genders: new GroupFeatureType(this.model.typeFeature(Feature.types.gender), 'Gender'),\n      types: new GroupFeatureType(this.model.typeFeature(Feature.types.type), 'Type')\n    }\n    this.features.declensions.getTitle = LatinView.getDeclensionTitle\n  }\n\n  /**\n   * Defines a language ID of a view. Should be redefined in child classes.\n   * @return {symbol}\n   */\n  static get languageID () {\n    return Constants.LANG_LATIN\n  }\n\n  /*\n    Creates and initializes an inflection table. Redefine this method in child objects in order to create\n    an inflection table differently\n     */\n  createTable () {\n    this.table = new Table([this.features.declensions, this.features.genders,\n      this.features.types, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.model.typeFeature(Feature.types.declension), this.model.typeFeature(Feature.types.gender), this.model.typeFeature(Feature.types.type)]\n    features.rows = [this.model.typeFeature(Feature.types.number), this.model.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [this.model.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.model.typeFeature(Feature.types.number)]\n  }\n\n  /**\n   * Define declension group titles\n   * @param {String} featureValue - A value of a declension\n   * @return {string} - A title of a declension group, in HTML format\n   */\n  static getDeclensionTitle (featureValue) {\n    if (featureValue === Constants.ORD_1ST) { return `First` }\n    if (featureValue === Constants.ORD_2ND) { return `Second` }\n    if (featureValue === Constants.ORD_3RD) { return `Third` }\n    if (featureValue === Constants.ORD_4TH) { return `Fourth` }\n    if (featureValue === Constants.ORD_5TH) { return `Fifth` }\n\n    if (this.hasOwnProperty(featureValue)) {\n      if (Array.isArray(this[featureValue])) {\n        return this[featureValue].map((feature) => feature.value).join('/')\n      } else {\n        return this[featureValue].value\n      }\n    } else {\n      return 'not available'\n    }\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\n\nexport default class LatinNounView extends LatinView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'nounDeclension'\n    this.name = 'noun declension'\n    this.title = 'Noun declension'\n\n    // Feature that are different from base class values\n    this.features.genders = new GroupFeatureType(this.language_features[Feature.types.gender], 'Gender',\n      [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, Constants.GEND_NEUTER])\n    this.createTable()\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_NOUN\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinNounView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinNounView.partOfSpeech)\n    }\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinSupineView extends LatinView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.partOfSpeech = LatinSupineView.partOfSpeech\n    this.id = 'verbSupine'\n    this.name = 'supine'\n    this.title = 'Supine'\n    this.features.moods = new GroupFeatureType(\n      new Feature(Feature.types.mood, [Constants.MOOD_SUPINE], this.model.languageID),\n      'Mood')\n    this.language_features[Feature.types.grmCase] = new Feature(Feature.types.grmCase,\n      [Constants.CASE_ACCUSATIVE, Constants.CASE_ABLATIVE], this.model.languageID)\n    this.features = {\n      cases: new GroupFeatureType(this.language_features[Feature.types.grmCase], 'Case'),\n      voices: new GroupFeatureType(this.language_features[Feature.types.voice], 'Voice'),\n      conjugations: new GroupFeatureType(this.language_features[Feature.types.conjugation], 'Conjugation Stem')\n    }\n    this.createTable()\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_SUPINE\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinSupineView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinSupineView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.cases])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.conjugation]]\n    features.rows = [this.language_features[Feature.types.grmCase]]\n    features.columnRowTitles = [this.language_features[Feature.types.grmCase]]\n    features.fullWidthRowTitles = []\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinConjugationMoodVoiceView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbConjugationMoodVoice'\n    this.name = 'conjugation-mood-voice'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinConjugationMoodVoiceView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinConjugationMoodVoiceView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.conjugations, this.features.moods, this.features.voices,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.conjugation],\n      this.language_features[Feature.types.mood],\n      this.language_features[Feature.types.voice]]\n    features.rows = [\n      this.language_features[Feature.types.tense],\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.columnRowTitles = [\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinConjugationVoiceMoodView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbConjugationVoiceMood'\n    this.name = 'conjugation-voice-mood'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinConjugationVoiceMoodView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinConjugationVoiceMoodView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.conjugations, this.features.voices, this.features.moods,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.conjugation],\n      this.language_features[Feature.types.voice], this.language_features[Feature.types.mood]]\n    features.rows = [\n      this.language_features[Feature.types.tense],\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.columnRowTitles = [\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport LatinVerbMoodView from './latin-verb-mood-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinImperativeView extends LatinVerbMoodView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbImperative'\n    this.name = 'imperative'\n    this.title = 'Imperative'\n    this.features.moods = new GroupFeatureType(\n      new Feature(Feature.types.mood, [Constants.MOOD_IMPERATIVE], this.model.languageID),\n      'Mood')\n    this.language_features[Feature.types.person] = new Feature(Feature.types.person, [Constants.ORD_2ND, Constants.ORD_3RD], this.model.languageID)\n    this.features.persons = new GroupFeatureType(this.language_features[Feature.types.person], 'Person')\n    this.language_features[Feature.types.tense] = new Feature(Feature.types.tense,\n      [Constants.TENSE_PRESENT, Constants.TENSE_FUTURE], this.model.languageID)\n    this.features.tenses = new GroupFeatureType(this.language_features[Feature.types.tense], 'Tense')\n    this.createTable()\n    this.table.suffixCellFilter = LatinImperativeView.suffixCellFilter\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.conjugation]]\n    features.rows = [this.language_features[Feature.types.tense], this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.columnRowTitles = [this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinImperativeView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinImperativeView.partOfSpeech) &&\n        LatinImperativeView.enabledForLexemes(inflectionData.homonym.lexemes)\n    }\n  }\n\n  static enabledForLexemes (lexemes) {\n    // default is true\n    for (let lexeme of lexemes) {\n      for (let inflection of lexeme.inflections) {\n        if (inflection[Feature.types.mood] &&\n          inflection[Feature.types.mood].values.includes(Constants.MOOD_IMPERATIVE)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  static suffixCellFilter (suffix) {\n    return suffix.features[Feature.types.mood].includes(Constants.MOOD_IMPERATIVE)\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport LatinVerbMoodView from './latin-verb-mood-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinInfinitiveView extends LatinVerbMoodView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbInfinitive'\n    this.name = 'infinitive'\n    this.title = 'Infinitive'\n    this.features.moods = new GroupFeatureType(\n      new Feature(Feature.types.mood, [Constants.MOOD_INFINITIVE], this.model.languageID),\n      'Mood')\n    this.language_features[Feature.types.tense] = new Feature(Feature.types.tense,\n      [Constants.TENSE_PRESENT, Constants.TENSE_PERFECT, Constants.TENSE_FUTURE], this.model.languageID)\n    this.features.tenses = new GroupFeatureType(this.language_features[Feature.types.tense], 'Tense')\n    this.createTable()\n    this.table.suffixCellFilter = LatinInfinitiveView.suffixCellFilter\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.tenses])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.conjugation]]\n    features.rows = [this.language_features[Feature.types.tense]]\n    features.columnRowTitles = [this.language_features[Feature.types.tense]]\n    features.fullWidthRowTitles = []\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinInfinitiveView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinInfinitiveView.partOfSpeech) &&\n        LatinInfinitiveView.enabledForLexemes(inflectionData.homonym.lexemes)\n    }\n  }\n\n  static enabledForLexemes (lexemes) {\n    // default is true\n    for (let lexeme of lexemes) {\n      for (let inflection of lexeme.inflections) {\n        if (inflection[Feature.types.mood] &&\n          inflection[Feature.types.mood].values.includes(Constants.MOOD_INFINITIVE)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  static suffixCellFilter (suffix) {\n    return suffix.features[Feature.types.mood].includes(Constants.MOOD_INFINITIVE)\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinMoodConjugationVoiceView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbMoodConjugationVoice'\n    this.name = 'mood-conjugation-voice'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinMoodConjugationVoiceView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinMoodConjugationVoiceView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.moods, this.features.conjugations, this.features.voices,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [this.language_features[Feature.types.mood], this.language_features[Feature.types.conjugation], this.language_features[Feature.types.voice]]\n    features.rows = [this.language_features[Feature.types.tense], this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.columnRowTitles = [this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinMoodVoiceConjugationView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbMoodVoiceConjugation'\n    this.name = 'mood-voice-conjugation'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinMoodVoiceConjugationView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinMoodVoiceConjugationView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.moods, this.features.voices, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [this.language_features[Feature.types.mood], this.language_features[Feature.types.voice], this.language_features[Feature.types.conjugation]]\n    features.rows = [this.language_features[Feature.types.tense], this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.columnRowTitles = [this.language_features[Feature.types.number], this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\n\nexport default class LatinVerbMoodView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.features = {\n      tenses: new GroupFeatureType(this.language_features[Feature.types.tense], 'Tenses'),\n      numbers: new GroupFeatureType(this.language_features[Feature.types.number], 'Number'),\n      persons: new GroupFeatureType(this.language_features[Feature.types.person], 'Person'),\n      voices: new GroupFeatureType(this.language_features[Feature.types.voice], 'Voice'),\n      conjugations: new GroupFeatureType(this.language_features[Feature.types.conjugation], 'Conjugation Stem')\n    }\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinVerbMoodView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinVerbMoodView.partOfSpeech)\n    }\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinVerbParticipleView extends LatinView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.partOfSpeech = LatinVerbParticipleView.partOfSpeech\n    this.id = 'verbParticiple'\n    this.name = 'participle'\n    this.title = 'Participle'\n    this.language_features[Feature.types.tense] = new Feature(Feature.types.tense,\n      [Constants.TENSE_PRESENT, Constants.TENSE_PERFECT, Constants.TENSE_FUTURE], this.model.languageID)\n    this.features = {\n      tenses: new GroupFeatureType(this.language_features[Feature.types.tense], 'Tenses'),\n      voices: new GroupFeatureType(this.language_features[Feature.types.voice], 'Voice'),\n      conjugations: new GroupFeatureType(this.language_features[Feature.types.conjugation], 'Conjugation Stem')\n    }\n    this.createTable()\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_VERB_PARTICIPLE\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinVerbParticipleView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinVerbParticipleView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.tenses])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.conjugation]]\n    features.rows = [this.language_features[Feature.types.tense]]\n    features.columnRowTitles = [this.language_features[Feature.types.tense]]\n    features.fullWidthRowTitles = []\n  }\n}\n","import { Constants, LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\n\nexport default class LatinVerbView extends LatinView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n\n    this.features = {\n      tenses: new GroupFeatureType(this.language_features[Feature.types.tense], 'Tenses'),\n      numbers: new GroupFeatureType(this.language_features[Feature.types.number], 'Number'),\n      persons: new GroupFeatureType(this.language_features[Feature.types.person], 'Person'),\n      voices: new GroupFeatureType(this.language_features[Feature.types.voice], 'Voice'),\n      conjugations: new GroupFeatureType(this.language_features[Feature.types.conjugation], 'Conjugation Stem'),\n      moods: new GroupFeatureType(this.language_features[Feature.types.mood], 'Mood')\n    }\n\n    /**\n     * Define conjugation group titles\n     * @param {String} featureValue - A value of a conjugation feature\n     * @return {string} - A title of a conjugation group, in HTML format\n     */\n    this.features.conjugations.getTitle = function getTitle (featureValue) {\n      if (featureValue === Constants.ORD_1ST) { return `First<br><span class=\"infl-cell__conj-stem\">ā</span>` }\n      if (featureValue === Constants.ORD_2ND) { return `Second<br><span class=\"infl-cell__conj-stem\">ē</span>` }\n      if (featureValue === Constants.ORD_3RD) { return `Third<br><span class=\"infl-cell__conj-stem\">e</span>` }\n      if (featureValue === Constants.ORD_4TH) { return `Fourth<br><span class=\"infl-cell__conj-stem\">i</span>` }\n\n      if (this.hasOwnProperty(featureValue)) {\n        if (Array.isArray(this[featureValue])) {\n          return this[featureValue].map((feature) => feature.value).join('/')\n        } else {\n          return this[featureValue].value\n        }\n      } else {\n        return 'not available'\n      }\n    }\n  }\n\n  static get partOfSpeech () {\n    return Constants.POFS_VERB\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinVerbView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinVerbView.partOfSpeech)\n    }\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinVoiceConjugationMoodView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbVoiceConjugationMood'\n    this.name = 'voice-conjugation-mood'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinVoiceConjugationMoodView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinVoiceConjugationMoodView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations, this.features.moods,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.conjugation],\n      this.language_features[Feature.types.mood]]\n    features.rows = [\n      this.language_features[Feature.types.tense],\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.columnRowTitles = [\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import { LanguageModelFactory, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinVoiceMoodConjugationView extends LatinVerbView {\n  constructor (inflectionData, locale) {\n    super(inflectionData, locale)\n    this.id = 'verbVoiceMoodConjugation'\n    this.name = 'voice-mood-conjugation'\n    this.title = 'Verb Conjugation'\n\n    this.createTable()\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(LatinVoiceMoodConjugationView.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(LatinVoiceMoodConjugationView.partOfSpeech)\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.moods, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.language_features[Feature.types.voice],\n      this.language_features[Feature.types.mood],\n      this.language_features[Feature.types.conjugation]]\n    features.rows = [\n      this.language_features[Feature.types.tense],\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.columnRowTitles = [\n      this.language_features[Feature.types.number],\n      this.language_features[Feature.types.person]]\n    features.fullWidthRowTitles = [this.language_features[Feature.types.tense]]\n  }\n}\n","import * as Styles from '../styles/styles'\n\nexport default class Cell {\n  /**\n   * Creates a cell for an inflection table.\n   * @param {Suffix[]} suffixes - A list of suffixes that belongs to this cell.\n   * @param {Feature[]} features - A list of features this cell corresponds to.\n   */\n  constructor (suffixes, features) {\n    this.suffixes = suffixes\n    if (!this.suffixes) {\n      this.suffixes = []\n    }\n    this.features = features\n    this.empty = (this.suffixes.length === 0)\n    this.suffixMatches = !!this.suffixes.find(element => {\n      if (element.match && element.match.suffixMatch) {\n        return element.match.suffixMatch\n      }\n    })\n\n    this.column = undefined // A column this cell belongs to\n    this.row = undefined // A row this cell belongs to\n\n    this._index = undefined\n\n    this.render()\n  }\n\n  /**\n   * Renders an element's HTML representation.\n   */\n  render () {\n    let element = document.createElement('div')\n    element.classList.add(Styles.classNames.cell)\n    for (let [index, suffix] of this.suffixes.entries()) {\n      // Render each suffix\n      let suffixElement = document.createElement('span')\n      suffixElement.classList.add(Styles.classNames.suffix)\n      if (suffix.match && suffix.match.suffixMatch) {\n        suffixElement.classList.add(Styles.classNames.suffixMatch)\n      }\n      if (suffix.match && suffix.match.fullMatch) {\n        suffixElement.classList.add(Styles.classNames.suffixFullFeatureMatch)\n      }\n      suffixElement.innerHTML = suffix.value ? suffix.value : '-'\n      element.appendChild(suffixElement)\n\n      if (suffix.footnote && suffix.footnote.length) {\n        let footnoteElement = document.createElement('a')\n        footnoteElement.innerHTML = `<sup>${suffix.footnote}</sup>`\n        footnoteElement.dataset.footnote = suffix.footnote\n        element.appendChild(footnoteElement)\n      }\n      if (index < this.suffixes.length - 1) {\n        element.appendChild(document.createTextNode(', ')) // 00A0 is a non-breaking space\n      }\n    }\n    this.wNode = element\n    this.nNode = element.cloneNode(true)\n  }\n\n  /**\n   * Returns an HTML element for a wide view.\n   * @returns {HTMLElement}\n   */\n  get wvNode () {\n    return this.wNode\n  }\n\n  /**\n   * Returns an HTML element for a narrow view.\n   * @returns {HTMLElement}\n   */\n  get nvNode () {\n    return this.nNode\n  }\n\n  /**\n   * Sets a unique index of the cell that can be used for cell identification via 'data-index' attribute.\n   * @param {number} index - A unique cell index.\n   */\n  set index (index) {\n    this._index = index\n    this.wNode.dataset.index = this._index\n    this.nNode.dataset.index = this._index\n  }\n\n  /**\n   * A proxy for adding an event listener for both wide and narrow view HTML elements.\n   * @param {string} type - Listener type.\n   * @param {EventListener} listener - Event listener function.\n   */\n  addEventListener (type, listener) {\n    this.wNode.addEventListener(type, listener)\n    this.nNode.addEventListener(type, listener)\n  }\n\n  /**\n   * Hides an element.\n   */\n  hide () {\n    if (!this.wNode.classList.contains(Styles.classNames.hidden)) {\n      this.wNode.classList.add(Styles.classNames.hidden)\n      this.nNode.classList.add(Styles.classNames.hidden)\n    }\n  }\n\n  /**\n   * Shows a previously hidden element.\n   */\n  show () {\n    if (this.wNode.classList.contains(Styles.classNames.hidden)) {\n      this.wNode.classList.remove(Styles.classNames.hidden)\n      this.nNode.classList.remove(Styles.classNames.hidden)\n    }\n  }\n\n  /**\n   * Highlights a cell with color.\n   */\n  highlight () {\n    if (!this.wNode.classList.contains(Styles.classNames.highlight)) {\n      this.wNode.classList.add(Styles.classNames.highlight)\n      this.nNode.classList.add(Styles.classNames.highlight)\n    }\n  }\n\n  /**\n   * Removes highlighting from a previously highlighted cell.\n   */\n  clearHighlighting () {\n    if (this.wNode.classList.contains(Styles.classNames.highlight)) {\n      this.wNode.classList.remove(Styles.classNames.highlight)\n      this.nNode.classList.remove(Styles.classNames.highlight)\n    }\n  }\n\n  /**\n   * Highlights a row and a column this cell belongs to.\n   */\n  highlightRowAndColumn () {\n    if (!this.column) {\n      throw new Error('Column is undefined.')\n    }\n    if (!this.row) {\n      throw new Error('Row is undefined.')\n    }\n    this.column.highlight()\n    this.row.highlight()\n  }\n\n  /**\n   * Removes highlighting form a previously highlighted row and column.\n   */\n  clearRowAndColumnHighlighting () {\n    if (!this.column) {\n      throw new Error('Column is undefined.')\n    }\n    if (!this.row) {\n      throw new Error('Row is undefined.')\n    }\n    this.column.clearHighlighting()\n    this.row.clearHighlighting()\n  }\n}\n","/**\n * Represent a column of cells in an inflection table.\n */\nexport default class Column {\n  /**\n   * Initializes column with a provided set of cells.\n   * @param {Cell} cells - Cells that are within this column.\n   */\n  constructor (cells) {\n    this.cells = cells\n    if (!cells) {\n      this.cells = []\n    }\n    this._headerCell = undefined\n    this.hidden = false\n    this.empty = this.cells.every(cell => cell.empty)\n    this.suffixMatches = !!this.cells.find(cell => cell.suffixMatches)\n\n    for (let cell of this.cells) {\n      cell.column = this\n    }\n  }\n\n  /**\n   * Assigns a header cell to the column.\n   * @param {HeaderCell} headerCell - A header cell of this column.\n   */\n  set headerCell (headerCell) {\n    this._headerCell = headerCell\n    headerCell.addColumn(this)\n  }\n\n  /**\n   * Returns a number of cells within this column.\n   * @returns {Number} A number of cells this column contains.\n   */\n  get length () {\n    return this.cells.length\n  }\n\n  /**\n   * Hides the column. Notifies a header about a state change.\n   */\n  hide () {\n    if (!this.hidden) {\n      this.hidden = true\n\n      for (let cell of this.cells) {\n        cell.hide()\n      }\n      if (this._headerCell) {\n        this._headerCell.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Shows the column. Notifies a header about a state change.\n   */\n  show () {\n    if (this.hidden) {\n      this.hidden = false\n\n      for (let cell of this.cells) {\n        cell.show()\n      }\n      if (this._headerCell) {\n        this._headerCell.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Highlights a column and its header.\n   */\n  highlight () {\n    for (let cell of this.cells) {\n      cell.highlight()\n    }\n    if (this._headerCell) {\n      this._headerCell.highlight()\n    }\n  }\n\n  /**\n   * Removes highlighting from a column and its header.\n   */\n  clearHighlighting () {\n    for (let cell of this.cells) {\n      cell.clearHighlighting()\n    }\n    if (this._headerCell) {\n      this._headerCell.clearHighlighting()\n    }\n  }\n}\n","import { FeatureList } from 'alpheios-data-models'\n\n/**\n * Holds a list of all grouping features of a table.\n */\nexport default class GroupFeatureList extends FeatureList {\n  /**\n   * Initializes object with an array of grouping feature objects.\n   * @param {GroupFeatureType[]} features - An array of features that form a table.\n   * An order of features defines in what order a table tree would be built.\n   */\n  constructor (features) {\n    super(features)\n    this._columnFeatures = [] // Features that group cells into columns\n    this._rowFeatures = [] // Features that group cells into rows\n\n    this.forEach((feature) => { feature.groupFeatureList = this })\n  }\n\n  /**\n   * Return a list of all grouping features that form columns.\n   * @returns {GroupFeatureType[]} - An array of grouping features.\n   */\n  get columnFeatures () {\n    return this._columnFeatures\n  }\n\n  /**\n   * Defines what features form columns. An order of items specifies an order in which columns be shown.\n   * @param {Feature[] | GroupingFeature[]} features - What features form columns and what order\n   * these columns would follow.\n   */\n  set columns (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.formsColumn = true\n      this._columnFeatures.push(matchingFeature)\n    }\n  }\n\n  /**\n   * Returns a first column feature item.\n   * @returns {GroupFeatureType} A fist column feature.\n   */\n  get firstColumnFeature () {\n    if (this._columnFeatures && this._columnFeatures.length) {\n      return this._columnFeatures[0]\n    }\n  }\n\n  /**\n   * Returns a last column feature item.\n   * @returns {GroupFeatureType} A last column feature.\n   */\n  get lastColumnFeature () {\n    if (this._columnFeatures && this._columnFeatures.length) {\n      return this._columnFeatures[this._columnFeatures.length - 1]\n    }\n  }\n\n  /**\n   * Return a list of all grouping features that form rows.\n   * @returns {GroupFeatureType[]} - An array of grouping rows.\n   */\n  get rowFeatures () {\n    return this._rowFeatures\n  }\n\n  /**\n   * Defines what features form rows. An order of items specifies an order in which columns be shown.\n   * @param {Feature[] | GroupingFeature[]} features - What features form rows and what order\n   * these rows would follow.\n   */\n  set rows (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.formsRow = true\n      this._rowFeatures.push(matchingFeature)\n    }\n    return this\n  }\n\n  /**\n   * Returns a first row feature item.\n   * @returns {GroupFeatureType} A fist row feature.\n   */\n  get firstRowFeature () {\n    if (this._rowFeatures && this._rowFeatures.length) {\n      return this._rowFeatures[0]\n    }\n  }\n\n  /**\n   * Returns a last row feature item.\n   * @returns {GroupFeatureType} A last row feature.\n   */\n  get lastRowFeature () {\n    if (this._rowFeatures && this._rowFeatures.length) {\n      return this._rowFeatures[this._rowFeatures.length - 1]\n    }\n  }\n\n  /**\n   * Defines what are the titles of suffix cell rows within a table body.\n   * The number of such items defines how many left-side title columns this table would have (default is one).\n   * Full width titles (see below) does not need to be specified here.\n   * @param {Feature | GroupingFeature} features - What suffix row titles this table would have.\n   */\n  set columnRowTitles (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.hasColumnRowTitle = true\n    }\n  }\n\n  /**\n   * In inflection tables, titles of features are usually located in left-side columns. However, some titles that\n   * group several rows together may span the whole table width. This setters defines\n   * what those features are.\n   * @param {Feature | GroupingFeature} features - What feature titles would take a whole row\n   */\n  set fullWidthRowTitles (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.hasFullWidthRowTitle = true\n    }\n  }\n\n  /**\n   * Returns a quantity of grouping features.\n   * @returns {number} - A number of grouping features.\n   */\n  get length () {\n    return this._features.length\n  }\n\n  /**\n   * Calculate a number of title columns.\n   * @returns {number} A number of title columns.\n   */\n  get titleColumnsQuantity () {\n    let quantity = 0\n    for (let feature of this._features) {\n      if (feature.hasColumnRowTitle) {\n        quantity++\n      }\n    }\n    return quantity\n  }\n}\n","import { Feature, FeatureType } from 'alpheios-data-models'\nimport RowTitleCell from './row-title-cell'\n\n// TODO: Rebase on Feature instead of FeatureType\n/**\n * This is a wrapper around a FeatureType object. When a Table object creates a\n * hierarchical tree of suffixes, it uses grammatical features as tree nodes.\n * GroupFeatureType extends a Feature object so that it'll be able to store additional information\n * that is required for that.\n */\nexport default class GroupFeatureType extends FeatureType {\n  /**\n   * GroupFeatureType extends FeatureType to serve as a grouping feature (i.e. a feature that forms\n   * either a column or a row in an inflection table). For that, it adds some additional functionality,\n   * such as custom feature orders that will allow to combine suffixes from several grammatical features\n   * (i.e. masculine and feminine) into a one column of a table.\n   * @param {Feature} feature - A feature that defines a type of this item.\n   * @param {string} titleMessageID - A message ID of a title, used to get a formatted title from a\n   * language-specific message bundle.\n   * @param {string[]} order - A custom sort order for this feature that redefines\n   * a default one stored in FeatureType object (optional).\n   * Use this parameter to redefine a default sort order for a type.\n   */\n  constructor (feature, titleMessageID, order = feature.values) {\n    super(feature.type, order, feature.languageID)\n\n    this.groupTitle = titleMessageID\n    this._groupType = undefined\n\n    this.groupFeatureList = undefined\n\n    // Properties below are required to store information during tree creation\n    this.subgroups = [] // Each value of the feature\n    this.cells = [] // All cells within this group and below\n    this.parent = undefined\n    this.header = undefined\n\n    this._formsColumn = false\n    this._formsRow = false\n    this.hasColumnRowTitle = false // Whether this feature has a title of a suffix row in the left-side column.\n    this.hasFullWidthRowTitle = false // Whether this feature has a title of suffix rows that spans the whole table width.\n  }\n\n  /**\n   * Converts a list of Feature objects into a list of strings that represent their values. Keeps tha original\n   * array structure intact (work with up two two array levels).\n   * @param {Feature[] | Feature[][]} features - An array of feature objects.\n   * @return {string[] | strings[][]} A matching array of strings with feature values.\n   */\n  static featuresToValues (features) {\n    return features.map((feature) => {\n      if (Array.isArray(feature)) {\n        return feature.map((feature) => feature.value)\n      } else {\n        return feature.value\n      }\n    })\n  }\n\n  /**\n   * This is a wrapper around orderedFeatures() that allows to set a custom feature order for particular columns.\n   * @returns {Feature[] | Feature[][]} A sorted array of feature values.\n   */\n  getOrderedFeatures (ancestorFeatures) {\n    return this.getOrderedValues(ancestorFeatures).map((value) => new Feature(this.type, value, this.languageID))\n  }\n\n  /**\n   * This is a wrapper around orderedValues() that allows to set a custom feature order for particular columns.\n   * By default it returns features in the same order that is defined in a base FeatureType class.\n   * Redefine it to provide a custom grouping and sort order.\n   * @returns {string[] | string[][]} A sorted array of feature values.\n   */\n  getOrderedValues (ancestorFeatures) {\n    return this._orderIndex\n  }\n\n  /**\n   * Returns a column or row title for a value of a feature provided.\n   * Redefine it if you want to display custom titles instead of feature values.\n   * @param {Feature} featureValue - A feature object containing a feature value\n   * @return {string} - A row or column title for a table\n   */\n  getTitle (featureValue) {\n    if (this.hasOwnProperty(featureValue)) {\n      if (Array.isArray(this[featureValue])) {\n        return this[featureValue].map((feature) => feature.value).join('/')\n      } else {\n        return this[featureValue].value\n      }\n    } else {\n      return 'not available'\n    }\n  }\n\n  /**\n   * Whether this feature forms a columns group.\n   * @returns {boolean} True if this feature forms a column.\n   */\n  get formsColumn () {\n    return this._formsColumn\n  }\n\n  /**\n   * Sets that this feature would form a column.\n   * @param {boolean} value\n   */\n  set formsColumn (value) {\n    this._formsColumn = value\n    this._formsRow = !value // Can't do both\n  }\n\n  /**\n   * Whether this feature forms a row group.\n   * @returns {boolean} True if this feature forms a row.\n   */\n  get formsRow () {\n    return this._formsRow\n  }\n\n  /**\n   * Sets that this feature would form a row.\n   * @param {boolean} value\n   */\n  set formsRow (value) {\n    this._formsRow = value\n    this._formsColumn = !value // Can't do both\n  }\n\n  /**\n   * How many groups this feature would form.\n   * @returns {Number} A number of groupes formed by this feature.\n   */\n  get size () {\n    return this.orderedValues.length\n  }\n\n  /**\n   * Checks if two grouping features are of the same type.\n   * @param {GroupFeatureType} groupingFeature - A grouping feature to compare with the current one.\n   * @returns {boolean} True if grouping features are of the same type.\n   */\n  isSameType (groupingFeature) {\n    return this.type === groupingFeature.type\n  }\n\n  /**\n   * Creates a title cell for a feature from the current group.\n   * @param {string} title - A text that will be shown within a cell.\n   * @param {number} nvGroupQty - A number of narrow view groups.\n   * @returns {RowTitleCell} A created RowTitleCell object.\n   */\n  createTitleCell (title, nvGroupQty) {\n    return new RowTitleCell(title, this, nvGroupQty)\n  }\n}\n","import * as Styles from '../styles/styles'\n\n/**\n * A cell in a header row, a column title cell.\n */\nexport default class HeaderCell {\n  /**\n   * Initializes a header cell.\n   * @param {string} featureValue - A title text that will be shown in the header cell.\n   * @param {GroupFeatureType} groupingFeature - A feature that defines one or several columns this header forms.\n   * @param {number} [span=1] - How many columns in a table this header cell forms.\n   */\n  constructor (featureValue, groupingFeature, span = 1) {\n    this.feature = groupingFeature\n    this.title = groupingFeature.getTitle(featureValue)\n    this.span = span\n\n    this.parent = undefined\n    this.children = []\n    this.columns = []\n\n    this.render()\n  }\n\n  /**\n   * Renders an element's HTML representation.\n   */\n  render () {\n    let element = document.createElement('div')\n    element.classList.add(Styles.classNames.cell, Styles.classNames.header, Styles.classNames.widthPrefix + this.span)\n    element.innerHTML = this.title\n    this.wNode = element\n    this.nNode = element.cloneNode(true)\n  }\n\n  /**\n   * Returns an HTML element for a wide view\n   * @returns {HTMLElement} HTML element for a wide view's cell.\n   */\n  get wvNode () {\n    return this.wNode\n  }\n\n  /**\n   * Returns an HTML element for a narrow view\n   * @returns {HTMLElement} HTML element for a narrow view's cell.\n   */\n  get nvNode () {\n    return this.nNode\n  }\n\n  /**\n   * Registers a column that's being formed by this header cell. Adds column to itself and to its parent(s).\n   * @param {Column} column - A column that is formed by this header cell.\n   */\n  addColumn (column) {\n    this.columns = this.columns.concat([column])\n\n    if (this.parent) {\n      this.parent.addColumn(column)\n    }\n  }\n\n  /**\n   * Temporary changes a width of a header cell. This happens when one or several columns\n   * that this header forms are hidden or shown.\n   * @param value\n   */\n  changeSpan (value) {\n    let currentWidthClass = Styles.classNames.widthPrefix + this.span\n    this.span += value\n    let newWidthClass = Styles.classNames.widthPrefix + this.span\n    this.wNode.classList.replace(currentWidthClass, newWidthClass)\n    this.nNode.classList.replace(currentWidthClass, newWidthClass)\n  }\n\n  /**\n   * This function will notify all parents and children of a title column that some columns under this headers cell\n   * changed their state (i.e. were hidden or shown). This way parents and children will be able to update their\n   * states accordingly.\n   */\n  columnStateChange () {\n    let visibleColumns = 0\n    for (let column of this.columns) {\n      if (!column.hidden) {\n        visibleColumns++\n      }\n    }\n    if (this.span !== visibleColumns) {\n      // Number of visible columns has been changed\n      let change = visibleColumns - this.span\n      this.changeSpan(change)\n\n      // Notify parents and children\n      if (this.children.length) {\n        for (let child of this.children) {\n          child.columnStateChange()\n        }\n      }\n      if (this.parent) {\n        this.parent.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Highlights a header cell, its parent and children\n   */\n  highlight () {\n    if (!this.wNode.classList.contains(Styles.classNames.highlight)) {\n      this.wNode.classList.add(Styles.classNames.highlight)\n      this.nNode.classList.add(Styles.classNames.highlight)\n\n      if (this.parent) {\n        this.parent.highlight()\n      }\n    }\n  }\n\n  /**\n   * Removes highlighting from a header cell, its parent and children\n   */\n  clearHighlighting () {\n    if (this.wNode.classList.contains(Styles.classNames.highlight)) {\n      this.wNode.classList.remove(Styles.classNames.highlight)\n      this.nNode.classList.remove(Styles.classNames.highlight)\n\n      if (this.parent) {\n        this.parent.clearHighlighting()\n      }\n    }\n  }\n}\n","import * as Styles from '../styles/styles'\nimport Row from './row'\nimport RowTitleCell from './row-title-cell'\n\n/**\n * Represents a group within a narrow view. A narrow view is split into separate sub tables\n * by values of a first grammatical feature that forms columns. Then each sub table would contain\n * a suffixes that belong to that grammatical feature value only. Each sub table becomes a\n * separated object and can be reflown on devices with narrow screens.\n */\nexport default class NarrowViewGroup {\n  // TODO: Review constructor parameters\n\n  /**\n   * Initializes a narrow view group. Please note that column, rows, and headers are those of a whole table,\n   * not of this particular group. NarrowViewGroup constructor will use this data to build\n   * the corresponding objects of the group itself.\n   * @param {number} index - An index of this group within a groups array, starting from zero.\n   * @param {Row[]} headers - Table headers.\n   * @param {Row[]} rows - Table rows.\n   * @param {number} titleColumnQty - Number of title columns in a table.\n   */\n  constructor (index, headers, rows, titleColumnQty) {\n    this.index = index\n    this.columns = headers[0].cells[index].columns\n    this.groupSize = this.columns.length\n    let columnsStartIndex = this.columns[0].index\n    let columnsEndIndex = this.columns[this.columns.length - 1].index\n\n    this.rows = []\n    for (let row of rows) {\n      this.rows.push(row.slice(columnsStartIndex, columnsEndIndex + 1))\n    }\n    this.headers = []\n    /**\n     * Since we group by the first column feature, there will be a single feature in a first header row,\n     * its children in the second row, children of its children in a third row and so on.\n     */\n    for (let [headerIndex, headerRow] of headers.entries()) {\n      let row = new Row()\n      row.titleCell = headerRow.titleCell\n      if (headerIndex === 0) {\n        row.cells.push(headerRow.cells[index])\n      } else {\n        for (let headerCell of this.headers[headerIndex - 1].cells) {\n          row.cells = row.cells.concat(headerCell.children)\n        }\n      }\n      this.headers.push(row)\n    }\n    this.titleColumnQty = titleColumnQty\n\n    this.nodes = document.createElement('div')\n    this.nodes.classList.add(Styles.classNames.inflectionTable, Styles.classNames.narrowView)\n  }\n\n  /**\n   * Calculates a number of visible columns in this view.\n   * @returns {number} A number of visible columns.\n   */\n  get visibleColumnQty () {\n    let qty = 0\n    for (let column of this.columns) {\n      if (!column.hidden) {\n        qty++\n      }\n    }\n    return qty\n  }\n\n  /**\n   * Renders an HTML representation of a narrow view group.\n   */\n  render () {\n    this.nodes.innerHTML = ''\n\n    if (this.visibleColumnQty) {\n      // This group is visible\n      for (let headerRow of this.headers) {\n        this.nodes.appendChild(headerRow.titleCell.getNvNode(this.index))\n        for (let headerCell of headerRow.cells) {\n          this.nodes.appendChild(headerCell.nvNode)\n        }\n      }\n\n      for (let row of this.rows) {\n        let titleCells = row.titleCell.hierarchyList\n        if (titleCells.length < this.titleColumnQty) {\n          this.nodes.appendChild(RowTitleCell.placeholder(this.titleColumnQty - titleCells.length))\n        }\n        for (let titleCell of titleCells) {\n          this.nodes.appendChild(titleCell.getNvNode(this.index))\n        }\n\n        for (let cell of row.cells) {\n          this.nodes.appendChild(cell.nvNode)\n        }\n      }\n      this.nodes.classList.remove(Styles.classNames.hidden)\n      this.nodes.style.gridTemplateColumns = 'repeat(' + (this.visibleColumnQty + this.titleColumnQty) + ', ' +\n        Styles.narrowView.column.width + Styles.narrowView.column.unit + ')'\n      this.nodes.style.width = (this.visibleColumnQty + this.titleColumnQty) * Styles.narrowView.column.width +\n        Styles.narrowView.column.unit\n    } else {\n      // This group is hidden\n      this.nodes.classList.add(Styles.classNames.hidden)\n    }\n  }\n}\n","import * as Styles from '../styles/styles'\nimport NarrowViewGroup from './narrow-view-group'\n\n/**\n * A representation of a table that is shown on narrow screens (mobile devices).\n */\nexport default class NarrowView {\n  /**\n   * Initializes a narrow view.\n   * @param {number} groupQty - A number of visible groups (sub tables) within a narrow view.\n   * @param {Column[]} columns - Table columns.\n   * @param {Row[]} rows - Table rows.\n   * @param {Row[]} headers - Table headers.\n   * @param {number} titleColumnQty - Number of title columns in a table.\n   */\n  constructor (groupQty, columns, rows, headers, titleColumnQty) {\n    this.columns = columns\n    this.rows = rows\n    this.headers = headers\n    this.titleColumnQty = titleColumnQty\n    this.groups = []\n    this.groupQty = groupQty\n    this.groupSize = 0\n    if (groupQty) {\n      this.groupSize = this.columns.length / groupQty\n    }\n\n    this.nodes = document.createElement('div')\n    this.nodes.classList.add(Styles.classNames.narrowViewsContainer)\n\n    for (let [index, headerCell] of this.headers[0].cells.entries()) {\n      this.createGroup(index, headerCell)\n    }\n  }\n\n  /**\n   * Creates a group within a table.\n   * @returns {NarrowViewGroup} A newly created group.\n   */\n  createGroup (index, headerCell) {\n    let group = new NarrowViewGroup(index, this.headers, this.rows, this.titleColumnQty)\n    this.nodes.appendChild(group.nodes)\n    this.groups.push(group)\n  }\n\n  /**\n   * Generates an HTML representation of a view.\n   * @returns {HTMLElement} - HTML representation of a view.\n   */\n  render () {\n    for (let group of this.groups) {\n      group.render()\n    }\n    return this.nodes\n  }\n}\n","/**\n * Stores group data during feature tree construction.\n */\nexport default class NodeGroup {\n  /**\n   * Creates feature group data structures.\n   */\n  constructor () {\n    this.subgroups = [] // Each value of the feature\n    this.cells = [] // All cells within this group and below\n    this.parent = undefined\n    this.header = undefined\n\n    this.groupFeatureType = undefined // Defines a feature type that forms a tree level this node is in.\n    this.ancestorFeatures = undefined // Defines feature values of this node's parents.\n  }\n}\n","import * as Styles from '../styles/styles'\n\n/**\n * A cell that specifies a title for a row in an inflection table.\n */\nexport default class RowTitleCell {\n  /**\n   * Initializes a row title cell.\n   * @param {string} title - A text that will be shown within the cell.\n   * @param {GroupFeatureType} groupingFeature - A grouping feature that specifies a row for which a title cell\n   * is created.\n   * @param {number} nvGroupQty - A number of narrow view groups. Because each group will be shown separately\n   * and will have its own title cells, we need to create a copy of a title cell for each such group.\n   */\n  constructor (title, groupingFeature, nvGroupQty) {\n    this.parent = undefined\n    this.title = title\n    this.feature = groupingFeature\n    this.nvGroupQty = nvGroupQty\n\n    this.render()\n  }\n\n  /**\n   * Renders an element's HTML representation.\n   */\n  render () {\n    // Generate HTML representation for a wide view node\n    this.wNode = document.createElement('div')\n    this.wNode.classList.add(Styles.classNames.cell)\n    this.wNode.classList.add(Styles.classNames.rowTitleCell)\n    if (this.feature.formsColumn) {\n      this.wNode.classList.add(Styles.classNames.header)\n    }\n    if (this.feature.hasFullWidthRowTitle) {\n      // This cell is taking an entire row\n      this.wNode.classList.add(Styles.classNames.fullWidth)\n    }\n    if (this.feature.formsColumn && this.feature.groupFeatureList.titleColumnsQuantity > 1) {\n      this.wNode.classList.add(Styles.classNames.widthPrefix + this.feature.groupFeatureList.titleColumnsQuantity)\n    }\n    this.wNode.innerHTML = this.title\n\n    // Copy HTML representation to all narrow view nodes (each narrow view group has its own node)\n    this.nNodes = [] // Narrow nodes, one for each group\n    for (let i = 0; i < this.nvGroupQty; i++) {\n      this.nNodes.push(this.wNode.cloneNode(true))\n    }\n  }\n\n  /**\n   * Returns an HTML element for a wide view\n   * @returns {HTMLElement} HTML element for a wide view's cell.\n   */\n  get wvNode () {\n    return this.wNode\n  }\n\n  /**\n   * Returns an array HTML element for narrow view groups\n   * @returns {HTMLElement[]} Array of HTML elements for narrow view group's cells.\n   */\n  getNvNode (index) {\n    return this.nNodes[index]\n  }\n\n  /**\n   * Generates an empty cell placeholder of a certain width. Useful for situation when empty title cells need to be\n   * inserted into a table structure (i.e. when title cells occupy multiple columns.\n   * @param {number} width - A number of columns placeholder cell will occupy.\n   * @returns {HTMLElement} HTML element of a placeholder cell.\n   */\n  static placeholder (width = 1) {\n    let placeholder = document.createElement('div')\n    placeholder.classList.add(Styles.classNames.cell, Styles.classNames.widthPrefix + width)\n    return placeholder\n  }\n\n  /**\n   * Some table layouts require multiple title cells to be shown for a row. These could be, for example, a title\n   * cell for a parent category that will follow a title cell for a category that defines a row. In such situation a\n   * title cell will have a parent, which will represent a parent cell object.\n   * This function returns an array of title cells for a row, starting from the topmost parent and moving down\n   * tot the current title cell.\n   * @returns {RowTitleCell[]} An array of title row cells representing a title cell hierarchy list.\n   */\n  get hierarchyList () {\n    let parentCells = []\n    if (this.parent) {\n      parentCells = this.parent.hierarchyList\n    }\n    return parentCells.concat(this)\n  }\n\n  /**\n   * Highlights this row title cell\n   */\n  highlight () {\n    this.wNode.classList.add(Styles.classNames.highlight)\n    for (let nNode of this.nNodes) {\n      nNode.classList.add(Styles.classNames.highlight)\n    }\n  }\n\n  /**\n   * Removes highlighting from this row title cell\n   */\n  clearHighlighting () {\n    this.wNode.classList.remove(Styles.classNames.highlight)\n    for (let nNode of this.nNodes) {\n      nNode.classList.remove(Styles.classNames.highlight)\n    }\n  }\n}\n","/**\n * Represents a row of cells\n */\nexport default class Row {\n  /**\n   * Populates row with cells\n   * @param {Cell[]} cells - Cells that belong to this row\n   */\n  constructor (cells) {\n    this.cells = cells\n    if (!cells) {\n      this.cells = []\n    }\n    this.titleCell = undefined\n\n    for (let cell of this.cells) {\n      cell.row = this\n    }\n  }\n\n  /**\n   * Adds a cell to the row.\n   * This is a chainable function.\n   * @param {Cell} cell - A cell to be added to the row\n   */\n  add (cell) {\n    cell.row = this\n    this.cells.push(cell)\n    return this\n  }\n\n  /**\n   * Returns a number of cells in a row\n   * @returns {Number} A number of cells in a row\n   */\n  get length () {\n    return this.cells.length\n  }\n\n  get empty () {\n    return this.cells.filter(c => !c.empty).length === 0\n  }\n\n  /**\n   * Returns a portion of a cells array starting from `from` item and up to, but not including, `upto` element.\n   * It does not create new copies of cells to populate a newly created array; this array contains references to\n   * the same cells that original Row refers to. It also does not update row reference within Cell objects.\n   *\n   * This function presents a way to create another structure of existing table's cells.\n   * It can be useful for views that have a different structure (i.e. narrow view).\n   * @param {number} from\n   * @param {number} upto\n   */\n  slice (from, upto) {\n    let slice = new Row()\n    if (from < 0 && from > this.cells.length) {\n      throw new Error('\"from\" parameter is out of range.')\n    }\n    if (upto < 0 && upto > this.cells.length) {\n      throw new Error('\"upto\" parameter is out of range.')\n    }\n    for (let index = from; index < upto; index++) {\n      slice.cells.push(this.cells[index])\n    }\n    slice.titleCell = this.titleCell\n    return slice\n  }\n\n  /**\n   * Highlights all cells in a row, and a title cells\n   */\n  highlight () {\n    for (let cell of this.cells) {\n      cell.highlight()\n    }\n    if (this.titleCell) {\n      this.titleCell.highlight()\n    }\n  }\n\n  /**\n   * Removes highlighting from all cells in a row, and from a title cell\n   */\n  clearHighlighting () {\n    for (let cell of this.cells) {\n      cell.clearHighlighting()\n    }\n    if (this.titleCell) {\n      this.titleCell.clearHighlighting()\n    }\n  }\n}\n","import Suffix from '../../lib/suffix'\nimport Cell from './cell'\nimport HeaderCell from './header-cell'\nimport Column from './column'\nimport Row from './row'\nimport GroupFeatureList from './group-feature-list'\nimport NodeGroup from './node-group'\nimport NarrowView from './narrow-view'\nimport WideView from './wide-view'\n\n/**\n * Represents an inflection table.\n */\nexport default class Table {\n  /**\n   * Initializes an inflection table.\n   * @param {GroupFeatureType[]} features - An array of grouping features. An order of elements in this array\n   */\n  constructor (features) {\n    this.features = new GroupFeatureList(features)\n    this.emptyColumnsHidden = false\n    this.cells = [] // Will be populated by groupByFeature()\n\n    /*\n    This is a special filter function that, if defined will do additional filtering of suffixes within a cell.\n     */\n    this.suffixCellFilter = undefined\n  }\n\n  /**\n   * Creates a table tree and other data structures (columns, rows, headers).\n   * This function is chainabe.\n   * @param {Suffix[]} suffixes - An array of suffixes to build table from.\n   * @returns {Table} Reference to self for chaining.\n   */\n  construct (suffixes) {\n    this.suffixes = suffixes\n    this.tree = this.groupByFeature(suffixes)\n    this.headers = this.constructHeaders()\n    this.columns = this.constructColumns()\n    this.rows = this.constructRows()\n    this.emptyColumnsHidden = false\n    this.canCollapse = this._hasAnyMatches()\n    return this\n  }\n\n  /**\n   * Builds wide and narrow views of the table.\n   * This function is chainabe.\n   * @returns {Table} Reference to self for chaining.\n   */\n  constructViews () {\n    this.wideView = new WideView(this.columns, this.rows, this.headers, this.titleColumnQty)\n    this.narrowView = new NarrowView(\n      this.features.firstColumnFeature.size, this.columns, this.rows, this.headers, this.titleColumnQty)\n    return this\n  }\n\n  /**\n   * Returns a number of columns with suffix cells in a table.\n   * @returns {number} A number of columns with suffix cells in a table.\n   */\n  get suffixColumnQty () {\n    if (!this.columns) {\n      throw new Error('Columns are not populated yet.')\n    }\n    return this.columns.length\n  }\n\n  /**\n   * Returns a number of columns with row titles in a table.\n   * @returns {number} A number of columns with row titles.\n   */\n  get titleColumnQty () {\n    if (!this.features) {\n      throw new Error('Features are not defined.')\n    }\n    return this.features.titleColumnsQuantity\n  }\n\n  /**\n   * Returns a number of rows with suffix cells in a table.\n   * @returns {number} A number of rows with suffix cells.\n   */\n  get suffixRowQty () {\n    if (!this.columns) {\n      throw new Error('Columns are not populated yet.')\n    }\n    return this.columns[0].length\n  }\n\n  /**\n   * Groups all suffixes into a tree according to their grammatical features. There are several levels in this tree.\n   * Each level corresponds to a one grouping feature. The order of items in GroupingFeatures List object\n   * defines an order of those levels.\n   * Nodes on each level are values of a grammatical feature that forms this level. An order of those values\n   * is determined by the order of values within a GroupFeatureType object of each feature.\n   * This is a recursive function.\n   * @param {Suffix[]} suffixes - Suffixes to be grouped.\n   * @param {GrmFeature[]} ancestorFeatures - A list of feature values on levels above the current.\n   * @param {number} currentLevel - At what level in a tree we are now. Used to stop recursion.\n   * @returns {NodeGroup} A top level group of suffixes that contain subgroups all way down to the last group.\n   */\n  groupByFeature (suffixes, ancestorFeatures = [], currentLevel = 0) {\n    let group = new NodeGroup()\n    group.groupFeatureType = this.features.items[currentLevel]\n    group.ancestorFeatures = ancestorFeatures.slice()\n\n    // Iterate over each value of the feature\n    for (const featureValue of group.groupFeatureType.getOrderedFeatures(ancestorFeatures)) {\n      if (ancestorFeatures.length > 0 && ancestorFeatures[ancestorFeatures.length - 1].type === group.groupFeatureType.type) {\n        // Remove previously inserted feature of the same type\n        ancestorFeatures.pop()\n      }\n      ancestorFeatures.push(featureValue)\n\n      // Suffixes that are selected for current combination of feature values\n      // let selectedSuffixes = suffixes.filter(group.groupFeatureType.filter.bind(group.groupFeatureType, featureValue.value))\n      let selectedSuffixes = suffixes.filter(s => s.featureMatch(featureValue))\n\n      if (currentLevel < this.features.length - 1) {\n        // Divide to further groups\n        let subGroup = this.groupByFeature(selectedSuffixes, ancestorFeatures, currentLevel + 1)\n        group.subgroups.push(subGroup)\n        group.cells = group.cells.concat(subGroup.cells)\n      } else {\n        // This is the last level. This represent a cell with suffixes\n        // Split result has a list of suffixes in a table cell. We need to combine items with same endings.\n        if (selectedSuffixes.length > 0) {\n          if (this.suffixCellFilter) {\n            selectedSuffixes = selectedSuffixes.filter(this.suffixCellFilter)\n          }\n\n          selectedSuffixes = Suffix.combine(selectedSuffixes)\n        }\n\n        let cell = new Cell(selectedSuffixes, ancestorFeatures.slice())\n        group.subgroups.push(cell)\n        group.cells.push(cell)\n        this.cells.push(cell)\n        cell.index = this.cells.length - 1\n      }\n    }\n    ancestorFeatures.pop()\n    return group\n  }\n\n  /**\n   * Create columns out of a suffixes organized into a tree.\n   * This is a recursive function.\n   * @param {NodeGroup} tree - A tree of suffixes.\n   * @param {Column[]} columns - An array of columns to be constructed.\n   * @param {number} currentLevel - Current recursion level.\n   * @returns {Array} An array of columns of suffix cells.\n   */\n  constructColumns (tree = this.tree, columns = [], currentLevel = 0) {\n    let currentFeature = this.features.items[currentLevel]\n\n    let groups = []\n    for (let [index, featureValue] of currentFeature.getOrderedValues(tree.ancestorFeatures).entries()) {\n      let cellGroup = tree.subgroups[index]\n\n      // Iterate until it is the last row feature\n      if (!currentFeature.isSameType(this.features.lastRowFeature)) {\n        let currentResult = this.constructColumns(cellGroup, columns, currentLevel + 1)\n        if (currentFeature.formsRow) {\n          // TODO: Avoid creating extra cells\n\n          let group = {\n            titleText: featureValue,\n            groups: currentResult,\n            titleCell: currentFeature.createTitleCell(featureValue, this.features.firstColumnFeature.size)\n          }\n          group.groups[0].titleCell.parent = group.titleCell\n          groups.push(group)\n        } else if (currentFeature.isSameType(this.features.lastColumnFeature)) {\n          let column = new Column(cellGroup.cells)\n          column.groups = currentResult\n          column.header = featureValue\n          column.index = columns.length\n          columns.push(column)\n          column.headerCell = this.headers[this.headers.length - 1].cells[columns.length - 1]\n        }\n      } else {\n        // Last level\n        cellGroup.titleCell = currentFeature.createTitleCell(featureValue, this.features.firstColumnFeature.size)\n        let group = {\n          titleText: featureValue,\n          cell: cellGroup,\n          titleCell: cellGroup.titleCell\n        }\n        groups.push(group)\n      }\n    }\n    if (currentFeature.formsRow) {\n      return groups\n    }\n    return columns\n  }\n\n  /**\n   * Creates an array of header cell rows.\n   * This is a recursive function.\n   * @param {NodeGroup} tree - A tree of suffixes.\n   * @param {Row[]} headers - An array of rows with header cells.\n   * @param {number} currentLevel - Current recursion level.\n   * @returns {Array} A two-dimensional array of header cell rows.\n   */\n  constructHeaders (tree = this.tree, headers = [], currentLevel = 0) {\n    let currentFeature = this.features.columnFeatures[currentLevel]\n\n    let cells = []\n    for (let [index, featureValue] of currentFeature.getOrderedValues(tree.ancestorFeatures).entries()) {\n      let cellGroup = tree.subgroups[index]\n\n      // Iterate over all column features (features that form columns)\n      if (currentLevel < this.features.columnFeatures.length - 1) {\n        let subCells = this.constructHeaders(cellGroup, headers, currentLevel + 1)\n\n        let columnSpan = 0\n        for (let cell of subCells) {\n          columnSpan += cell.span\n        }\n\n        let headerCell = new HeaderCell(featureValue, currentFeature, columnSpan)\n        headerCell.children = subCells\n        for (let cell of subCells) {\n          cell.parent = headerCell\n        }\n\n        if (!headers[currentLevel]) {\n          headers[currentLevel] = new Row()\n        }\n        headers[currentLevel].titleCell = currentFeature.createTitleCell(\n          this.messages.get(currentFeature.groupTitle), this.features.firstColumnFeature.size)\n\n        headers[currentLevel].add(headerCell)\n        cells.push(headerCell)\n      } else {\n        // Last level\n        let headerCell = new HeaderCell(featureValue, currentFeature)\n\n        if (!headers[currentLevel]) {\n          headers[currentLevel] = new Row()\n        }\n\n        headers[currentLevel].add(headerCell)\n        headers[currentLevel].titleCell = currentFeature.createTitleCell(\n          this.messages.get(currentFeature.groupTitle), this.features.firstColumnFeature.size)\n        cells.push(headerCell)\n      }\n    }\n    if (currentLevel === 0) {\n      return headers\n    } else {\n      return cells\n    }\n  }\n\n  /**\n   * Creates an array of rows by parsing an array of columns.\n   * @returns {Row[]} An array of rows.\n   */\n  constructRows () {\n    let rows = []\n    for (let rowIndex = 0; rowIndex < this.suffixRowQty; rowIndex++) {\n      rows[rowIndex] = new Row()\n      rows[rowIndex].titleCell = this.columns[0].cells[rowIndex].titleCell\n      for (let columnIndex = 0; columnIndex < this.suffixColumnQty; columnIndex++) {\n        rows[rowIndex].add(this.columns[columnIndex].cells[rowIndex])\n      }\n    }\n    rows = rows.filter(r => !r.empty)\n    return rows\n  }\n\n  /**\n   * Adds event listeners to each cell object.\n   */\n  addEventListeners () {\n    for (let cell of this.cells) {\n      cell.addEventListener('mouseenter', this.highlightRowAndColumn.bind(this))\n      cell.addEventListener('mouseleave', this.clearRowAndColumnHighlighting.bind(this))\n    }\n  }\n\n  /**\n   * Highlights a row and a column this cell is in.\n   * @param {Event} event - An event that triggers this function.\n   */\n  highlightRowAndColumn (event) {\n    let index = event.currentTarget.dataset.index\n    this.cells[index].highlightRowAndColumn()\n  }\n\n  /**\n   * Removes highlighting from row and a column this cell is in.\n   * @param {Event} event - An event that triggers this function.\n   */\n  clearRowAndColumnHighlighting (event) {\n    let index = event.currentTarget.dataset.index\n    this.cells[index].clearRowAndColumnHighlighting()\n  }\n\n  /**\n   * Hides empty columns in a table.\n   */\n  hideEmptyColumns () {\n    for (let column of this.columns) {\n      if (column.empty) {\n        column.hide()\n      }\n    }\n    this.emptyColumnsHidden = true\n  }\n\n  /**\n   * Show all empty columns that were previously hidden.\n   */\n  showEmptyColumns () {\n    for (let column of this.columns) {\n      if (column.hidden) {\n        column.show()\n      }\n    }\n    this.emptyColumnsHidden = false\n  }\n\n  /**\n   * Check for any matched suffixes\n   */\n  _hasAnyMatches () {\n    let hasMatches = false\n    if (this.headers.length > 0) {\n      for (let headerCell of this.headers[0].cells) {\n        hasMatches = !!headerCell.columns.find(column => column.suffixMatches)\n        if (hasMatches) {\n          break\n        }\n      }\n    }\n    return hasMatches\n  }\n\n  /**\n   * Hide groups that have no suffix matches.\n   */\n  hideNoSuffixGroups () {\n    for (let headerCell of this.headers[0].cells) {\n      let matches = !!headerCell.columns.find(column => column.suffixMatches)\n      if (!matches) {\n        for (let column of headerCell.columns) {\n          column.hide()\n        }\n      }\n    }\n    this.suffixMatchesHidden = true\n  }\n\n  /**\n   * Show groups that have no suffix matches.\n   */\n  showNoSuffixGroups () {\n    for (let column of this.columns) {\n      column.show()\n    }\n    if (this.emptyColumnsHidden) {\n      this.hideEmptyColumns()\n    }\n    this.suffixMatchesHidden = false\n  }\n}\n","import {Constants} from 'alpheios-data-models'\n// Latin views\nimport LatinNounView from '../lang/latin/noun/latin-noun-view.js'\nimport LatinAdjectiveView from '../lang/latin/adjective/latin-adjective-view.js'\nimport LatinVoiceConjugationMoodView from '../lang/latin/verb/latin-voice-conjugation-mood-view.js'\nimport LatinVoiceMoodConjugationView from '../lang/latin/verb/latin-voice-mood-conjugation-view.js'\nimport LatinConjugationVoiceMoodView from '../lang/latin/verb/latin-conjugation-voice-mood-view.js'\nimport LatinConjugationMoodVoiceView from '../lang/latin/verb/latin-conjugation-mood-voice-view.js'\nimport LatinMoodVoiceConjugationView from '../lang/latin/verb/latin-mood-voice-conjugation-view.js'\nimport LatinMoodConjugationVoiceView from '../lang/latin/verb/latin-mood-conjugation-voice-view.js'\nimport LatinImperativeView from '../lang/latin/verb/latin-imperative-view.js'\nimport LatinSupineView from '../lang/latin/noun/latin-supine-view.js'\nimport LatinVerbParticipleView from '../lang/latin/verb/latin-verb-participle-view.js'\nimport LatinInfinitiveView from '../lang/latin/verb/latin-infinitive-view.js'\n\n// Greek views\nimport GreekNounView from '../lang/greek/noun/greek-noun-view.js'\nimport GreekNounSimplifiedView from '../lang/greek/noun/greek-noun-simplified-view.js'\nimport GreekGenderPronounView from '../lang/greek/pronoun/greek-gender-pronoun-view.js'\nimport GreekLemmaGenderPronounView from '../lang/greek/pronoun/greek-lemma-gender-pronoun-view.js'\nimport GreekPersonGenderPronounView from '../lang/greek/pronoun/greek-person-gender-pronoun-view.js'\nimport GreekPersonPronounView from '../lang/greek/pronoun/greek-person-pronoun-view.js'\nimport GreekParadigmView from '../lang/greek/paradigm/greek-paradigm-view.js'\n\n/**\n * A set of inflection table views that represent all possible forms of inflection data. A new ViewSet instance\n * mast be created for each new inflection data piece.\n */\nexport default class ViewSet {\n  constructor (inflectionData, locale) {\n    this.views = new Map([\n      [\n        Constants.LANG_LATIN,\n        [\n          LatinNounView,\n          LatinAdjectiveView,\n          LatinVoiceConjugationMoodView,\n          LatinVoiceMoodConjugationView,\n          LatinConjugationVoiceMoodView,\n          LatinConjugationMoodVoiceView,\n          LatinMoodVoiceConjugationView,\n          LatinMoodConjugationVoiceView,\n          LatinImperativeView,\n          LatinSupineView,\n          LatinVerbParticipleView,\n          LatinInfinitiveView\n        ]\n      ],\n      [\n        Constants.LANG_GREEK,\n        [\n          GreekNounView,\n          GreekNounSimplifiedView,\n          GreekGenderPronounView,\n          GreekPersonGenderPronounView,\n          GreekPersonPronounView,\n          GreekLemmaGenderPronounView,\n          GreekParadigmView\n        ]\n      ]\n    ])\n    this.inflectionData = inflectionData\n    this.languageID = this.inflectionData.languageID\n    this.locale = locale\n    this.matchingViews = []\n\n    if (this.views.has(this.languageID)) {\n      for (let view of this.views.get(this.languageID)) {\n        this.matchingViews.push(...view.getMatchingInstances(this.inflectionData, this.messages))\n      }\n    }\n    this.partsOfSpeech = Array.from(new Set(this.matchingViews.map(view => view.constructor.partOfSpeech)))\n  }\n\n  getViews (partOfSpeech = undefined) {\n    if (partOfSpeech) {\n      return this.matchingViews.filter(view => view.constructor.partOfSpeech === partOfSpeech)\n    } else {\n      return this.matchingViews\n    }\n  }\n\n  updateMessages (messages) {\n    this.messages = messages\n    for (let view of this.matchingViews) {\n      view.updateMessages(messages)\n    }\n  }\n\n  setLocale (locale) {\n    for (let view of this.matchingViews) {\n      view.setLocale(locale)\n    }\n  }\n}\n","import { LanguageModelFactory } from 'alpheios-data-models'\nimport uuidv4 from 'uuid/v4'\nimport L10n from '../../l10n/l10n.js'\n\n/**\n * Represents a single view.\n */\nexport default class View {\n  /**\n   * Initializes a View object with options. There is at least one view per part of speech,\n   * but there could be several views for the same part of speech that show different table representation of a view.\n   * @param {InflectionData} inflectionData - An inflection data object.\n   * @param {string} locale - A locale for serving localized messages. If none provided, a default language will be used.\n   */\n  constructor (inflectionData, locale = L10n.defaultLocale) {\n    this.languageID = View.languageID\n    this.inflectionData = inflectionData\n    this.messages = L10n.getMessages(locale)\n    this.pageHeader = {}\n\n    // An HTML element where this view is rendered\n    this.container = undefined\n\n    // Must be implemented in a descendant\n    this.id = uuidv4() // A unique ID of a view instance. Can be used as a value in view selectors.\n    this.name = 'base view'\n    this.title = 'Base View'\n    this.hasComponentData = false // True if vue supports Vue.js components\n\n    this.forms = new Set()\n    this.table = {}\n  }\n\n  /**\n   * Defines a language ID of a view. Should be redefined in child classes.\n   * @return {symbol}\n   */\n  static get languageID () {\n    return Symbol('Undefined language')\n  }\n\n  /**\n   * Defines a part of speech of a view. Should be redefined in child classes.\n   * @return {string | undefined}\n   */\n  static get partOfSpeech () {\n  }\n\n  /**\n   * Defines an inflection type (Suffix/Form) of a view. Should be redefined in child classes.\n   * @return {Function | undefined}\n   */\n  static get inflectionType () {\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (inflectionData) {\n    if (LanguageModelFactory.compareLanguages(View.languageID, inflectionData.languageID)) {\n      return inflectionData.partsOfSpeech.includes(View.partOfSpeech) && View.enabledForLexemes(inflectionData.homonym.lexemes)\n    }\n  }\n\n  /**\n   * Finds out what views match inflection data and return initialized instances of those views.\n   * By default only one instance of the view is returned, by views can override this method\n   * to return multiple views if necessary (e.g. paradigm view can return multiple instances of the view\n   * with different data).\n   * @param {InflectionData} inflectionData\n   * @param {MessageBundle} messages\n   * @return {View[] | []} Array of view instances or an empty array if view instance does not match inflection data.\n   */\n  static getMatchingInstances (inflectionData, messages) {\n    if (this.matchFilter(inflectionData)) {\n      return [new this(inflectionData, messages)]\n    }\n    return []\n  }\n\n  /**\n   * test to see if a view is enabled for a specific set of lexemes\n   * @param {Lexeme[]} lexemes\n   * @return {boolean} true if the view should be shown false if not\n   */\n  static enabledForLexemes (lexemes) {\n    // default returns true\n    return true\n  }\n\n  get locale () {\n    return this.messages.locale\n  }\n\n  setLocale (locale) {\n    if (this.locale !== locale) {\n      this.messages = L10n.getMessages(locale)\n    }\n    return this\n  }\n\n  /**\n   * Converts an InflectionData, returned from an inflection tables library, into an HTML representation of an inflection table.\n   * `messages` provides a translation for view's texts.\n   */\n  render () {\n    this.footnotes = this.getFootnotes(this.inflectionData)\n    // Table is already created during a view construction\n    this.table.messages = this.messages\n    for (let lexeme of this.inflectionData.homonym.lexemes) {\n      for (let inflection of lexeme.inflections) {\n        if (inflection['part of speech'].values.includes(this.constructor.partOfSpeech)) {\n          let form = inflection.prefix ? `${inflection.prefix} - ` : ''\n          form = form + inflection.stem\n          form = inflection.suffix ? `${form} - ${inflection.suffix}` : form\n          this.forms.add(form)\n        }\n      }\n    }\n    this.table.construct(this.constructor.getMorphemes(this.inflectionData)).constructViews().addEventListeners()\n    return this\n  }\n\n  /**\n   * A compatibility function to get morphemes, either suffixes or forms, depending on the view type.\n   * By default, it returns suffixes\n   * @param {InflectionData} inflectionData\n   */\n  static getMorphemes (inflectionData) {\n    return inflectionData.pos.get(this.partOfSpeech).types.get(this.inflectionType).items\n  }\n\n  /**\n   * A compatibility function to get footnotes for either suffixes or forms, depending on the view type\n   * @param {InflectionData} inflectionData\n   */\n  getFootnotes (inflectionData) {\n    return inflectionData.pos.get(this.constructor.partOfSpeech).types.get(this.constructor.inflectionType).footnotesMap\n  }\n\n  get wideViewNodes () {\n    return this.table.wideView.render()\n  }\n\n  get narrowViewNodes () {\n    return this.table.narrowView.render()\n  }\n\n  /**\n   * Hides all empty columns of the view.\n   */\n  hideEmptyColumns () {\n    this.table.hideEmptyColumns()\n    return this\n  }\n\n  /**\n   * Displays all previously hidden columns.\n   */\n  showEmptyColumns () {\n    this.table.showEmptyColumns()\n    return this\n  }\n\n  /**\n   * Hides groups (formed by first column feature) that have no suffix matches.\n   */\n  hideNoSuffixGroups () {\n    if (this.table.canCollapse) {\n      this.table.hideNoSuffixGroups()\n    }\n    return this\n  }\n\n  /**\n   * Displays previously hidden groups with no suffix matches.\n   */\n  showNoSuffixGroups () {\n    this.table.showNoSuffixGroups()\n    return this\n  }\n\n  /**\n   * A utility function to convert a string to a Sentence case.\n   * @param {string} string - A source string.\n   * @return {string} A string capitalized to a Sentence case.\n   */\n  static toSentenceCase (string) {\n    string = string.toLowerCase()\n    return string[0].toUpperCase() + string.substr(1)\n  }\n\n  /**\n   * A utility function to convert a string to a Title Case.\n   * @param {string} string - A source string.\n   * @return {string} A string capitalized to a Title Case.\n   */\n  static toTitleCase (string) {\n    return string\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.length >= 1 ? `${word[0].toUpperCase()}${word.substr(1)}` : '')\n      .join(' ')\n  }\n}\n","import * as Styles from '../styles/styles'\nimport RowTitleCell from './row-title-cell'\n\n/**\n * A representation of a table that is shown on wide screens (desktops).\n */\nexport default class WideView {\n  /**\n   * Initializes a wide view.\n   * @param {Column[]} columns - Table columns.\n   * @param {Row[]} rows - Table rows.\n   * @param {Row[]} headers - Table headers.\n   * @param {number} titleColumnQty - Number of title columns in a table.\n   */\n  constructor (columns, rows, headers, titleColumnQty) {\n    this.columns = columns\n    this.rows = rows\n    this.headers = headers\n    this.titleColumnQty = titleColumnQty\n    this.nodes = document.createElement('div')\n    this.nodes.classList.add(Styles.classNames.inflectionTable, Styles.classNames.wideView)\n  }\n\n  /**\n   * Calculates a number of visible columns in this view.\n   * @returns {number} A number of visible columns.\n   */\n  get visibleColumnQty () {\n    let qty = 0\n    for (let column of this.columns) {\n      if (!column.hidden) {\n        qty++\n      }\n    }\n    return qty\n  }\n\n  /**\n   * Renders an HTML representation of a wide table view.\n   * @returns {HTMLElement} A rendered HTML Element.\n   */\n  render () {\n    // Remove any previously inserted nodes\n    this.nodes.innerHTML = ''\n\n    for (let row of this.headers) {\n      this.nodes.appendChild(row.titleCell.wvNode)\n      for (let cell of row.cells) {\n        this.nodes.appendChild(cell.wvNode)\n      }\n    }\n\n    for (let row of this.rows) {\n      let titleCells = row.titleCell.hierarchyList\n      if (titleCells.length < this.titleColumnQty) {\n        this.nodes.appendChild(RowTitleCell.placeholder(this.titleColumnQty - titleCells.length))\n      }\n      for (let titleCell of titleCells) {\n        this.nodes.appendChild(titleCell.wvNode)\n      }\n\n      for (let cell of row.cells) {\n        this.nodes.appendChild(cell.wvNode)\n      }\n    }\n    this.nodes.style.gridTemplateColumns = 'repeat(' + (this.visibleColumnQty + this.titleColumnQty) + ', ' +\n      Styles.wideView.column.width + Styles.wideView.column.unit + ')'\n\n    return this.nodes\n  }\n}\n","let classNames = {\n  cell: 'infl-cell',\n  rowTitleCell: 'row-title-cell',\n  widthPrefix: 'infl-cell--sp',\n  fullWidth: 'infl-cell--fw',\n  header: 'infl-cell--hdr',\n  highlight: 'infl-cell--hl',\n  hidden: 'hidden',\n  suffix: 'infl-suff',\n  suffixMatch: 'infl-suff--suffix-match',\n  suffixFullFeatureMatch: 'infl-suff--full-feature-match',\n  inflectionTable: 'infl-table',\n  wideView: 'infl-table--wide',\n  narrowViewsContainer: 'infl-table-narrow-views-cont',\n  narrowView: 'infl-table--narrow',\n  footnotesContainer: 'infl-footnotes'\n}\n\nlet wideView = {\n  column: {\n    width: 1,\n    unit: 'fr'\n  }\n}\n\nlet narrowView = {\n  column: {\n    width: 100,\n    unit: 'px'\n  }\n}\n\nlet footnotes = {\n  id: 'inlection-table-footer'\n}\n\nlet pageHeader = {\n  html: `\n        <button id=\"hide-empty-columns\" class=\"switch-btn\">Hide empty columns</button><button id=\"show-empty-columns\" class=\"switch-btn hidden\">Show empty columns</button>\n        <button id=\"hide-no-suffix-groups\" class=\"switch-btn\">Hide top-level groups with no suffix matches</button><button id=\"show-no-suffix-groups\" class=\"switch-btn hidden\">Show top-level groups with no suffix matches</button><br>\n        <p>Hover over the suffix to see its grammar features</p>\n        `,\n  hideEmptyColumnsBtnSel: '#hide-empty-columns',\n  showEmptyColumnsBtnSel: '#show-empty-columns',\n  hideNoSuffixGroupsBtnSel: '#hide-no-suffix-groups',\n  showNoSuffixGroupsBtnSel: '#show-no-suffix-groups'\n}\n\nexport { classNames, wideView, narrowView, footnotes, pageHeader }\n","module.exports = __WEBPACK_EXTERNAL_MODULE_alpheios_data_models__;","module.exports = __WEBPACK_EXTERNAL_MODULE_intl_messageformat__;"],"sourceRoot":""}